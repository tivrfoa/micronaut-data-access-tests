package com.google.protobuf;

import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public final class DescriptorProtos {
   private static final Descriptors.Descriptor internal_static_google_protobuf_FileDescriptorSet_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(0);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_FileDescriptorSet_descriptor, new String[]{"File"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_FileDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(1);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_FileDescriptorProto_descriptor,
      new String[]{
         "Name",
         "Package",
         "Dependency",
         "PublicDependency",
         "WeakDependency",
         "MessageType",
         "EnumType",
         "Service",
         "Extension",
         "Options",
         "SourceCodeInfo",
         "Syntax"
      }
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_DescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(2);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_DescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_DescriptorProto_descriptor,
      new String[]{"Name", "Field", "Extension", "NestedType", "EnumType", "ExtensionRange", "OneofDecl", "Options", "ReservedRange", "ReservedName"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor = (Descriptors.Descriptor)internal_static_google_protobuf_DescriptorProto_descriptor.getNestedTypes(
         
      )
      .get(0);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor, new String[]{"Start", "End", "Options"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor = (Descriptors.Descriptor)internal_static_google_protobuf_DescriptorProto_descriptor.getNestedTypes(
         
      )
      .get(1);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor, new String[]{"Start", "End"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_ExtensionRangeOptions_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(3);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_ExtensionRangeOptions_descriptor, new String[]{"UninterpretedOption"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_FieldDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(4);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_FieldDescriptorProto_descriptor,
      new String[]{"Name", "Number", "Label", "Type", "TypeName", "Extendee", "DefaultValue", "OneofIndex", "JsonName", "Options", "Proto3Optional"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_OneofDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(5);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_OneofDescriptorProto_descriptor, new String[]{"Name", "Options"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_EnumDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(6);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_EnumDescriptorProto_descriptor, new String[]{"Name", "Value", "Options", "ReservedRange", "ReservedName"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor = (Descriptors.Descriptor)internal_static_google_protobuf_EnumDescriptorProto_descriptor.getNestedTypes(
         
      )
      .get(0);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor, new String[]{"Start", "End"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_EnumValueDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(7);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_EnumValueDescriptorProto_descriptor, new String[]{"Name", "Number", "Options"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_ServiceDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(8);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_ServiceDescriptorProto_descriptor, new String[]{"Name", "Method", "Options"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_MethodDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(9);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_MethodDescriptorProto_descriptor,
      new String[]{"Name", "InputType", "OutputType", "Options", "ClientStreaming", "ServerStreaming"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_FileOptions_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(10);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FileOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_FileOptions_descriptor,
      new String[]{
         "JavaPackage",
         "JavaOuterClassname",
         "JavaMultipleFiles",
         "JavaGenerateEqualsAndHash",
         "JavaStringCheckUtf8",
         "OptimizeFor",
         "GoPackage",
         "CcGenericServices",
         "JavaGenericServices",
         "PyGenericServices",
         "PhpGenericServices",
         "Deprecated",
         "CcEnableArenas",
         "ObjcClassPrefix",
         "CsharpNamespace",
         "SwiftPrefix",
         "PhpClassPrefix",
         "PhpNamespace",
         "PhpMetadataNamespace",
         "RubyPackage",
         "UninterpretedOption"
      }
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_MessageOptions_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(11);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_MessageOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_MessageOptions_descriptor,
      new String[]{"MessageSetWireFormat", "NoStandardDescriptorAccessor", "Deprecated", "MapEntry", "UninterpretedOption"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_FieldOptions_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(12);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FieldOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_FieldOptions_descriptor,
      new String[]{"Ctype", "Packed", "Jstype", "Lazy", "UnverifiedLazy", "Deprecated", "Weak", "UninterpretedOption"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_OneofOptions_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(13);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_OneofOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_OneofOptions_descriptor, new String[]{"UninterpretedOption"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_EnumOptions_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(14);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_EnumOptions_descriptor, new String[]{"AllowAlias", "Deprecated", "UninterpretedOption"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_EnumValueOptions_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(15);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_EnumValueOptions_descriptor, new String[]{"Deprecated", "UninterpretedOption"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_ServiceOptions_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(16);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_ServiceOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_ServiceOptions_descriptor, new String[]{"Deprecated", "UninterpretedOption"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_MethodOptions_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(17);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_MethodOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_MethodOptions_descriptor, new String[]{"Deprecated", "IdempotencyLevel", "UninterpretedOption"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_UninterpretedOption_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(18);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_UninterpretedOption_descriptor,
      new String[]{"Name", "IdentifierValue", "PositiveIntValue", "NegativeIntValue", "DoubleValue", "StringValue", "AggregateValue"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor = (Descriptors.Descriptor)internal_static_google_protobuf_UninterpretedOption_descriptor.getNestedTypes(
         
      )
      .get(0);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor, new String[]{"NamePart", "IsExtension"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_SourceCodeInfo_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(19);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_SourceCodeInfo_descriptor, new String[]{"Location"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_SourceCodeInfo_Location_descriptor = (Descriptors.Descriptor)internal_static_google_protobuf_SourceCodeInfo_descriptor.getNestedTypes(
         
      )
      .get(0);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_SourceCodeInfo_Location_descriptor,
      new String[]{"Path", "Span", "LeadingComments", "TrailingComments", "LeadingDetachedComments"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_GeneratedCodeInfo_descriptor = (Descriptors.Descriptor)getDescriptor()
      .getMessageTypes()
      .get(20);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_GeneratedCodeInfo_descriptor, new String[]{"Annotation"}
   );
   private static final Descriptors.Descriptor internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor = (Descriptors.Descriptor)internal_static_google_protobuf_GeneratedCodeInfo_descriptor.getNestedTypes(
         
      )
      .get(0);
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(
      internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor, new String[]{"Path", "SourceFile", "Begin", "End"}
   );
   private static Descriptors.FileDescriptor descriptor;

   private DescriptorProtos() {
   }

   public static void registerAllExtensions(ExtensionRegistryLite registry) {
   }

   public static void registerAllExtensions(ExtensionRegistry registry) {
      registerAllExtensions((ExtensionRegistryLite)registry);
   }

   public static Descriptors.FileDescriptor getDescriptor() {
      return descriptor;
   }

   static {
      String[] descriptorData = new String[]{
         "\n google/protobuf/descriptor.proto\u0012\u000fgoogle.protobuf\"G\n\u0011FileDescriptorSet\u00122\n\u0004file\u0018\u0001 \u0003(\u000b2$.google.protobuf.FileDescriptorProto\"Û\u0003\n\u0013FileDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\u000f\n\u0007package\u0018\u0002 \u0001(\t\u0012\u0012\n\ndependency\u0018\u0003 \u0003(\t\u0012\u0019\n\u0011public_dependency\u0018\n \u0003(\u0005\u0012\u0017\n\u000fweak_dependency\u0018\u000b \u0003(\u0005\u00126\n\fmessage_type\u0018\u0004 \u0003(\u000b2 .google.protobuf.DescriptorProto\u00127\n\tenum_type\u0018\u0005 \u0003(\u000b2$.google.protobuf.EnumDescriptorProto\u00128\n\u0007service\u0018\u0006 \u0003(\u000b2'.google.protobuf.ServiceDescriptorProto\u00128\n\textension\u0018\u0007 \u0003(\u000b2%.google.protobuf.FieldDescriptorProto\u0012-\n\u0007options\u0018\b \u0001(\u000b2\u001c.google.protobuf.FileOptions\u00129\n\u0010source_code_info\u0018\t \u0001(\u000b2\u001f.google.protobuf.SourceCodeInfo\u0012\u000e\n\u0006syntax\u0018\f \u0001(\t\"©\u0005\n\u000fDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u00124\n\u0005field\u0018\u0002 \u0003(\u000b2%.google.protobuf.FieldDescriptorProto\u00128\n\textension\u0018\u0006 \u0003(\u000b2%.google.protobuf.FieldDescriptorProto\u00125\n\u000bnested_type\u0018\u0003 \u0003(\u000b2 .google.protobuf.DescriptorProto\u00127\n\tenum_type\u0018\u0004 \u0003(\u000b2$.google.protobuf.EnumDescriptorProto\u0012H\n\u000fextension_range\u0018\u0005 \u0003(\u000b2/.google.protobuf.DescriptorProto.ExtensionRange\u00129\n\noneof_decl\u0018\b \u0003(\u000b2%.google.protobuf.OneofDescriptorProto\u00120\n\u0007options\u0018\u0007 \u0001(\u000b2\u001f.google.protobuf.MessageOptions\u0012F\n\u000ereserved_range\u0018\t \u0003(\u000b2..google.protobuf.DescriptorProto.ReservedRange\u0012\u0015\n\rreserved_name\u0018\n \u0003(\t\u001ae\n\u000eExtensionRange\u0012\r\n\u0005start\u0018\u0001 \u0001(\u0005\u0012\u000b\n\u0003end\u0018\u0002 \u0001(\u0005\u00127\n\u0007options\u0018\u0003 \u0001(\u000b2&.google.protobuf.ExtensionRangeOptions\u001a+\n\rReservedRange\u0012\r\n\u0005start\u0018\u0001 \u0001(\u0005\u0012\u000b\n\u0003end\u0018\u0002 \u0001(\u0005\"g\n\u0015ExtensionRangeOptions\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002\"Õ\u0005\n\u0014FieldDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\u000e\n\u0006number\u0018\u0003 \u0001(\u0005\u0012:\n\u0005label\u0018\u0004 \u0001(\u000e2+.google.protobuf.FieldDescriptorProto.Label\u00128\n\u0004type\u0018\u0005 \u0001(\u000e2*.google.protobuf.FieldDescriptorProto.Type\u0012\u0011\n\ttype_name\u0018\u0006 \u0001(\t\u0012\u0010\n\bextendee\u0018\u0002 \u0001(\t\u0012\u0015\n\rdefault_value\u0018\u0007 \u0001(\t\u0012\u0013\n\u000boneof_index\u0018\t \u0001(\u0005\u0012\u0011\n\tjson_name\u0018\n \u0001(\t\u0012.\n\u0007options\u0018\b \u0001(\u000b2\u001d.google.protobuf.FieldOptions\u0012\u0017\n\u000fproto3_optional\u0018\u0011 \u0001(\b\"¶\u0002\n\u0004Type\u0012\u000f\n\u000bTYPE_DOUBLE\u0010\u0001\u0012\u000e\n\nTYPE_FLOAT\u0010\u0002\u0012\u000e\n\nTYPE_INT64\u0010\u0003\u0012\u000f\n\u000bTYPE_UINT64\u0010\u0004\u0012\u000e\n\nTYPE_INT32\u0010\u0005\u0012\u0010\n\fTYPE_FIXED64\u0010\u0006\u0012\u0010\n\fTYPE_FIXED32\u0010\u0007\u0012\r\n\tTYPE_BOOL\u0010\b\u0012\u000f\n\u000bTYPE_STRING\u0010\t\u0012\u000e\n\nTYPE_GROUP\u0010\n\u0012\u0010\n\fTYPE_MESSAGE\u0010\u000b\u0012\u000e\n\nTYPE_BYTES\u0010\f\u0012\u000f\n\u000bTYPE_UINT32\u0010\r\u0012\r\n\tTYPE_ENUM\u0010\u000e\u0012\u0011\n\rTYPE_SFIXED32\u0010\u000f\u0012\u0011\n\rTYPE_SFIXED64\u0010\u0010\u0012\u000f\n\u000bTYPE_SINT32\u0010\u0011\u0012\u000f\n\u000bTYPE_SINT64\u0010\u0012\"C\n\u0005Label\u0012\u0012\n\u000eLABEL_OPTIONAL\u0010\u0001\u0012\u0012\n\u000eLABEL_REQUIRED\u0010\u0002\u0012\u0012\n\u000eLABEL_REPEATED\u0010\u0003\"T\n\u0014OneofDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012.\n\u0007options\u0018\u0002 \u0001(\u000b2\u001d.google.protobuf.OneofOptions\"¤\u0002\n\u0013EnumDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u00128\n\u0005value\u0018\u0002 \u0003(\u000b2).google.protobuf.EnumValueDescriptorProto\u0012-\n\u0007options\u0018\u0003 \u0001(\u000b2\u001c.google.protobuf.EnumOptions\u0012N\n\u000ereserved_range\u0018\u0004 \u0003(\u000b26.google.protobuf.EnumDescriptorProto.EnumReservedRange\u0012\u0015\n\rreserved_name\u0018\u0005 \u0003(\t\u001a/\n\u0011EnumReservedRange\u0012\r\n\u0005start\u0018\u0001 \u0001(\u0005\u0012\u000b\n\u0003end\u0018\u0002 \u0001(\u0005\"l\n\u0018EnumValueDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\u000e\n\u0006number\u0018\u0002 \u0001(\u0005\u00122\n\u0007options\u0018\u0003 \u0001(\u000b2!.google.protobuf.EnumValueOptions\"\u0090\u0001\n\u0016ServiceDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u00126\n\u0006method\u0018\u0002 \u0003(\u000b2&.google.protobuf.MethodDescriptorProto\u00120\n\u0007options\u0018\u0003 \u0001(\u000b2\u001f.google.protobuf.ServiceOptions\"Á\u0001\n\u0015MethodDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\u0012\n\ninput_type\u0018\u0002 \u0001(\t\u0012\u0013\n\u000boutput_type\u0018\u0003 \u0001(\t\u0012/\n\u0007options\u0018\u0004 \u0001(\u000b2\u001e.google.protobuf.MethodOptions\u0012\u001f\n\u0010client_streaming\u0018\u0005 \u0001(\b:\u0005false\u0012\u001f\n\u0010server_streaming\u0018\u0006 \u0001(\b:\u0005false\"¥\u0006\n\u000bFileOptions\u0012\u0014\n\fjava_package\u0018\u0001 \u0001(\t\u0012\u001c\n\u0014java_outer_classname\u0018\b \u0001(\t\u0012\"\n\u0013java_multiple_files\u0018\n \u0001(\b:\u0005false\u0012)\n\u001djava_generate_equals_and_hash\u0018\u0014 \u0001(\bB\u0002\u0018\u0001\u0012%\n\u0016java_string_check_utf8\u0018\u001b \u0001(\b:\u0005false\u0012F\n\foptimize_for\u0018\t \u0001(\u000e2).google.protobuf.FileOptions.OptimizeMode:\u0005SPEED\u0012\u0012\n\ngo_package\u0018\u000b \u0001(\t\u0012\"\n\u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0005false\u0012$\n\u0015java_generic_services\u0018\u0011 \u0001(\b:\u0005false\u0012\"\n\u0013py_generic_services\u0018\u0012 \u0001(\b:\u0005false\u0012#\n\u0014php_generic_services\u0018* \u0001(\b:\u0005false\u0012\u0019\n\ndeprecated\u0018\u0017 \u0001(\b:\u0005false\u0012\u001e\n\u0010cc_enable_arenas\u0018\u001f \u0001(\b:\u0004true\u0012\u0019\n\u0011objc_class_prefix\u0018$ \u0001(\t\u0012\u0018\n\u0010csharp_namespace\u0018% \u0001(\t\u0012\u0014\n\fswift_prefix\u0018' \u0001(\t\u0012\u0018\n\u0010php_class_prefix\u0018( \u0001(\t\u0012\u0015\n\rphp_namespace\u0018) \u0001(\t\u0012\u001e\n\u0016php_metadata_namespace\u0018, \u0001(\t\u0012\u0014\n\fruby_package\u0018- \u0001(\t\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption\":\n\fOptimizeMode\u0012\t\n\u0005SPEED\u0010\u0001\u0012\r\n\tCODE_SIZE\u0010\u0002\u0012\u0010\n\fLITE_RUNTIME\u0010\u0003*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002J\u0004\b&\u0010'\"\u0084\u0002\n\u000eMessageOptions\u0012&\n\u0017message_set_wire_format\u0018\u0001 \u0001(\b:\u0005false\u0012.\n\u001fno_standard_descriptor_accessor\u0018\u0002 \u0001(\b:\u0005false\u0012\u0019\n\ndeprecated\u0018\u0003 \u0001(\b:\u0005false\u0012\u0011\n\tmap_entry\u0018\u0007 \u0001(\b\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002J\u0004\b\u0004\u0010\u0005J\u0004\b\u0005\u0010\u0006J\u0004\b\u0006\u0010\u0007J\u0004\b\b\u0010\tJ\u0004\b\t\u0010\n\"¾\u0003\n\fFieldOptions\u0012:\n\u0005ctype\u0018\u0001 \u0001(\u000e2#.google.protobuf.FieldOptions.CType:\u0006STRING\u0012\u000e\n\u0006packed\u0018\u0002 \u0001(\b\u0012?\n\u0006jstype\u0018\u0006 \u0001(\u000e2$.google.protobuf.FieldOptions.JSType:\tJS_NORMAL\u0012\u0013\n\u0004lazy\u0018\u0005 \u0001(\b:\u0005false\u0012\u001e\n\u000funverified_lazy\u0018\u000f \u0001(\b:\u0005false\u0012\u0019\n\ndeprecated\u0018\u0003 \u0001(\b:\u0005false\u0012\u0013\n\u0004weak\u0018\n \u0001(\b:\u0005false\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption\"/\n\u0005CType\u0012\n\n\u0006STRING\u0010\u0000\u0012\b\n\u0004CORD\u0010\u0001\u0012\u0010\n\fSTRING_PIECE\u0010\u0002\"5\n\u0006JSType\u0012\r\n\tJS_NORMAL\u0010\u0000\u0012\r\n\tJS_STRING\u0010\u0001\u0012\r\n\tJS_NUMBER\u0010\u0002*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002J\u0004\b\u0004\u0010\u0005\"^\n\fOneofOptions\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002\"\u0093\u0001\n\u000bEnumOptions\u0012\u0013\n\u000ballow_alias\u0018\u0002 \u0001(\b\u0012\u0019\n\ndeprecated\u0018\u0003 \u0001(\b:\u0005false\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002J\u0004\b\u0005\u0010\u0006\"}\n\u0010EnumValueOptions\u0012\u0019\n\ndeprecated\u0018\u0001 \u0001(\b:\u0005false\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002\"{\n\u000eServiceOptions\u0012\u0019\n\ndeprecated\u0018! \u0001(\b:\u0005false\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002\"\u00ad\u0002\n\rMethodOptions\u0012\u0019\n\ndeprecated\u0018! \u0001(\b:\u0005false\u0012_\n\u0011idempotency_level\u0018\" \u0001(\u000e2/.google.protobuf.MethodOptions.IdempotencyLevel:\u0013IDEMPOTENCY_UNKNOWN\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption\"P\n\u0010IdempotencyLevel\u0012\u0017\n\u0013IDEMPOTENCY_UNKNOWN\u0010\u0000\u0012\u0013\n\u000fNO_SIDE_EFFECTS\u0010\u0001\u0012\u000e\n\nIDEMPOTENT\u0010\u0002*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002\"\u009e\u0002\n\u0013UninterpretedOption\u0012;\n\u0004name\u0018\u0002 \u0003(\u000b2-.google.protobuf.UninterpretedOption.NamePart\u0012\u0018\n\u0010identifier_value\u0018\u0003 \u0001(\t\u0012\u001a\n\u0012positive_int_value\u0018\u0004 \u0001(\u0004\u0012\u001a\n\u0012negative_int_value\u0018\u0005 \u0001(\u0003\u0012\u0014\n\fdouble_value\u0018\u0006 \u0001(\u0001\u0012\u0014\n\fstring_value\u0018\u0007 \u0001(\f\u0012\u0017\n\u000faggregate_value\u0018\b \u0001(\t\u001a3\n\bNamePart\u0012\u0011\n\tname_part\u0018\u0001 \u0002(\t\u0012\u0014\n\fis_extension\u0018\u0002 \u0002(\b\"Õ\u0001\n\u000eSourceCodeInfo\u0012:\n\blocation\u0018\u0001 \u0003(\u000b2(.google.protobuf.SourceCodeInfo.Location\u001a\u0086\u0001\n\bLocation\u0012\u0010\n\u0004path\u0018\u0001 \u0003(\u0005B\u0002\u0010\u0001\u0012\u0010\n\u0004span\u0018\u0002 \u0003(\u0005B\u0002\u0010\u0001\u0012\u0018\n\u0010leading_comments\u0018\u0003 \u0001(\t\u0012\u0019\n\u0011trailing_comments\u0018\u0004 \u0001(\t\u0012!\n\u0019leading_detached_comments\u0018\u0006 \u0003(\t\"§\u0001\n\u0011GeneratedCodeInfo\u0012A\n\nannotation\u0018\u0001 \u0003(\u000b2-.google.protobuf.GeneratedCodeInfo.Annotation\u001aO\n\nAnnotation\u0012\u0010\n\u0004path\u0018\u0001 \u0003(\u0005B\u0002\u0010\u0001\u0012\u0013\n\u000bsource_file\u0018\u0002 \u0001(\t\u0012\r\n\u0005begin\u0018\u0003 \u0001(\u0005\u0012\u000b\n\u0003end\u0018\u0004 \u0001(\u0005B~\n\u0013com.google.protobufB\u0010DescriptorProtosH\u0001Z-google.golang.org/protobuf/types/descriptorpbø\u0001\u0001¢\u0002\u0003GPBª\u0002\u001aGoogle.Protobuf.Reflection"
      };
      descriptor = Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor[0]);
   }

   public static final class DescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.DescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int FIELD_FIELD_NUMBER = 2;
      private List<DescriptorProtos.FieldDescriptorProto> field_;
      public static final int EXTENSION_FIELD_NUMBER = 6;
      private List<DescriptorProtos.FieldDescriptorProto> extension_;
      public static final int NESTED_TYPE_FIELD_NUMBER = 3;
      private List<DescriptorProtos.DescriptorProto> nestedType_;
      public static final int ENUM_TYPE_FIELD_NUMBER = 4;
      private List<DescriptorProtos.EnumDescriptorProto> enumType_;
      public static final int EXTENSION_RANGE_FIELD_NUMBER = 5;
      private List<DescriptorProtos.DescriptorProto.ExtensionRange> extensionRange_;
      public static final int ONEOF_DECL_FIELD_NUMBER = 8;
      private List<DescriptorProtos.OneofDescriptorProto> oneofDecl_;
      public static final int OPTIONS_FIELD_NUMBER = 7;
      private DescriptorProtos.MessageOptions options_;
      public static final int RESERVED_RANGE_FIELD_NUMBER = 9;
      private List<DescriptorProtos.DescriptorProto.ReservedRange> reservedRange_;
      public static final int RESERVED_NAME_FIELD_NUMBER = 10;
      private LazyStringList reservedName_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.DescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.DescriptorProto();
      @Deprecated
      public static final Parser<DescriptorProtos.DescriptorProto> PARSER = new AbstractParser<DescriptorProtos.DescriptorProto>() {
         public DescriptorProtos.DescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.DescriptorProto(input, extensionRegistry);
         }
      };

      private DescriptorProto(GeneratedMessageV3.Builder<?> builder) {
         super(builder);
      }

      private DescriptorProto() {
         this.name_ = "";
         this.field_ = Collections.emptyList();
         this.extension_ = Collections.emptyList();
         this.nestedType_ = Collections.emptyList();
         this.enumType_ = Collections.emptyList();
         this.extensionRange_ = Collections.emptyList();
         this.oneofDecl_ = Collections.emptyList();
         this.reservedRange_ = Collections.emptyList();
         this.reservedName_ = LazyStringArrayList.EMPTY;
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.DescriptorProto();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private DescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 10: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.name_ = bs;
                        break;
                     }
                     case 18:
                        if ((mutable_bitField0_ & 2) == 0) {
                           this.field_ = new ArrayList();
                           mutable_bitField0_ |= 2;
                        }

                        this.field_.add(input.readMessage(DescriptorProtos.FieldDescriptorProto.PARSER, extensionRegistry));
                        break;
                     case 26:
                        if ((mutable_bitField0_ & 8) == 0) {
                           this.nestedType_ = new ArrayList();
                           mutable_bitField0_ |= 8;
                        }

                        this.nestedType_.add(input.readMessage(PARSER, extensionRegistry));
                        break;
                     case 34:
                        if ((mutable_bitField0_ & 16) == 0) {
                           this.enumType_ = new ArrayList();
                           mutable_bitField0_ |= 16;
                        }

                        this.enumType_.add(input.readMessage(DescriptorProtos.EnumDescriptorProto.PARSER, extensionRegistry));
                        break;
                     case 42:
                        if ((mutable_bitField0_ & 32) == 0) {
                           this.extensionRange_ = new ArrayList();
                           mutable_bitField0_ |= 32;
                        }

                        this.extensionRange_.add(input.readMessage(DescriptorProtos.DescriptorProto.ExtensionRange.PARSER, extensionRegistry));
                        break;
                     case 50:
                        if ((mutable_bitField0_ & 4) == 0) {
                           this.extension_ = new ArrayList();
                           mutable_bitField0_ |= 4;
                        }

                        this.extension_.add(input.readMessage(DescriptorProtos.FieldDescriptorProto.PARSER, extensionRegistry));
                        break;
                     case 58:
                        DescriptorProtos.MessageOptions.Builder subBuilder = null;
                        if ((this.bitField0_ & 2) != 0) {
                           subBuilder = this.options_.toBuilder();
                        }

                        this.options_ = input.readMessage(DescriptorProtos.MessageOptions.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.options_);
                           this.options_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 2;
                        break;
                     case 66:
                        if ((mutable_bitField0_ & 64) == 0) {
                           this.oneofDecl_ = new ArrayList();
                           mutable_bitField0_ |= 64;
                        }

                        this.oneofDecl_.add(input.readMessage(DescriptorProtos.OneofDescriptorProto.PARSER, extensionRegistry));
                        break;
                     case 74:
                        if ((mutable_bitField0_ & 256) == 0) {
                           this.reservedRange_ = new ArrayList();
                           mutable_bitField0_ |= 256;
                        }

                        this.reservedRange_.add(input.readMessage(DescriptorProtos.DescriptorProto.ReservedRange.PARSER, extensionRegistry));
                        break;
                     case 82: {
                        ByteString bs = input.readBytes();
                        if ((mutable_bitField0_ & 512) == 0) {
                           this.reservedName_ = new LazyStringArrayList();
                           mutable_bitField0_ |= 512;
                        }

                        this.reservedName_.add(bs);
                        break;
                     }
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var13) {
               throw var13.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var14) {
               throw var14.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var15) {
               throw new InvalidProtocolBufferException(var15).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 2) != 0) {
                  this.field_ = Collections.unmodifiableList(this.field_);
               }

               if ((mutable_bitField0_ & 8) != 0) {
                  this.nestedType_ = Collections.unmodifiableList(this.nestedType_);
               }

               if ((mutable_bitField0_ & 16) != 0) {
                  this.enumType_ = Collections.unmodifiableList(this.enumType_);
               }

               if ((mutable_bitField0_ & 32) != 0) {
                  this.extensionRange_ = Collections.unmodifiableList(this.extensionRange_);
               }

               if ((mutable_bitField0_ & 4) != 0) {
                  this.extension_ = Collections.unmodifiableList(this.extension_);
               }

               if ((mutable_bitField0_ & 64) != 0) {
                  this.oneofDecl_ = Collections.unmodifiableList(this.oneofDecl_);
               }

               if ((mutable_bitField0_ & 256) != 0) {
                  this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_);
               }

               if ((mutable_bitField0_ & 512) != 0) {
                  this.reservedName_ = this.reservedName_.getUnmodifiableView();
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.DescriptorProto.class, DescriptorProtos.DescriptorProto.Builder.class);
      }

      @Override
      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public String getName() {
         Object ref = this.name_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.name_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getNameBytes() {
         Object ref = this.name_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.name_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public List<DescriptorProtos.FieldDescriptorProto> getFieldList() {
         return this.field_;
      }

      @Override
      public List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getFieldOrBuilderList() {
         return this.field_;
      }

      @Override
      public int getFieldCount() {
         return this.field_.size();
      }

      @Override
      public DescriptorProtos.FieldDescriptorProto getField(int index) {
         return (DescriptorProtos.FieldDescriptorProto)this.field_.get(index);
      }

      @Override
      public DescriptorProtos.FieldDescriptorProtoOrBuilder getFieldOrBuilder(int index) {
         return (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.field_.get(index);
      }

      @Override
      public List<DescriptorProtos.FieldDescriptorProto> getExtensionList() {
         return this.extension_;
      }

      @Override
      public List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList() {
         return this.extension_;
      }

      @Override
      public int getExtensionCount() {
         return this.extension_.size();
      }

      @Override
      public DescriptorProtos.FieldDescriptorProto getExtension(int index) {
         return (DescriptorProtos.FieldDescriptorProto)this.extension_.get(index);
      }

      @Override
      public DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int index) {
         return (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.extension_.get(index);
      }

      @Override
      public List<DescriptorProtos.DescriptorProto> getNestedTypeList() {
         return this.nestedType_;
      }

      @Override
      public List<? extends DescriptorProtos.DescriptorProtoOrBuilder> getNestedTypeOrBuilderList() {
         return this.nestedType_;
      }

      @Override
      public int getNestedTypeCount() {
         return this.nestedType_.size();
      }

      @Override
      public DescriptorProtos.DescriptorProto getNestedType(int index) {
         return (DescriptorProtos.DescriptorProto)this.nestedType_.get(index);
      }

      @Override
      public DescriptorProtos.DescriptorProtoOrBuilder getNestedTypeOrBuilder(int index) {
         return (DescriptorProtos.DescriptorProtoOrBuilder)this.nestedType_.get(index);
      }

      @Override
      public List<DescriptorProtos.EnumDescriptorProto> getEnumTypeList() {
         return this.enumType_;
      }

      @Override
      public List<? extends DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList() {
         return this.enumType_;
      }

      @Override
      public int getEnumTypeCount() {
         return this.enumType_.size();
      }

      @Override
      public DescriptorProtos.EnumDescriptorProto getEnumType(int index) {
         return (DescriptorProtos.EnumDescriptorProto)this.enumType_.get(index);
      }

      @Override
      public DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int index) {
         return (DescriptorProtos.EnumDescriptorProtoOrBuilder)this.enumType_.get(index);
      }

      @Override
      public List<DescriptorProtos.DescriptorProto.ExtensionRange> getExtensionRangeList() {
         return this.extensionRange_;
      }

      @Override
      public List<? extends DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder> getExtensionRangeOrBuilderList() {
         return this.extensionRange_;
      }

      @Override
      public int getExtensionRangeCount() {
         return this.extensionRange_.size();
      }

      @Override
      public DescriptorProtos.DescriptorProto.ExtensionRange getExtensionRange(int index) {
         return (DescriptorProtos.DescriptorProto.ExtensionRange)this.extensionRange_.get(index);
      }

      @Override
      public DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder getExtensionRangeOrBuilder(int index) {
         return (DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder)this.extensionRange_.get(index);
      }

      @Override
      public List<DescriptorProtos.OneofDescriptorProto> getOneofDeclList() {
         return this.oneofDecl_;
      }

      @Override
      public List<? extends DescriptorProtos.OneofDescriptorProtoOrBuilder> getOneofDeclOrBuilderList() {
         return this.oneofDecl_;
      }

      @Override
      public int getOneofDeclCount() {
         return this.oneofDecl_.size();
      }

      @Override
      public DescriptorProtos.OneofDescriptorProto getOneofDecl(int index) {
         return (DescriptorProtos.OneofDescriptorProto)this.oneofDecl_.get(index);
      }

      @Override
      public DescriptorProtos.OneofDescriptorProtoOrBuilder getOneofDeclOrBuilder(int index) {
         return (DescriptorProtos.OneofDescriptorProtoOrBuilder)this.oneofDecl_.get(index);
      }

      @Override
      public boolean hasOptions() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public DescriptorProtos.MessageOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.MessageOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public DescriptorProtos.MessageOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.MessageOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public List<DescriptorProtos.DescriptorProto.ReservedRange> getReservedRangeList() {
         return this.reservedRange_;
      }

      @Override
      public List<? extends DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder> getReservedRangeOrBuilderList() {
         return this.reservedRange_;
      }

      @Override
      public int getReservedRangeCount() {
         return this.reservedRange_.size();
      }

      @Override
      public DescriptorProtos.DescriptorProto.ReservedRange getReservedRange(int index) {
         return (DescriptorProtos.DescriptorProto.ReservedRange)this.reservedRange_.get(index);
      }

      @Override
      public DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder getReservedRangeOrBuilder(int index) {
         return (DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder)this.reservedRange_.get(index);
      }

      public ProtocolStringList getReservedNameList() {
         return this.reservedName_;
      }

      @Override
      public int getReservedNameCount() {
         return this.reservedName_.size();
      }

      @Override
      public String getReservedName(int index) {
         return (String)this.reservedName_.get(index);
      }

      @Override
      public ByteString getReservedNameBytes(int index) {
         return this.reservedName_.getByteString(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getFieldCount(); ++i) {
               if (!this.getField(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(int i = 0; i < this.getExtensionCount(); ++i) {
               if (!this.getExtension(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(int i = 0; i < this.getNestedTypeCount(); ++i) {
               if (!this.getNestedType(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(int i = 0; i < this.getEnumTypeCount(); ++i) {
               if (!this.getEnumType(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(int i = 0; i < this.getExtensionRangeCount(); ++i) {
               if (!this.getExtensionRange(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(int i = 0; i < this.getOneofDeclCount(); ++i) {
               if (!this.getOneofDecl(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (this.hasOptions() && !this.getOptions().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.name_);
         }

         for(int i = 0; i < this.field_.size(); ++i) {
            output.writeMessage(2, (MessageLite)this.field_.get(i));
         }

         for(int i = 0; i < this.nestedType_.size(); ++i) {
            output.writeMessage(3, (MessageLite)this.nestedType_.get(i));
         }

         for(int i = 0; i < this.enumType_.size(); ++i) {
            output.writeMessage(4, (MessageLite)this.enumType_.get(i));
         }

         for(int i = 0; i < this.extensionRange_.size(); ++i) {
            output.writeMessage(5, (MessageLite)this.extensionRange_.get(i));
         }

         for(int i = 0; i < this.extension_.size(); ++i) {
            output.writeMessage(6, (MessageLite)this.extension_.get(i));
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeMessage(7, this.getOptions());
         }

         for(int i = 0; i < this.oneofDecl_.size(); ++i) {
            output.writeMessage(8, (MessageLite)this.oneofDecl_.get(i));
         }

         for(int i = 0; i < this.reservedRange_.size(); ++i) {
            output.writeMessage(9, (MessageLite)this.reservedRange_.get(i));
         }

         for(int i = 0; i < this.reservedName_.size(); ++i) {
            GeneratedMessageV3.writeString(output, 10, this.reservedName_.getRaw(i));
         }

         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            for(int i = 0; i < this.field_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.field_.get(i));
            }

            for(int i = 0; i < this.nestedType_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.nestedType_.get(i));
            }

            for(int i = 0; i < this.enumType_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(4, (MessageLite)this.enumType_.get(i));
            }

            for(int i = 0; i < this.extensionRange_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(5, (MessageLite)this.extensionRange_.get(i));
            }

            for(int i = 0; i < this.extension_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(6, (MessageLite)this.extension_.get(i));
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeMessageSize(7, this.getOptions());
            }

            for(int i = 0; i < this.oneofDecl_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(8, (MessageLite)this.oneofDecl_.get(i));
            }

            for(int i = 0; i < this.reservedRange_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(9, (MessageLite)this.reservedRange_.get(i));
            }

            int dataSize = 0;

            for(int i = 0; i < this.reservedName_.size(); ++i) {
               dataSize += computeStringSizeNoTag(this.reservedName_.getRaw(i));
            }

            size += dataSize;
            size += 1 * this.getReservedNameList().size();
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.DescriptorProto)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.DescriptorProto other = (DescriptorProtos.DescriptorProto)obj;
            if (this.hasName() != other.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(other.getName())) {
               return false;
            } else if (!this.getFieldList().equals(other.getFieldList())) {
               return false;
            } else if (!this.getExtensionList().equals(other.getExtensionList())) {
               return false;
            } else if (!this.getNestedTypeList().equals(other.getNestedTypeList())) {
               return false;
            } else if (!this.getEnumTypeList().equals(other.getEnumTypeList())) {
               return false;
            } else if (!this.getExtensionRangeList().equals(other.getExtensionRangeList())) {
               return false;
            } else if (!this.getOneofDeclList().equals(other.getOneofDeclList())) {
               return false;
            } else if (this.hasOptions() != other.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(other.getOptions())) {
               return false;
            } else if (!this.getReservedRangeList().equals(other.getReservedRangeList())) {
               return false;
            } else if (!this.getReservedNameList().equals(other.getReservedNameList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasName()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getName().hashCode();
            }

            if (this.getFieldCount() > 0) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getFieldList().hashCode();
            }

            if (this.getExtensionCount() > 0) {
               hash = 37 * hash + 6;
               hash = 53 * hash + this.getExtensionList().hashCode();
            }

            if (this.getNestedTypeCount() > 0) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getNestedTypeList().hashCode();
            }

            if (this.getEnumTypeCount() > 0) {
               hash = 37 * hash + 4;
               hash = 53 * hash + this.getEnumTypeList().hashCode();
            }

            if (this.getExtensionRangeCount() > 0) {
               hash = 37 * hash + 5;
               hash = 53 * hash + this.getExtensionRangeList().hashCode();
            }

            if (this.getOneofDeclCount() > 0) {
               hash = 37 * hash + 8;
               hash = 53 * hash + this.getOneofDeclList().hashCode();
            }

            if (this.hasOptions()) {
               hash = 37 * hash + 7;
               hash = 53 * hash + this.getOptions().hashCode();
            }

            if (this.getReservedRangeCount() > 0) {
               hash = 37 * hash + 9;
               hash = 53 * hash + this.getReservedRangeList().hashCode();
            }

            if (this.getReservedNameCount() > 0) {
               hash = 37 * hash + 10;
               hash = 53 * hash + this.getReservedNameList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.DescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.DescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.DescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.DescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.DescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.DescriptorProto.Builder newBuilder(DescriptorProtos.DescriptorProto prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.DescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.DescriptorProto.Builder() : new DescriptorProtos.DescriptorProto.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.DescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.DescriptorProto.Builder(parent);
      }

      public static DescriptorProtos.DescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.DescriptorProto> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.DescriptorProto> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.DescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.Builder<DescriptorProtos.DescriptorProto.Builder>
         implements DescriptorProtos.DescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_ = "";
         private List<DescriptorProtos.FieldDescriptorProto> field_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.FieldDescriptorProto, DescriptorProtos.FieldDescriptorProto.Builder, DescriptorProtos.FieldDescriptorProtoOrBuilder> fieldBuilder_;
         private List<DescriptorProtos.FieldDescriptorProto> extension_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.FieldDescriptorProto, DescriptorProtos.FieldDescriptorProto.Builder, DescriptorProtos.FieldDescriptorProtoOrBuilder> extensionBuilder_;
         private List<DescriptorProtos.DescriptorProto> nestedType_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto, DescriptorProtos.DescriptorProto.Builder, DescriptorProtos.DescriptorProtoOrBuilder> nestedTypeBuilder_;
         private List<DescriptorProtos.EnumDescriptorProto> enumType_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.EnumDescriptorProto, DescriptorProtos.EnumDescriptorProto.Builder, DescriptorProtos.EnumDescriptorProtoOrBuilder> enumTypeBuilder_;
         private List<DescriptorProtos.DescriptorProto.ExtensionRange> extensionRange_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto.ExtensionRange, DescriptorProtos.DescriptorProto.ExtensionRange.Builder, DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder> extensionRangeBuilder_;
         private List<DescriptorProtos.OneofDescriptorProto> oneofDecl_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.OneofDescriptorProto, DescriptorProtos.OneofDescriptorProto.Builder, DescriptorProtos.OneofDescriptorProtoOrBuilder> oneofDeclBuilder_;
         private DescriptorProtos.MessageOptions options_;
         private SingleFieldBuilderV3<DescriptorProtos.MessageOptions, DescriptorProtos.MessageOptions.Builder, DescriptorProtos.MessageOptionsOrBuilder> optionsBuilder_;
         private List<DescriptorProtos.DescriptorProto.ReservedRange> reservedRange_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto.ReservedRange, DescriptorProtos.DescriptorProto.ReservedRange.Builder, DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder> reservedRangeBuilder_;
         private LazyStringList reservedName_ = LazyStringArrayList.EMPTY;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.DescriptorProto.class, DescriptorProtos.DescriptorProto.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getFieldFieldBuilder();
               this.getExtensionFieldBuilder();
               this.getNestedTypeFieldBuilder();
               this.getEnumTypeFieldBuilder();
               this.getExtensionRangeFieldBuilder();
               this.getOneofDeclFieldBuilder();
               this.getOptionsFieldBuilder();
               this.getReservedRangeFieldBuilder();
            }

         }

         public DescriptorProtos.DescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            if (this.fieldBuilder_ == null) {
               this.field_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.fieldBuilder_.clear();
            }

            if (this.extensionBuilder_ == null) {
               this.extension_ = Collections.emptyList();
               this.bitField0_ &= -5;
            } else {
               this.extensionBuilder_.clear();
            }

            if (this.nestedTypeBuilder_ == null) {
               this.nestedType_ = Collections.emptyList();
               this.bitField0_ &= -9;
            } else {
               this.nestedTypeBuilder_.clear();
            }

            if (this.enumTypeBuilder_ == null) {
               this.enumType_ = Collections.emptyList();
               this.bitField0_ &= -17;
            } else {
               this.enumTypeBuilder_.clear();
            }

            if (this.extensionRangeBuilder_ == null) {
               this.extensionRange_ = Collections.emptyList();
               this.bitField0_ &= -33;
            } else {
               this.extensionRangeBuilder_.clear();
            }

            if (this.oneofDeclBuilder_ == null) {
               this.oneofDecl_ = Collections.emptyList();
               this.bitField0_ &= -65;
            } else {
               this.oneofDeclBuilder_.clear();
            }

            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -129;
            if (this.reservedRangeBuilder_ == null) {
               this.reservedRange_ = Collections.emptyList();
               this.bitField0_ &= -257;
            } else {
               this.reservedRangeBuilder_.clear();
            }

            this.reservedName_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -513;
            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_descriptor;
         }

         public DescriptorProtos.DescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.DescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.DescriptorProto build() {
            DescriptorProtos.DescriptorProto result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.DescriptorProto buildPartial() {
            DescriptorProtos.DescriptorProto result = new DescriptorProtos.DescriptorProto(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.name_ = this.name_;
            if (this.fieldBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0) {
                  this.field_ = Collections.unmodifiableList(this.field_);
                  this.bitField0_ &= -3;
               }

               result.field_ = this.field_;
            } else {
               result.field_ = this.fieldBuilder_.build();
            }

            if (this.extensionBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0) {
                  this.extension_ = Collections.unmodifiableList(this.extension_);
                  this.bitField0_ &= -5;
               }

               result.extension_ = this.extension_;
            } else {
               result.extension_ = this.extensionBuilder_.build();
            }

            if (this.nestedTypeBuilder_ == null) {
               if ((this.bitField0_ & 8) != 0) {
                  this.nestedType_ = Collections.unmodifiableList(this.nestedType_);
                  this.bitField0_ &= -9;
               }

               result.nestedType_ = this.nestedType_;
            } else {
               result.nestedType_ = this.nestedTypeBuilder_.build();
            }

            if (this.enumTypeBuilder_ == null) {
               if ((this.bitField0_ & 16) != 0) {
                  this.enumType_ = Collections.unmodifiableList(this.enumType_);
                  this.bitField0_ &= -17;
               }

               result.enumType_ = this.enumType_;
            } else {
               result.enumType_ = this.enumTypeBuilder_.build();
            }

            if (this.extensionRangeBuilder_ == null) {
               if ((this.bitField0_ & 32) != 0) {
                  this.extensionRange_ = Collections.unmodifiableList(this.extensionRange_);
                  this.bitField0_ &= -33;
               }

               result.extensionRange_ = this.extensionRange_;
            } else {
               result.extensionRange_ = this.extensionRangeBuilder_.build();
            }

            if (this.oneofDeclBuilder_ == null) {
               if ((this.bitField0_ & 64) != 0) {
                  this.oneofDecl_ = Collections.unmodifiableList(this.oneofDecl_);
                  this.bitField0_ &= -65;
               }

               result.oneofDecl_ = this.oneofDecl_;
            } else {
               result.oneofDecl_ = this.oneofDeclBuilder_.build();
            }

            if ((from_bitField0_ & 128) != 0) {
               if (this.optionsBuilder_ == null) {
                  result.options_ = this.options_;
               } else {
                  result.options_ = this.optionsBuilder_.build();
               }

               to_bitField0_ |= 2;
            }

            if (this.reservedRangeBuilder_ == null) {
               if ((this.bitField0_ & 256) != 0) {
                  this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_);
                  this.bitField0_ &= -257;
               }

               result.reservedRange_ = this.reservedRange_;
            } else {
               result.reservedRange_ = this.reservedRangeBuilder_.build();
            }

            if ((this.bitField0_ & 512) != 0) {
               this.reservedName_ = this.reservedName_.getUnmodifiableView();
               this.bitField0_ &= -513;
            }

            result.reservedName_ = this.reservedName_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.DescriptorProto.Builder clone() {
            return (DescriptorProtos.DescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.DescriptorProto.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.DescriptorProto.Builder)super.setField(field, value);
         }

         public DescriptorProtos.DescriptorProto.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.DescriptorProto.Builder)super.clearField(field);
         }

         public DescriptorProtos.DescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.DescriptorProto.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.DescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.DescriptorProto.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.DescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.DescriptorProto.Builder)super.addRepeatedField(field, value);
         }

         public DescriptorProtos.DescriptorProto.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.DescriptorProto) {
               return this.mergeFrom((DescriptorProtos.DescriptorProto)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.DescriptorProto.Builder mergeFrom(DescriptorProtos.DescriptorProto other) {
            if (other == DescriptorProtos.DescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = other.name_;
                  this.onChanged();
               }

               if (this.fieldBuilder_ == null) {
                  if (!other.field_.isEmpty()) {
                     if (this.field_.isEmpty()) {
                        this.field_ = other.field_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureFieldIsMutable();
                        this.field_.addAll(other.field_);
                     }

                     this.onChanged();
                  }
               } else if (!other.field_.isEmpty()) {
                  if (this.fieldBuilder_.isEmpty()) {
                     this.fieldBuilder_.dispose();
                     this.fieldBuilder_ = null;
                     this.field_ = other.field_;
                     this.bitField0_ &= -3;
                     this.fieldBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getFieldFieldBuilder() : null;
                  } else {
                     this.fieldBuilder_.addAllMessages(other.field_);
                  }
               }

               if (this.extensionBuilder_ == null) {
                  if (!other.extension_.isEmpty()) {
                     if (this.extension_.isEmpty()) {
                        this.extension_ = other.extension_;
                        this.bitField0_ &= -5;
                     } else {
                        this.ensureExtensionIsMutable();
                        this.extension_.addAll(other.extension_);
                     }

                     this.onChanged();
                  }
               } else if (!other.extension_.isEmpty()) {
                  if (this.extensionBuilder_.isEmpty()) {
                     this.extensionBuilder_.dispose();
                     this.extensionBuilder_ = null;
                     this.extension_ = other.extension_;
                     this.bitField0_ &= -5;
                     this.extensionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getExtensionFieldBuilder() : null;
                  } else {
                     this.extensionBuilder_.addAllMessages(other.extension_);
                  }
               }

               if (this.nestedTypeBuilder_ == null) {
                  if (!other.nestedType_.isEmpty()) {
                     if (this.nestedType_.isEmpty()) {
                        this.nestedType_ = other.nestedType_;
                        this.bitField0_ &= -9;
                     } else {
                        this.ensureNestedTypeIsMutable();
                        this.nestedType_.addAll(other.nestedType_);
                     }

                     this.onChanged();
                  }
               } else if (!other.nestedType_.isEmpty()) {
                  if (this.nestedTypeBuilder_.isEmpty()) {
                     this.nestedTypeBuilder_.dispose();
                     this.nestedTypeBuilder_ = null;
                     this.nestedType_ = other.nestedType_;
                     this.bitField0_ &= -9;
                     this.nestedTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getNestedTypeFieldBuilder() : null;
                  } else {
                     this.nestedTypeBuilder_.addAllMessages(other.nestedType_);
                  }
               }

               if (this.enumTypeBuilder_ == null) {
                  if (!other.enumType_.isEmpty()) {
                     if (this.enumType_.isEmpty()) {
                        this.enumType_ = other.enumType_;
                        this.bitField0_ &= -17;
                     } else {
                        this.ensureEnumTypeIsMutable();
                        this.enumType_.addAll(other.enumType_);
                     }

                     this.onChanged();
                  }
               } else if (!other.enumType_.isEmpty()) {
                  if (this.enumTypeBuilder_.isEmpty()) {
                     this.enumTypeBuilder_.dispose();
                     this.enumTypeBuilder_ = null;
                     this.enumType_ = other.enumType_;
                     this.bitField0_ &= -17;
                     this.enumTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getEnumTypeFieldBuilder() : null;
                  } else {
                     this.enumTypeBuilder_.addAllMessages(other.enumType_);
                  }
               }

               if (this.extensionRangeBuilder_ == null) {
                  if (!other.extensionRange_.isEmpty()) {
                     if (this.extensionRange_.isEmpty()) {
                        this.extensionRange_ = other.extensionRange_;
                        this.bitField0_ &= -33;
                     } else {
                        this.ensureExtensionRangeIsMutable();
                        this.extensionRange_.addAll(other.extensionRange_);
                     }

                     this.onChanged();
                  }
               } else if (!other.extensionRange_.isEmpty()) {
                  if (this.extensionRangeBuilder_.isEmpty()) {
                     this.extensionRangeBuilder_.dispose();
                     this.extensionRangeBuilder_ = null;
                     this.extensionRange_ = other.extensionRange_;
                     this.bitField0_ &= -33;
                     this.extensionRangeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getExtensionRangeFieldBuilder() : null;
                  } else {
                     this.extensionRangeBuilder_.addAllMessages(other.extensionRange_);
                  }
               }

               if (this.oneofDeclBuilder_ == null) {
                  if (!other.oneofDecl_.isEmpty()) {
                     if (this.oneofDecl_.isEmpty()) {
                        this.oneofDecl_ = other.oneofDecl_;
                        this.bitField0_ &= -65;
                     } else {
                        this.ensureOneofDeclIsMutable();
                        this.oneofDecl_.addAll(other.oneofDecl_);
                     }

                     this.onChanged();
                  }
               } else if (!other.oneofDecl_.isEmpty()) {
                  if (this.oneofDeclBuilder_.isEmpty()) {
                     this.oneofDeclBuilder_.dispose();
                     this.oneofDeclBuilder_ = null;
                     this.oneofDecl_ = other.oneofDecl_;
                     this.bitField0_ &= -65;
                     this.oneofDeclBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getOneofDeclFieldBuilder() : null;
                  } else {
                     this.oneofDeclBuilder_.addAllMessages(other.oneofDecl_);
                  }
               }

               if (other.hasOptions()) {
                  this.mergeOptions(other.getOptions());
               }

               if (this.reservedRangeBuilder_ == null) {
                  if (!other.reservedRange_.isEmpty()) {
                     if (this.reservedRange_.isEmpty()) {
                        this.reservedRange_ = other.reservedRange_;
                        this.bitField0_ &= -257;
                     } else {
                        this.ensureReservedRangeIsMutable();
                        this.reservedRange_.addAll(other.reservedRange_);
                     }

                     this.onChanged();
                  }
               } else if (!other.reservedRange_.isEmpty()) {
                  if (this.reservedRangeBuilder_.isEmpty()) {
                     this.reservedRangeBuilder_.dispose();
                     this.reservedRangeBuilder_ = null;
                     this.reservedRange_ = other.reservedRange_;
                     this.bitField0_ &= -257;
                     this.reservedRangeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getReservedRangeFieldBuilder() : null;
                  } else {
                     this.reservedRangeBuilder_.addAllMessages(other.reservedRange_);
                  }
               }

               if (!other.reservedName_.isEmpty()) {
                  if (this.reservedName_.isEmpty()) {
                     this.reservedName_ = other.reservedName_;
                     this.bitField0_ &= -513;
                  } else {
                     this.ensureReservedNameIsMutable();
                     this.reservedName_.addAll(other.reservedName_);
                  }

                  this.onChanged();
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getFieldCount(); ++i) {
               if (!this.getField(i).isInitialized()) {
                  return false;
               }
            }

            for(int i = 0; i < this.getExtensionCount(); ++i) {
               if (!this.getExtension(i).isInitialized()) {
                  return false;
               }
            }

            for(int i = 0; i < this.getNestedTypeCount(); ++i) {
               if (!this.getNestedType(i).isInitialized()) {
                  return false;
               }
            }

            for(int i = 0; i < this.getEnumTypeCount(); ++i) {
               if (!this.getEnumType(i).isInitialized()) {
                  return false;
               }
            }

            for(int i = 0; i < this.getExtensionRangeCount(); ++i) {
               if (!this.getExtensionRange(i).isInitialized()) {
                  return false;
               }
            }

            for(int i = 0; i < this.getOneofDeclCount(); ++i) {
               if (!this.getOneofDecl(i).isInitialized()) {
                  return false;
               }
            }

            return !this.hasOptions() || this.getOptions().isInitialized();
         }

         public DescriptorProtos.DescriptorProto.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.DescriptorProto parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.DescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.DescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public String getName() {
            Object ref = this.name_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.name_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.name_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.DescriptorProto.Builder setName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.DescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.DescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         private void ensureFieldIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.field_ = new ArrayList(this.field_);
               this.bitField0_ |= 2;
            }

         }

         @Override
         public List<DescriptorProtos.FieldDescriptorProto> getFieldList() {
            return this.fieldBuilder_ == null ? Collections.unmodifiableList(this.field_) : this.fieldBuilder_.getMessageList();
         }

         @Override
         public int getFieldCount() {
            return this.fieldBuilder_ == null ? this.field_.size() : this.fieldBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.FieldDescriptorProto getField(int index) {
            return this.fieldBuilder_ == null ? (DescriptorProtos.FieldDescriptorProto)this.field_.get(index) : this.fieldBuilder_.getMessage(index);
         }

         public DescriptorProtos.DescriptorProto.Builder setField(int index, DescriptorProtos.FieldDescriptorProto value) {
            if (this.fieldBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureFieldIsMutable();
               this.field_.set(index, value);
               this.onChanged();
            } else {
               this.fieldBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setField(int index, DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
            if (this.fieldBuilder_ == null) {
               this.ensureFieldIsMutable();
               this.field_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.fieldBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addField(DescriptorProtos.FieldDescriptorProto value) {
            if (this.fieldBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureFieldIsMutable();
               this.field_.add(value);
               this.onChanged();
            } else {
               this.fieldBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addField(int index, DescriptorProtos.FieldDescriptorProto value) {
            if (this.fieldBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureFieldIsMutable();
               this.field_.add(index, value);
               this.onChanged();
            } else {
               this.fieldBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addField(DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
            if (this.fieldBuilder_ == null) {
               this.ensureFieldIsMutable();
               this.field_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.fieldBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addField(int index, DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
            if (this.fieldBuilder_ == null) {
               this.ensureFieldIsMutable();
               this.field_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.fieldBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllField(Iterable<? extends DescriptorProtos.FieldDescriptorProto> values) {
            if (this.fieldBuilder_ == null) {
               this.ensureFieldIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.field_);
               this.onChanged();
            } else {
               this.fieldBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearField() {
            if (this.fieldBuilder_ == null) {
               this.field_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.fieldBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeField(int index) {
            if (this.fieldBuilder_ == null) {
               this.ensureFieldIsMutable();
               this.field_.remove(index);
               this.onChanged();
            } else {
               this.fieldBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder getFieldBuilder(int index) {
            return this.getFieldFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.FieldDescriptorProtoOrBuilder getFieldOrBuilder(int index) {
            return this.fieldBuilder_ == null
               ? (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.field_.get(index)
               : this.fieldBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getFieldOrBuilderList() {
            return this.fieldBuilder_ != null ? this.fieldBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.field_);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addFieldBuilder() {
            return this.getFieldFieldBuilder().addBuilder(DescriptorProtos.FieldDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addFieldBuilder(int index) {
            return this.getFieldFieldBuilder().addBuilder(index, DescriptorProtos.FieldDescriptorProto.getDefaultInstance());
         }

         public List<DescriptorProtos.FieldDescriptorProto.Builder> getFieldBuilderList() {
            return this.getFieldFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.FieldDescriptorProto, DescriptorProtos.FieldDescriptorProto.Builder, DescriptorProtos.FieldDescriptorProtoOrBuilder> getFieldFieldBuilder() {
            if (this.fieldBuilder_ == null) {
               this.fieldBuilder_ = new RepeatedFieldBuilderV3<>(this.field_, (this.bitField0_ & 2) != 0, this.getParentForChildren(), this.isClean());
               this.field_ = null;
            }

            return this.fieldBuilder_;
         }

         private void ensureExtensionIsMutable() {
            if ((this.bitField0_ & 4) == 0) {
               this.extension_ = new ArrayList(this.extension_);
               this.bitField0_ |= 4;
            }

         }

         @Override
         public List<DescriptorProtos.FieldDescriptorProto> getExtensionList() {
            return this.extensionBuilder_ == null ? Collections.unmodifiableList(this.extension_) : this.extensionBuilder_.getMessageList();
         }

         @Override
         public int getExtensionCount() {
            return this.extensionBuilder_ == null ? this.extension_.size() : this.extensionBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.FieldDescriptorProto getExtension(int index) {
            return this.extensionBuilder_ == null
               ? (DescriptorProtos.FieldDescriptorProto)this.extension_.get(index)
               : this.extensionBuilder_.getMessage(index);
         }

         public DescriptorProtos.DescriptorProto.Builder setExtension(int index, DescriptorProtos.FieldDescriptorProto value) {
            if (this.extensionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionIsMutable();
               this.extension_.set(index, value);
               this.onChanged();
            } else {
               this.extensionBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setExtension(int index, DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.extensionBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtension(DescriptorProtos.FieldDescriptorProto value) {
            if (this.extensionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionIsMutable();
               this.extension_.add(value);
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtension(int index, DescriptorProtos.FieldDescriptorProto value) {
            if (this.extensionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionIsMutable();
               this.extension_.add(index, value);
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtension(DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtension(int index, DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllExtension(Iterable<? extends DescriptorProtos.FieldDescriptorProto> values) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.extension_);
               this.onChanged();
            } else {
               this.extensionBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearExtension() {
            if (this.extensionBuilder_ == null) {
               this.extension_ = Collections.emptyList();
               this.bitField0_ &= -5;
               this.onChanged();
            } else {
               this.extensionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeExtension(int index) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.remove(index);
               this.onChanged();
            } else {
               this.extensionBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder getExtensionBuilder(int index) {
            return this.getExtensionFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int index) {
            return this.extensionBuilder_ == null
               ? (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.extension_.get(index)
               : this.extensionBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList() {
            return this.extensionBuilder_ != null ? this.extensionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.extension_);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addExtensionBuilder() {
            return this.getExtensionFieldBuilder().addBuilder(DescriptorProtos.FieldDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addExtensionBuilder(int index) {
            return this.getExtensionFieldBuilder().addBuilder(index, DescriptorProtos.FieldDescriptorProto.getDefaultInstance());
         }

         public List<DescriptorProtos.FieldDescriptorProto.Builder> getExtensionBuilderList() {
            return this.getExtensionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.FieldDescriptorProto, DescriptorProtos.FieldDescriptorProto.Builder, DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionFieldBuilder() {
            if (this.extensionBuilder_ == null) {
               this.extensionBuilder_ = new RepeatedFieldBuilderV3<>(this.extension_, (this.bitField0_ & 4) != 0, this.getParentForChildren(), this.isClean());
               this.extension_ = null;
            }

            return this.extensionBuilder_;
         }

         private void ensureNestedTypeIsMutable() {
            if ((this.bitField0_ & 8) == 0) {
               this.nestedType_ = new ArrayList(this.nestedType_);
               this.bitField0_ |= 8;
            }

         }

         @Override
         public List<DescriptorProtos.DescriptorProto> getNestedTypeList() {
            return this.nestedTypeBuilder_ == null ? Collections.unmodifiableList(this.nestedType_) : this.nestedTypeBuilder_.getMessageList();
         }

         @Override
         public int getNestedTypeCount() {
            return this.nestedTypeBuilder_ == null ? this.nestedType_.size() : this.nestedTypeBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.DescriptorProto getNestedType(int index) {
            return this.nestedTypeBuilder_ == null ? (DescriptorProtos.DescriptorProto)this.nestedType_.get(index) : this.nestedTypeBuilder_.getMessage(index);
         }

         public DescriptorProtos.DescriptorProto.Builder setNestedType(int index, DescriptorProtos.DescriptorProto value) {
            if (this.nestedTypeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureNestedTypeIsMutable();
               this.nestedType_.set(index, value);
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setNestedType(int index, DescriptorProtos.DescriptorProto.Builder builderForValue) {
            if (this.nestedTypeBuilder_ == null) {
               this.ensureNestedTypeIsMutable();
               this.nestedType_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addNestedType(DescriptorProtos.DescriptorProto value) {
            if (this.nestedTypeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureNestedTypeIsMutable();
               this.nestedType_.add(value);
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addNestedType(int index, DescriptorProtos.DescriptorProto value) {
            if (this.nestedTypeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureNestedTypeIsMutable();
               this.nestedType_.add(index, value);
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addNestedType(DescriptorProtos.DescriptorProto.Builder builderForValue) {
            if (this.nestedTypeBuilder_ == null) {
               this.ensureNestedTypeIsMutable();
               this.nestedType_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addNestedType(int index, DescriptorProtos.DescriptorProto.Builder builderForValue) {
            if (this.nestedTypeBuilder_ == null) {
               this.ensureNestedTypeIsMutable();
               this.nestedType_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllNestedType(Iterable<? extends DescriptorProtos.DescriptorProto> values) {
            if (this.nestedTypeBuilder_ == null) {
               this.ensureNestedTypeIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.nestedType_);
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearNestedType() {
            if (this.nestedTypeBuilder_ == null) {
               this.nestedType_ = Collections.emptyList();
               this.bitField0_ &= -9;
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeNestedType(int index) {
            if (this.nestedTypeBuilder_ == null) {
               this.ensureNestedTypeIsMutable();
               this.nestedType_.remove(index);
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder getNestedTypeBuilder(int index) {
            return this.getNestedTypeFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.DescriptorProtoOrBuilder getNestedTypeOrBuilder(int index) {
            return this.nestedTypeBuilder_ == null
               ? (DescriptorProtos.DescriptorProtoOrBuilder)this.nestedType_.get(index)
               : this.nestedTypeBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.DescriptorProtoOrBuilder> getNestedTypeOrBuilderList() {
            return this.nestedTypeBuilder_ != null ? this.nestedTypeBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.nestedType_);
         }

         public DescriptorProtos.DescriptorProto.Builder addNestedTypeBuilder() {
            return this.getNestedTypeFieldBuilder().addBuilder(DescriptorProtos.DescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.DescriptorProto.Builder addNestedTypeBuilder(int index) {
            return this.getNestedTypeFieldBuilder().addBuilder(index, DescriptorProtos.DescriptorProto.getDefaultInstance());
         }

         public List<DescriptorProtos.DescriptorProto.Builder> getNestedTypeBuilderList() {
            return this.getNestedTypeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto, DescriptorProtos.DescriptorProto.Builder, DescriptorProtos.DescriptorProtoOrBuilder> getNestedTypeFieldBuilder() {
            if (this.nestedTypeBuilder_ == null) {
               this.nestedTypeBuilder_ = new RepeatedFieldBuilderV3<>(this.nestedType_, (this.bitField0_ & 8) != 0, this.getParentForChildren(), this.isClean());
               this.nestedType_ = null;
            }

            return this.nestedTypeBuilder_;
         }

         private void ensureEnumTypeIsMutable() {
            if ((this.bitField0_ & 16) == 0) {
               this.enumType_ = new ArrayList(this.enumType_);
               this.bitField0_ |= 16;
            }

         }

         @Override
         public List<DescriptorProtos.EnumDescriptorProto> getEnumTypeList() {
            return this.enumTypeBuilder_ == null ? Collections.unmodifiableList(this.enumType_) : this.enumTypeBuilder_.getMessageList();
         }

         @Override
         public int getEnumTypeCount() {
            return this.enumTypeBuilder_ == null ? this.enumType_.size() : this.enumTypeBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.EnumDescriptorProto getEnumType(int index) {
            return this.enumTypeBuilder_ == null ? (DescriptorProtos.EnumDescriptorProto)this.enumType_.get(index) : this.enumTypeBuilder_.getMessage(index);
         }

         public DescriptorProtos.DescriptorProto.Builder setEnumType(int index, DescriptorProtos.EnumDescriptorProto value) {
            if (this.enumTypeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEnumTypeIsMutable();
               this.enumType_.set(index, value);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setEnumType(int index, DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.enumTypeBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addEnumType(DescriptorProtos.EnumDescriptorProto value) {
            if (this.enumTypeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEnumTypeIsMutable();
               this.enumType_.add(value);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addEnumType(int index, DescriptorProtos.EnumDescriptorProto value) {
            if (this.enumTypeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEnumTypeIsMutable();
               this.enumType_.add(index, value);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addEnumType(DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addEnumType(int index, DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllEnumType(Iterable<? extends DescriptorProtos.EnumDescriptorProto> values) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.enumType_);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearEnumType() {
            if (this.enumTypeBuilder_ == null) {
               this.enumType_ = Collections.emptyList();
               this.bitField0_ &= -17;
               this.onChanged();
            } else {
               this.enumTypeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeEnumType(int index) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.remove(index);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder getEnumTypeBuilder(int index) {
            return this.getEnumTypeFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int index) {
            return this.enumTypeBuilder_ == null
               ? (DescriptorProtos.EnumDescriptorProtoOrBuilder)this.enumType_.get(index)
               : this.enumTypeBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList() {
            return this.enumTypeBuilder_ != null ? this.enumTypeBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.enumType_);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addEnumTypeBuilder() {
            return this.getEnumTypeFieldBuilder().addBuilder(DescriptorProtos.EnumDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addEnumTypeBuilder(int index) {
            return this.getEnumTypeFieldBuilder().addBuilder(index, DescriptorProtos.EnumDescriptorProto.getDefaultInstance());
         }

         public List<DescriptorProtos.EnumDescriptorProto.Builder> getEnumTypeBuilderList() {
            return this.getEnumTypeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.EnumDescriptorProto, DescriptorProtos.EnumDescriptorProto.Builder, DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeFieldBuilder() {
            if (this.enumTypeBuilder_ == null) {
               this.enumTypeBuilder_ = new RepeatedFieldBuilderV3<>(this.enumType_, (this.bitField0_ & 16) != 0, this.getParentForChildren(), this.isClean());
               this.enumType_ = null;
            }

            return this.enumTypeBuilder_;
         }

         private void ensureExtensionRangeIsMutable() {
            if ((this.bitField0_ & 32) == 0) {
               this.extensionRange_ = new ArrayList(this.extensionRange_);
               this.bitField0_ |= 32;
            }

         }

         @Override
         public List<DescriptorProtos.DescriptorProto.ExtensionRange> getExtensionRangeList() {
            return this.extensionRangeBuilder_ == null ? Collections.unmodifiableList(this.extensionRange_) : this.extensionRangeBuilder_.getMessageList();
         }

         @Override
         public int getExtensionRangeCount() {
            return this.extensionRangeBuilder_ == null ? this.extensionRange_.size() : this.extensionRangeBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.DescriptorProto.ExtensionRange getExtensionRange(int index) {
            return this.extensionRangeBuilder_ == null
               ? (DescriptorProtos.DescriptorProto.ExtensionRange)this.extensionRange_.get(index)
               : this.extensionRangeBuilder_.getMessage(index);
         }

         public DescriptorProtos.DescriptorProto.Builder setExtensionRange(int index, DescriptorProtos.DescriptorProto.ExtensionRange value) {
            if (this.extensionRangeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.set(index, value);
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setExtensionRange(int index, DescriptorProtos.DescriptorProto.ExtensionRange.Builder builderForValue) {
            if (this.extensionRangeBuilder_ == null) {
               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtensionRange(DescriptorProtos.DescriptorProto.ExtensionRange value) {
            if (this.extensionRangeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.add(value);
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtensionRange(int index, DescriptorProtos.DescriptorProto.ExtensionRange value) {
            if (this.extensionRangeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.add(index, value);
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtensionRange(DescriptorProtos.DescriptorProto.ExtensionRange.Builder builderForValue) {
            if (this.extensionRangeBuilder_ == null) {
               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtensionRange(int index, DescriptorProtos.DescriptorProto.ExtensionRange.Builder builderForValue) {
            if (this.extensionRangeBuilder_ == null) {
               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllExtensionRange(Iterable<? extends DescriptorProtos.DescriptorProto.ExtensionRange> values) {
            if (this.extensionRangeBuilder_ == null) {
               this.ensureExtensionRangeIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.extensionRange_);
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearExtensionRange() {
            if (this.extensionRangeBuilder_ == null) {
               this.extensionRange_ = Collections.emptyList();
               this.bitField0_ &= -33;
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeExtensionRange(int index) {
            if (this.extensionRangeBuilder_ == null) {
               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.remove(index);
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.ExtensionRange.Builder getExtensionRangeBuilder(int index) {
            return this.getExtensionRangeFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder getExtensionRangeOrBuilder(int index) {
            return this.extensionRangeBuilder_ == null
               ? (DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder)this.extensionRange_.get(index)
               : this.extensionRangeBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder> getExtensionRangeOrBuilderList() {
            return this.extensionRangeBuilder_ != null
               ? this.extensionRangeBuilder_.getMessageOrBuilderList()
               : Collections.unmodifiableList(this.extensionRange_);
         }

         public DescriptorProtos.DescriptorProto.ExtensionRange.Builder addExtensionRangeBuilder() {
            return this.getExtensionRangeFieldBuilder().addBuilder(DescriptorProtos.DescriptorProto.ExtensionRange.getDefaultInstance());
         }

         public DescriptorProtos.DescriptorProto.ExtensionRange.Builder addExtensionRangeBuilder(int index) {
            return this.getExtensionRangeFieldBuilder().addBuilder(index, DescriptorProtos.DescriptorProto.ExtensionRange.getDefaultInstance());
         }

         public List<DescriptorProtos.DescriptorProto.ExtensionRange.Builder> getExtensionRangeBuilderList() {
            return this.getExtensionRangeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto.ExtensionRange, DescriptorProtos.DescriptorProto.ExtensionRange.Builder, DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder> getExtensionRangeFieldBuilder() {
            if (this.extensionRangeBuilder_ == null) {
               this.extensionRangeBuilder_ = new RepeatedFieldBuilderV3<>(
                  this.extensionRange_, (this.bitField0_ & 32) != 0, this.getParentForChildren(), this.isClean()
               );
               this.extensionRange_ = null;
            }

            return this.extensionRangeBuilder_;
         }

         private void ensureOneofDeclIsMutable() {
            if ((this.bitField0_ & 64) == 0) {
               this.oneofDecl_ = new ArrayList(this.oneofDecl_);
               this.bitField0_ |= 64;
            }

         }

         @Override
         public List<DescriptorProtos.OneofDescriptorProto> getOneofDeclList() {
            return this.oneofDeclBuilder_ == null ? Collections.unmodifiableList(this.oneofDecl_) : this.oneofDeclBuilder_.getMessageList();
         }

         @Override
         public int getOneofDeclCount() {
            return this.oneofDeclBuilder_ == null ? this.oneofDecl_.size() : this.oneofDeclBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.OneofDescriptorProto getOneofDecl(int index) {
            return this.oneofDeclBuilder_ == null
               ? (DescriptorProtos.OneofDescriptorProto)this.oneofDecl_.get(index)
               : this.oneofDeclBuilder_.getMessage(index);
         }

         public DescriptorProtos.DescriptorProto.Builder setOneofDecl(int index, DescriptorProtos.OneofDescriptorProto value) {
            if (this.oneofDeclBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.set(index, value);
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setOneofDecl(int index, DescriptorProtos.OneofDescriptorProto.Builder builderForValue) {
            if (this.oneofDeclBuilder_ == null) {
               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addOneofDecl(DescriptorProtos.OneofDescriptorProto value) {
            if (this.oneofDeclBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.add(value);
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addOneofDecl(int index, DescriptorProtos.OneofDescriptorProto value) {
            if (this.oneofDeclBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.add(index, value);
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addOneofDecl(DescriptorProtos.OneofDescriptorProto.Builder builderForValue) {
            if (this.oneofDeclBuilder_ == null) {
               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addOneofDecl(int index, DescriptorProtos.OneofDescriptorProto.Builder builderForValue) {
            if (this.oneofDeclBuilder_ == null) {
               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllOneofDecl(Iterable<? extends DescriptorProtos.OneofDescriptorProto> values) {
            if (this.oneofDeclBuilder_ == null) {
               this.ensureOneofDeclIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.oneofDecl_);
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearOneofDecl() {
            if (this.oneofDeclBuilder_ == null) {
               this.oneofDecl_ = Collections.emptyList();
               this.bitField0_ &= -65;
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeOneofDecl(int index) {
            if (this.oneofDeclBuilder_ == null) {
               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.remove(index);
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.OneofDescriptorProto.Builder getOneofDeclBuilder(int index) {
            return this.getOneofDeclFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.OneofDescriptorProtoOrBuilder getOneofDeclOrBuilder(int index) {
            return this.oneofDeclBuilder_ == null
               ? (DescriptorProtos.OneofDescriptorProtoOrBuilder)this.oneofDecl_.get(index)
               : this.oneofDeclBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.OneofDescriptorProtoOrBuilder> getOneofDeclOrBuilderList() {
            return this.oneofDeclBuilder_ != null ? this.oneofDeclBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.oneofDecl_);
         }

         public DescriptorProtos.OneofDescriptorProto.Builder addOneofDeclBuilder() {
            return this.getOneofDeclFieldBuilder().addBuilder(DescriptorProtos.OneofDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.OneofDescriptorProto.Builder addOneofDeclBuilder(int index) {
            return this.getOneofDeclFieldBuilder().addBuilder(index, DescriptorProtos.OneofDescriptorProto.getDefaultInstance());
         }

         public List<DescriptorProtos.OneofDescriptorProto.Builder> getOneofDeclBuilderList() {
            return this.getOneofDeclFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.OneofDescriptorProto, DescriptorProtos.OneofDescriptorProto.Builder, DescriptorProtos.OneofDescriptorProtoOrBuilder> getOneofDeclFieldBuilder() {
            if (this.oneofDeclBuilder_ == null) {
               this.oneofDeclBuilder_ = new RepeatedFieldBuilderV3<>(this.oneofDecl_, (this.bitField0_ & 64) != 0, this.getParentForChildren(), this.isClean());
               this.oneofDecl_ = null;
            }

            return this.oneofDeclBuilder_;
         }

         @Override
         public boolean hasOptions() {
            return (this.bitField0_ & 128) != 0;
         }

         @Override
         public DescriptorProtos.MessageOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.MessageOptions.getDefaultInstance() : this.options_;
            } else {
               return this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.DescriptorProto.Builder setOptions(DescriptorProtos.MessageOptions value) {
            if (this.optionsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.options_ = value;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 128;
            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setOptions(DescriptorProtos.MessageOptions.Builder builderForValue) {
            if (this.optionsBuilder_ == null) {
               this.options_ = builderForValue.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 128;
            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder mergeOptions(DescriptorProtos.MessageOptions value) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 128) != 0 && this.options_ != null && this.options_ != DescriptorProtos.MessageOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.MessageOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
               } else {
                  this.options_ = value;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 128;
            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -129;
            return this;
         }

         public DescriptorProtos.MessageOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 128;
            this.onChanged();
            return this.getOptionsFieldBuilder().getBuilder();
         }

         @Override
         public DescriptorProtos.MessageOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.MessageOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3<DescriptorProtos.MessageOptions, DescriptorProtos.MessageOptions.Builder, DescriptorProtos.MessageOptionsOrBuilder> getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3<>(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         private void ensureReservedRangeIsMutable() {
            if ((this.bitField0_ & 256) == 0) {
               this.reservedRange_ = new ArrayList(this.reservedRange_);
               this.bitField0_ |= 256;
            }

         }

         @Override
         public List<DescriptorProtos.DescriptorProto.ReservedRange> getReservedRangeList() {
            return this.reservedRangeBuilder_ == null ? Collections.unmodifiableList(this.reservedRange_) : this.reservedRangeBuilder_.getMessageList();
         }

         @Override
         public int getReservedRangeCount() {
            return this.reservedRangeBuilder_ == null ? this.reservedRange_.size() : this.reservedRangeBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.DescriptorProto.ReservedRange getReservedRange(int index) {
            return this.reservedRangeBuilder_ == null
               ? (DescriptorProtos.DescriptorProto.ReservedRange)this.reservedRange_.get(index)
               : this.reservedRangeBuilder_.getMessage(index);
         }

         public DescriptorProtos.DescriptorProto.Builder setReservedRange(int index, DescriptorProtos.DescriptorProto.ReservedRange value) {
            if (this.reservedRangeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureReservedRangeIsMutable();
               this.reservedRange_.set(index, value);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setReservedRange(int index, DescriptorProtos.DescriptorProto.ReservedRange.Builder builderForValue) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addReservedRange(DescriptorProtos.DescriptorProto.ReservedRange value) {
            if (this.reservedRangeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(value);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addReservedRange(int index, DescriptorProtos.DescriptorProto.ReservedRange value) {
            if (this.reservedRangeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(index, value);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addReservedRange(DescriptorProtos.DescriptorProto.ReservedRange.Builder builderForValue) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addReservedRange(int index, DescriptorProtos.DescriptorProto.ReservedRange.Builder builderForValue) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllReservedRange(Iterable<? extends DescriptorProtos.DescriptorProto.ReservedRange> values) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.reservedRange_);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearReservedRange() {
            if (this.reservedRangeBuilder_ == null) {
               this.reservedRange_ = Collections.emptyList();
               this.bitField0_ &= -257;
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeReservedRange(int index) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.remove(index);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.ReservedRange.Builder getReservedRangeBuilder(int index) {
            return this.getReservedRangeFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder getReservedRangeOrBuilder(int index) {
            return this.reservedRangeBuilder_ == null
               ? (DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder)this.reservedRange_.get(index)
               : this.reservedRangeBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder> getReservedRangeOrBuilderList() {
            return this.reservedRangeBuilder_ != null
               ? this.reservedRangeBuilder_.getMessageOrBuilderList()
               : Collections.unmodifiableList(this.reservedRange_);
         }

         public DescriptorProtos.DescriptorProto.ReservedRange.Builder addReservedRangeBuilder() {
            return this.getReservedRangeFieldBuilder().addBuilder(DescriptorProtos.DescriptorProto.ReservedRange.getDefaultInstance());
         }

         public DescriptorProtos.DescriptorProto.ReservedRange.Builder addReservedRangeBuilder(int index) {
            return this.getReservedRangeFieldBuilder().addBuilder(index, DescriptorProtos.DescriptorProto.ReservedRange.getDefaultInstance());
         }

         public List<DescriptorProtos.DescriptorProto.ReservedRange.Builder> getReservedRangeBuilderList() {
            return this.getReservedRangeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto.ReservedRange, DescriptorProtos.DescriptorProto.ReservedRange.Builder, DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder> getReservedRangeFieldBuilder() {
            if (this.reservedRangeBuilder_ == null) {
               this.reservedRangeBuilder_ = new RepeatedFieldBuilderV3<>(
                  this.reservedRange_, (this.bitField0_ & 256) != 0, this.getParentForChildren(), this.isClean()
               );
               this.reservedRange_ = null;
            }

            return this.reservedRangeBuilder_;
         }

         private void ensureReservedNameIsMutable() {
            if ((this.bitField0_ & 512) == 0) {
               this.reservedName_ = new LazyStringArrayList(this.reservedName_);
               this.bitField0_ |= 512;
            }

         }

         public ProtocolStringList getReservedNameList() {
            return this.reservedName_.getUnmodifiableView();
         }

         @Override
         public int getReservedNameCount() {
            return this.reservedName_.size();
         }

         @Override
         public String getReservedName(int index) {
            return (String)this.reservedName_.get(index);
         }

         @Override
         public ByteString getReservedNameBytes(int index) {
            return this.reservedName_.getByteString(index);
         }

         public DescriptorProtos.DescriptorProto.Builder setReservedName(int index, String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureReservedNameIsMutable();
               this.reservedName_.set(index, value);
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.DescriptorProto.Builder addReservedName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureReservedNameIsMutable();
               this.reservedName_.add(value);
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.DescriptorProto.Builder addAllReservedName(Iterable<String> values) {
            this.ensureReservedNameIsMutable();
            AbstractMessageLite.Builder.addAll(values, this.reservedName_);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearReservedName() {
            this.reservedName_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -513;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addReservedNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureReservedNameIsMutable();
               this.reservedName_.add(value);
               this.onChanged();
               return this;
            }
         }

         public final DescriptorProtos.DescriptorProto.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.DescriptorProto.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.DescriptorProto.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.DescriptorProto.Builder)super.mergeUnknownFields(unknownFields);
         }
      }

      public static final class ExtensionRange extends GeneratedMessageV3 implements DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder {
         private static final long serialVersionUID = 0L;
         private int bitField0_;
         public static final int START_FIELD_NUMBER = 1;
         private int start_;
         public static final int END_FIELD_NUMBER = 2;
         private int end_;
         public static final int OPTIONS_FIELD_NUMBER = 3;
         private DescriptorProtos.ExtensionRangeOptions options_;
         private byte memoizedIsInitialized = -1;
         private static final DescriptorProtos.DescriptorProto.ExtensionRange DEFAULT_INSTANCE = new DescriptorProtos.DescriptorProto.ExtensionRange();
         @Deprecated
         public static final Parser<DescriptorProtos.DescriptorProto.ExtensionRange> PARSER = new AbstractParser<DescriptorProtos.DescriptorProto.ExtensionRange>(
            
         ) {
            public DescriptorProtos.DescriptorProto.ExtensionRange parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new DescriptorProtos.DescriptorProto.ExtensionRange(input, extensionRegistry);
            }
         };

         private ExtensionRange(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
         }

         private ExtensionRange() {
         }

         @Override
         protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
            return new DescriptorProtos.DescriptorProto.ExtensionRange();
         }

         @Override
         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private ExtensionRange(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
               throw new NullPointerException();
            } else {
               int mutable_bitField0_ = 0;
               UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

               try {
                  boolean done = false;

                  while(!done) {
                     int tag = input.readTag();
                     switch(tag) {
                        case 0:
                           done = true;
                           break;
                        case 8:
                           this.bitField0_ |= 1;
                           this.start_ = input.readInt32();
                           break;
                        case 16:
                           this.bitField0_ |= 2;
                           this.end_ = input.readInt32();
                           break;
                        case 26:
                           DescriptorProtos.ExtensionRangeOptions.Builder subBuilder = null;
                           if ((this.bitField0_ & 4) != 0) {
                              subBuilder = this.options_.toBuilder();
                           }

                           this.options_ = input.readMessage(DescriptorProtos.ExtensionRangeOptions.PARSER, extensionRegistry);
                           if (subBuilder != null) {
                              subBuilder.mergeFrom(this.options_);
                              this.options_ = subBuilder.buildPartial();
                           }

                           this.bitField0_ |= 4;
                           break;
                        default:
                           if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                              done = true;
                           }
                     }
                  }
               } catch (InvalidProtocolBufferException var13) {
                  throw var13.setUnfinishedMessage(this);
               } catch (UninitializedMessageException var14) {
                  throw var14.asInvalidProtocolBufferException().setUnfinishedMessage(this);
               } catch (IOException var15) {
                  throw new InvalidProtocolBufferException(var15).setUnfinishedMessage(this);
               } finally {
                  this.unknownFields = unknownFields.build();
                  this.makeExtensionsImmutable();
               }

            }
         }

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable
               .ensureFieldAccessorsInitialized(
                  DescriptorProtos.DescriptorProto.ExtensionRange.class, DescriptorProtos.DescriptorProto.ExtensionRange.Builder.class
               );
         }

         @Override
         public boolean hasStart() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public int getStart() {
            return this.start_;
         }

         @Override
         public boolean hasEnd() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public int getEnd() {
            return this.end_;
         }

         @Override
         public boolean hasOptions() {
            return (this.bitField0_ & 4) != 0;
         }

         @Override
         public DescriptorProtos.ExtensionRangeOptions getOptions() {
            return this.options_ == null ? DescriptorProtos.ExtensionRangeOptions.getDefaultInstance() : this.options_;
         }

         @Override
         public DescriptorProtos.ExtensionRangeOptionsOrBuilder getOptionsOrBuilder() {
            return this.options_ == null ? DescriptorProtos.ExtensionRangeOptions.getDefaultInstance() : this.options_;
         }

         @Override
         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
               return true;
            } else if (isInitialized == 0) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         @Override
         public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) != 0) {
               output.writeInt32(1, this.start_);
            }

            if ((this.bitField0_ & 2) != 0) {
               output.writeInt32(2, this.end_);
            }

            if ((this.bitField0_ & 4) != 0) {
               output.writeMessage(3, this.getOptions());
            }

            this.unknownFields.writeTo(output);
         }

         @Override
         public int getSerializedSize() {
            int size = this.memoizedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) != 0) {
                  size += CodedOutputStream.computeInt32Size(1, this.start_);
               }

               if ((this.bitField0_ & 2) != 0) {
                  size += CodedOutputStream.computeInt32Size(2, this.end_);
               }

               if ((this.bitField0_ & 4) != 0) {
                  size += CodedOutputStream.computeMessageSize(3, this.getOptions());
               }

               size += this.unknownFields.getSerializedSize();
               this.memoizedSize = size;
               return size;
            }
         }

         @Override
         public boolean equals(Object obj) {
            if (obj == this) {
               return true;
            } else if (!(obj instanceof DescriptorProtos.DescriptorProto.ExtensionRange)) {
               return super.equals(obj);
            } else {
               DescriptorProtos.DescriptorProto.ExtensionRange other = (DescriptorProtos.DescriptorProto.ExtensionRange)obj;
               if (this.hasStart() != other.hasStart()) {
                  return false;
               } else if (this.hasStart() && this.getStart() != other.getStart()) {
                  return false;
               } else if (this.hasEnd() != other.hasEnd()) {
                  return false;
               } else if (this.hasEnd() && this.getEnd() != other.getEnd()) {
                  return false;
               } else if (this.hasOptions() != other.hasOptions()) {
                  return false;
               } else if (this.hasOptions() && !this.getOptions().equals(other.getOptions())) {
                  return false;
               } else {
                  return this.unknownFields.equals(other.unknownFields);
               }
            }
         }

         @Override
         public int hashCode() {
            if (this.memoizedHashCode != 0) {
               return this.memoizedHashCode;
            } else {
               int hash = 41;
               hash = 19 * hash + getDescriptor().hashCode();
               if (this.hasStart()) {
                  hash = 37 * hash + 1;
                  hash = 53 * hash + this.getStart();
               }

               if (this.hasEnd()) {
                  hash = 37 * hash + 2;
                  hash = 53 * hash + this.getEnd();
               }

               if (this.hasOptions()) {
                  hash = 37 * hash + 3;
                  hash = 53 * hash + this.getOptions().hashCode();
               }

               hash = 29 * hash + this.unknownFields.hashCode();
               this.memoizedHashCode = hash;
               return hash;
            }
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(InputStream input) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseDelimitedFrom(InputStream input) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(CodedInputStream input) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
         }

         public DescriptorProtos.DescriptorProto.ExtensionRange.Builder newBuilderForType() {
            return newBuilder();
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange.Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange.Builder newBuilder(DescriptorProtos.DescriptorProto.ExtensionRange prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
         }

         public DescriptorProtos.DescriptorProto.ExtensionRange.Builder toBuilder() {
            return this == DEFAULT_INSTANCE
               ? new DescriptorProtos.DescriptorProto.ExtensionRange.Builder()
               : new DescriptorProtos.DescriptorProto.ExtensionRange.Builder().mergeFrom(this);
         }

         protected DescriptorProtos.DescriptorProto.ExtensionRange.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
            return new DescriptorProtos.DescriptorProto.ExtensionRange.Builder(parent);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange getDefaultInstance() {
            return DEFAULT_INSTANCE;
         }

         public static Parser<DescriptorProtos.DescriptorProto.ExtensionRange> parser() {
            return PARSER;
         }

         @Override
         public Parser<DescriptorProtos.DescriptorProto.ExtensionRange> getParserForType() {
            return PARSER;
         }

         public DescriptorProtos.DescriptorProto.ExtensionRange getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
         }

         public static final class Builder
            extends GeneratedMessageV3.Builder<DescriptorProtos.DescriptorProto.ExtensionRange.Builder>
            implements DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder {
            private int bitField0_;
            private int start_;
            private int end_;
            private DescriptorProtos.ExtensionRangeOptions options_;
            private SingleFieldBuilderV3<DescriptorProtos.ExtensionRangeOptions, DescriptorProtos.ExtensionRangeOptions.Builder, DescriptorProtos.ExtensionRangeOptionsOrBuilder> optionsBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
               return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor;
            }

            @Override
            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
               return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                     DescriptorProtos.DescriptorProto.ExtensionRange.class, DescriptorProtos.DescriptorProto.ExtensionRange.Builder.class
                  );
            }

            private Builder() {
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
               super(parent);
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (GeneratedMessageV3.alwaysUseFieldBuilders) {
                  this.getOptionsFieldBuilder();
               }

            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clear() {
               super.clear();
               this.start_ = 0;
               this.bitField0_ &= -2;
               this.end_ = 0;
               this.bitField0_ &= -3;
               if (this.optionsBuilder_ == null) {
                  this.options_ = null;
               } else {
                  this.optionsBuilder_.clear();
               }

               this.bitField0_ &= -5;
               return this;
            }

            @Override
            public Descriptors.Descriptor getDescriptorForType() {
               return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange getDefaultInstanceForType() {
               return DescriptorProtos.DescriptorProto.ExtensionRange.getDefaultInstance();
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange build() {
               DescriptorProtos.DescriptorProto.ExtensionRange result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange buildPartial() {
               DescriptorProtos.DescriptorProto.ExtensionRange result = new DescriptorProtos.DescriptorProto.ExtensionRange(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) != 0) {
                  result.start_ = this.start_;
                  to_bitField0_ |= 1;
               }

               if ((from_bitField0_ & 2) != 0) {
                  result.end_ = this.end_;
                  to_bitField0_ |= 2;
               }

               if ((from_bitField0_ & 4) != 0) {
                  if (this.optionsBuilder_ == null) {
                     result.options_ = this.options_;
                  } else {
                     result.options_ = this.optionsBuilder_.build();
                  }

                  to_bitField0_ |= 4;
               }

               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clone() {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.clone();
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder setField(Descriptors.FieldDescriptor field, Object value) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.setField(field, value);
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clearField(Descriptors.FieldDescriptor field) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.clearField(field);
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.clearOneof(oneof);
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.setRepeatedField(field, index, value);
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.addRepeatedField(field, value);
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder mergeFrom(Message other) {
               if (other instanceof DescriptorProtos.DescriptorProto.ExtensionRange) {
                  return this.mergeFrom((DescriptorProtos.DescriptorProto.ExtensionRange)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder mergeFrom(DescriptorProtos.DescriptorProto.ExtensionRange other) {
               if (other == DescriptorProtos.DescriptorProto.ExtensionRange.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasStart()) {
                     this.setStart(other.getStart());
                  }

                  if (other.hasEnd()) {
                     this.setEnd(other.getEnd());
                  }

                  if (other.hasOptions()) {
                     this.mergeOptions(other.getOptions());
                  }

                  this.mergeUnknownFields(other.unknownFields);
                  this.onChanged();
                  return this;
               }
            }

            @Override
            public final boolean isInitialized() {
               return !this.hasOptions() || this.getOptions().isInitialized();
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               DescriptorProtos.DescriptorProto.ExtensionRange parsedMessage = null;

               try {
                  parsedMessage = DescriptorProtos.DescriptorProto.ExtensionRange.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException var8) {
                  parsedMessage = (DescriptorProtos.DescriptorProto.ExtensionRange)var8.getUnfinishedMessage();
                  throw var8.unwrapIOException();
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            @Override
            public boolean hasStart() {
               return (this.bitField0_ & 1) != 0;
            }

            @Override
            public int getStart() {
               return this.start_;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder setStart(int value) {
               this.bitField0_ |= 1;
               this.start_ = value;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clearStart() {
               this.bitField0_ &= -2;
               this.start_ = 0;
               this.onChanged();
               return this;
            }

            @Override
            public boolean hasEnd() {
               return (this.bitField0_ & 2) != 0;
            }

            @Override
            public int getEnd() {
               return this.end_;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder setEnd(int value) {
               this.bitField0_ |= 2;
               this.end_ = value;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clearEnd() {
               this.bitField0_ &= -3;
               this.end_ = 0;
               this.onChanged();
               return this;
            }

            @Override
            public boolean hasOptions() {
               return (this.bitField0_ & 4) != 0;
            }

            @Override
            public DescriptorProtos.ExtensionRangeOptions getOptions() {
               if (this.optionsBuilder_ == null) {
                  return this.options_ == null ? DescriptorProtos.ExtensionRangeOptions.getDefaultInstance() : this.options_;
               } else {
                  return this.optionsBuilder_.getMessage();
               }
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder setOptions(DescriptorProtos.ExtensionRangeOptions value) {
               if (this.optionsBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.options_ = value;
                  this.onChanged();
               } else {
                  this.optionsBuilder_.setMessage(value);
               }

               this.bitField0_ |= 4;
               return this;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder setOptions(DescriptorProtos.ExtensionRangeOptions.Builder builderForValue) {
               if (this.optionsBuilder_ == null) {
                  this.options_ = builderForValue.build();
                  this.onChanged();
               } else {
                  this.optionsBuilder_.setMessage(builderForValue.build());
               }

               this.bitField0_ |= 4;
               return this;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder mergeOptions(DescriptorProtos.ExtensionRangeOptions value) {
               if (this.optionsBuilder_ == null) {
                  if ((this.bitField0_ & 4) != 0 && this.options_ != null && this.options_ != DescriptorProtos.ExtensionRangeOptions.getDefaultInstance()) {
                     this.options_ = DescriptorProtos.ExtensionRangeOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
                  } else {
                     this.options_ = value;
                  }

                  this.onChanged();
               } else {
                  this.optionsBuilder_.mergeFrom(value);
               }

               this.bitField0_ |= 4;
               return this;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clearOptions() {
               if (this.optionsBuilder_ == null) {
                  this.options_ = null;
                  this.onChanged();
               } else {
                  this.optionsBuilder_.clear();
               }

               this.bitField0_ &= -5;
               return this;
            }

            public DescriptorProtos.ExtensionRangeOptions.Builder getOptionsBuilder() {
               this.bitField0_ |= 4;
               this.onChanged();
               return this.getOptionsFieldBuilder().getBuilder();
            }

            @Override
            public DescriptorProtos.ExtensionRangeOptionsOrBuilder getOptionsOrBuilder() {
               if (this.optionsBuilder_ != null) {
                  return this.optionsBuilder_.getMessageOrBuilder();
               } else {
                  return this.options_ == null ? DescriptorProtos.ExtensionRangeOptions.getDefaultInstance() : this.options_;
               }
            }

            private SingleFieldBuilderV3<DescriptorProtos.ExtensionRangeOptions, DescriptorProtos.ExtensionRangeOptions.Builder, DescriptorProtos.ExtensionRangeOptionsOrBuilder> getOptionsFieldBuilder() {
               if (this.optionsBuilder_ == null) {
                  this.optionsBuilder_ = new SingleFieldBuilderV3<>(this.getOptions(), this.getParentForChildren(), this.isClean());
                  this.options_ = null;
               }

               return this.optionsBuilder_;
            }

            public final DescriptorProtos.DescriptorProto.ExtensionRange.Builder setUnknownFields(UnknownFieldSet unknownFields) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.setUnknownFields(unknownFields);
            }

            public final DescriptorProtos.DescriptorProto.ExtensionRange.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.mergeUnknownFields(unknownFields);
            }
         }
      }

      public interface ExtensionRangeOrBuilder extends MessageOrBuilder {
         boolean hasStart();

         int getStart();

         boolean hasEnd();

         int getEnd();

         boolean hasOptions();

         DescriptorProtos.ExtensionRangeOptions getOptions();

         DescriptorProtos.ExtensionRangeOptionsOrBuilder getOptionsOrBuilder();
      }

      public static final class ReservedRange extends GeneratedMessageV3 implements DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder {
         private static final long serialVersionUID = 0L;
         private int bitField0_;
         public static final int START_FIELD_NUMBER = 1;
         private int start_;
         public static final int END_FIELD_NUMBER = 2;
         private int end_;
         private byte memoizedIsInitialized = -1;
         private static final DescriptorProtos.DescriptorProto.ReservedRange DEFAULT_INSTANCE = new DescriptorProtos.DescriptorProto.ReservedRange();
         @Deprecated
         public static final Parser<DescriptorProtos.DescriptorProto.ReservedRange> PARSER = new AbstractParser<DescriptorProtos.DescriptorProto.ReservedRange>(
            
         ) {
            public DescriptorProtos.DescriptorProto.ReservedRange parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new DescriptorProtos.DescriptorProto.ReservedRange(input, extensionRegistry);
            }
         };

         private ReservedRange(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
         }

         private ReservedRange() {
         }

         @Override
         protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
            return new DescriptorProtos.DescriptorProto.ReservedRange();
         }

         @Override
         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private ReservedRange(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
               throw new NullPointerException();
            } else {
               int mutable_bitField0_ = 0;
               UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

               try {
                  boolean done = false;

                  while(!done) {
                     int tag = input.readTag();
                     switch(tag) {
                        case 0:
                           done = true;
                           break;
                        case 8:
                           this.bitField0_ |= 1;
                           this.start_ = input.readInt32();
                           break;
                        case 16:
                           this.bitField0_ |= 2;
                           this.end_ = input.readInt32();
                           break;
                        default:
                           if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                              done = true;
                           }
                     }
                  }
               } catch (InvalidProtocolBufferException var12) {
                  throw var12.setUnfinishedMessage(this);
               } catch (UninitializedMessageException var13) {
                  throw var13.asInvalidProtocolBufferException().setUnfinishedMessage(this);
               } catch (IOException var14) {
                  throw new InvalidProtocolBufferException(var14).setUnfinishedMessage(this);
               } finally {
                  this.unknownFields = unknownFields.build();
                  this.makeExtensionsImmutable();
               }

            }
         }

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable
               .ensureFieldAccessorsInitialized(
                  DescriptorProtos.DescriptorProto.ReservedRange.class, DescriptorProtos.DescriptorProto.ReservedRange.Builder.class
               );
         }

         @Override
         public boolean hasStart() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public int getStart() {
            return this.start_;
         }

         @Override
         public boolean hasEnd() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public int getEnd() {
            return this.end_;
         }

         @Override
         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
               return true;
            } else if (isInitialized == 0) {
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         @Override
         public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) != 0) {
               output.writeInt32(1, this.start_);
            }

            if ((this.bitField0_ & 2) != 0) {
               output.writeInt32(2, this.end_);
            }

            this.unknownFields.writeTo(output);
         }

         @Override
         public int getSerializedSize() {
            int size = this.memoizedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) != 0) {
                  size += CodedOutputStream.computeInt32Size(1, this.start_);
               }

               if ((this.bitField0_ & 2) != 0) {
                  size += CodedOutputStream.computeInt32Size(2, this.end_);
               }

               size += this.unknownFields.getSerializedSize();
               this.memoizedSize = size;
               return size;
            }
         }

         @Override
         public boolean equals(Object obj) {
            if (obj == this) {
               return true;
            } else if (!(obj instanceof DescriptorProtos.DescriptorProto.ReservedRange)) {
               return super.equals(obj);
            } else {
               DescriptorProtos.DescriptorProto.ReservedRange other = (DescriptorProtos.DescriptorProto.ReservedRange)obj;
               if (this.hasStart() != other.hasStart()) {
                  return false;
               } else if (this.hasStart() && this.getStart() != other.getStart()) {
                  return false;
               } else if (this.hasEnd() != other.hasEnd()) {
                  return false;
               } else if (this.hasEnd() && this.getEnd() != other.getEnd()) {
                  return false;
               } else {
                  return this.unknownFields.equals(other.unknownFields);
               }
            }
         }

         @Override
         public int hashCode() {
            if (this.memoizedHashCode != 0) {
               return this.memoizedHashCode;
            } else {
               int hash = 41;
               hash = 19 * hash + getDescriptor().hashCode();
               if (this.hasStart()) {
                  hash = 37 * hash + 1;
                  hash = 53 * hash + this.getStart();
               }

               if (this.hasEnd()) {
                  hash = 37 * hash + 2;
                  hash = 53 * hash + this.getEnd();
               }

               hash = 29 * hash + this.unknownFields.hashCode();
               this.memoizedHashCode = hash;
               return hash;
            }
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(InputStream input) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseDelimitedFrom(InputStream input) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(CodedInputStream input) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
         }

         public DescriptorProtos.DescriptorProto.ReservedRange.Builder newBuilderForType() {
            return newBuilder();
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange.Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange.Builder newBuilder(DescriptorProtos.DescriptorProto.ReservedRange prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
         }

         public DescriptorProtos.DescriptorProto.ReservedRange.Builder toBuilder() {
            return this == DEFAULT_INSTANCE
               ? new DescriptorProtos.DescriptorProto.ReservedRange.Builder()
               : new DescriptorProtos.DescriptorProto.ReservedRange.Builder().mergeFrom(this);
         }

         protected DescriptorProtos.DescriptorProto.ReservedRange.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
            return new DescriptorProtos.DescriptorProto.ReservedRange.Builder(parent);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange getDefaultInstance() {
            return DEFAULT_INSTANCE;
         }

         public static Parser<DescriptorProtos.DescriptorProto.ReservedRange> parser() {
            return PARSER;
         }

         @Override
         public Parser<DescriptorProtos.DescriptorProto.ReservedRange> getParserForType() {
            return PARSER;
         }

         public DescriptorProtos.DescriptorProto.ReservedRange getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
         }

         public static final class Builder
            extends GeneratedMessageV3.Builder<DescriptorProtos.DescriptorProto.ReservedRange.Builder>
            implements DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder {
            private int bitField0_;
            private int start_;
            private int end_;

            public static final Descriptors.Descriptor getDescriptor() {
               return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor;
            }

            @Override
            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
               return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                     DescriptorProtos.DescriptorProto.ReservedRange.class, DescriptorProtos.DescriptorProto.ReservedRange.Builder.class
                  );
            }

            private Builder() {
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
               super(parent);
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               }

            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder clear() {
               super.clear();
               this.start_ = 0;
               this.bitField0_ &= -2;
               this.end_ = 0;
               this.bitField0_ &= -3;
               return this;
            }

            @Override
            public Descriptors.Descriptor getDescriptorForType() {
               return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange getDefaultInstanceForType() {
               return DescriptorProtos.DescriptorProto.ReservedRange.getDefaultInstance();
            }

            public DescriptorProtos.DescriptorProto.ReservedRange build() {
               DescriptorProtos.DescriptorProto.ReservedRange result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public DescriptorProtos.DescriptorProto.ReservedRange buildPartial() {
               DescriptorProtos.DescriptorProto.ReservedRange result = new DescriptorProtos.DescriptorProto.ReservedRange(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) != 0) {
                  result.start_ = this.start_;
                  to_bitField0_ |= 1;
               }

               if ((from_bitField0_ & 2) != 0) {
                  result.end_ = this.end_;
                  to_bitField0_ |= 2;
               }

               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder clone() {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.clone();
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder setField(Descriptors.FieldDescriptor field, Object value) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.setField(field, value);
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder clearField(Descriptors.FieldDescriptor field) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.clearField(field);
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.clearOneof(oneof);
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.setRepeatedField(field, index, value);
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.addRepeatedField(field, value);
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder mergeFrom(Message other) {
               if (other instanceof DescriptorProtos.DescriptorProto.ReservedRange) {
                  return this.mergeFrom((DescriptorProtos.DescriptorProto.ReservedRange)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder mergeFrom(DescriptorProtos.DescriptorProto.ReservedRange other) {
               if (other == DescriptorProtos.DescriptorProto.ReservedRange.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasStart()) {
                     this.setStart(other.getStart());
                  }

                  if (other.hasEnd()) {
                     this.setEnd(other.getEnd());
                  }

                  this.mergeUnknownFields(other.unknownFields);
                  this.onChanged();
                  return this;
               }
            }

            @Override
            public final boolean isInitialized() {
               return true;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               DescriptorProtos.DescriptorProto.ReservedRange parsedMessage = null;

               try {
                  parsedMessage = DescriptorProtos.DescriptorProto.ReservedRange.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException var8) {
                  parsedMessage = (DescriptorProtos.DescriptorProto.ReservedRange)var8.getUnfinishedMessage();
                  throw var8.unwrapIOException();
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            @Override
            public boolean hasStart() {
               return (this.bitField0_ & 1) != 0;
            }

            @Override
            public int getStart() {
               return this.start_;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder setStart(int value) {
               this.bitField0_ |= 1;
               this.start_ = value;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder clearStart() {
               this.bitField0_ &= -2;
               this.start_ = 0;
               this.onChanged();
               return this;
            }

            @Override
            public boolean hasEnd() {
               return (this.bitField0_ & 2) != 0;
            }

            @Override
            public int getEnd() {
               return this.end_;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder setEnd(int value) {
               this.bitField0_ |= 2;
               this.end_ = value;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder clearEnd() {
               this.bitField0_ &= -3;
               this.end_ = 0;
               this.onChanged();
               return this;
            }

            public final DescriptorProtos.DescriptorProto.ReservedRange.Builder setUnknownFields(UnknownFieldSet unknownFields) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.setUnknownFields(unknownFields);
            }

            public final DescriptorProtos.DescriptorProto.ReservedRange.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.mergeUnknownFields(unknownFields);
            }
         }
      }

      public interface ReservedRangeOrBuilder extends MessageOrBuilder {
         boolean hasStart();

         int getStart();

         boolean hasEnd();

         int getEnd();
      }
   }

   public interface DescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      List<DescriptorProtos.FieldDescriptorProto> getFieldList();

      DescriptorProtos.FieldDescriptorProto getField(int var1);

      int getFieldCount();

      List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getFieldOrBuilderList();

      DescriptorProtos.FieldDescriptorProtoOrBuilder getFieldOrBuilder(int var1);

      List<DescriptorProtos.FieldDescriptorProto> getExtensionList();

      DescriptorProtos.FieldDescriptorProto getExtension(int var1);

      int getExtensionCount();

      List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList();

      DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int var1);

      List<DescriptorProtos.DescriptorProto> getNestedTypeList();

      DescriptorProtos.DescriptorProto getNestedType(int var1);

      int getNestedTypeCount();

      List<? extends DescriptorProtos.DescriptorProtoOrBuilder> getNestedTypeOrBuilderList();

      DescriptorProtos.DescriptorProtoOrBuilder getNestedTypeOrBuilder(int var1);

      List<DescriptorProtos.EnumDescriptorProto> getEnumTypeList();

      DescriptorProtos.EnumDescriptorProto getEnumType(int var1);

      int getEnumTypeCount();

      List<? extends DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList();

      DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int var1);

      List<DescriptorProtos.DescriptorProto.ExtensionRange> getExtensionRangeList();

      DescriptorProtos.DescriptorProto.ExtensionRange getExtensionRange(int var1);

      int getExtensionRangeCount();

      List<? extends DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder> getExtensionRangeOrBuilderList();

      DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder getExtensionRangeOrBuilder(int var1);

      List<DescriptorProtos.OneofDescriptorProto> getOneofDeclList();

      DescriptorProtos.OneofDescriptorProto getOneofDecl(int var1);

      int getOneofDeclCount();

      List<? extends DescriptorProtos.OneofDescriptorProtoOrBuilder> getOneofDeclOrBuilderList();

      DescriptorProtos.OneofDescriptorProtoOrBuilder getOneofDeclOrBuilder(int var1);

      boolean hasOptions();

      DescriptorProtos.MessageOptions getOptions();

      DescriptorProtos.MessageOptionsOrBuilder getOptionsOrBuilder();

      List<DescriptorProtos.DescriptorProto.ReservedRange> getReservedRangeList();

      DescriptorProtos.DescriptorProto.ReservedRange getReservedRange(int var1);

      int getReservedRangeCount();

      List<? extends DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder> getReservedRangeOrBuilderList();

      DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder getReservedRangeOrBuilder(int var1);

      List<String> getReservedNameList();

      int getReservedNameCount();

      String getReservedName(int var1);

      ByteString getReservedNameBytes(int var1);
   }

   public static final class EnumDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.EnumDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int VALUE_FIELD_NUMBER = 2;
      private List<DescriptorProtos.EnumValueDescriptorProto> value_;
      public static final int OPTIONS_FIELD_NUMBER = 3;
      private DescriptorProtos.EnumOptions options_;
      public static final int RESERVED_RANGE_FIELD_NUMBER = 4;
      private List<DescriptorProtos.EnumDescriptorProto.EnumReservedRange> reservedRange_;
      public static final int RESERVED_NAME_FIELD_NUMBER = 5;
      private LazyStringList reservedName_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.EnumDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.EnumDescriptorProto();
      @Deprecated
      public static final Parser<DescriptorProtos.EnumDescriptorProto> PARSER = new AbstractParser<DescriptorProtos.EnumDescriptorProto>() {
         public DescriptorProtos.EnumDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.EnumDescriptorProto(input, extensionRegistry);
         }
      };

      private EnumDescriptorProto(GeneratedMessageV3.Builder<?> builder) {
         super(builder);
      }

      private EnumDescriptorProto() {
         this.name_ = "";
         this.value_ = Collections.emptyList();
         this.reservedRange_ = Collections.emptyList();
         this.reservedName_ = LazyStringArrayList.EMPTY;
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.EnumDescriptorProto();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private EnumDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 10: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.name_ = bs;
                        break;
                     }
                     case 18:
                        if ((mutable_bitField0_ & 2) == 0) {
                           this.value_ = new ArrayList();
                           mutable_bitField0_ |= 2;
                        }

                        this.value_.add(input.readMessage(DescriptorProtos.EnumValueDescriptorProto.PARSER, extensionRegistry));
                        break;
                     case 26:
                        DescriptorProtos.EnumOptions.Builder subBuilder = null;
                        if ((this.bitField0_ & 2) != 0) {
                           subBuilder = this.options_.toBuilder();
                        }

                        this.options_ = input.readMessage(DescriptorProtos.EnumOptions.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.options_);
                           this.options_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 2;
                        break;
                     case 34:
                        if ((mutable_bitField0_ & 8) == 0) {
                           this.reservedRange_ = new ArrayList();
                           mutable_bitField0_ |= 8;
                        }

                        this.reservedRange_.add(input.readMessage(DescriptorProtos.EnumDescriptorProto.EnumReservedRange.PARSER, extensionRegistry));
                        break;
                     case 42: {
                        ByteString bs = input.readBytes();
                        if ((mutable_bitField0_ & 16) == 0) {
                           this.reservedName_ = new LazyStringArrayList();
                           mutable_bitField0_ |= 16;
                        }

                        this.reservedName_.add(bs);
                        break;
                     }
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var13) {
               throw var13.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var14) {
               throw var14.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var15) {
               throw new InvalidProtocolBufferException(var15).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 2) != 0) {
                  this.value_ = Collections.unmodifiableList(this.value_);
               }

               if ((mutable_bitField0_ & 8) != 0) {
                  this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_);
               }

               if ((mutable_bitField0_ & 16) != 0) {
                  this.reservedName_ = this.reservedName_.getUnmodifiableView();
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.EnumDescriptorProto.class, DescriptorProtos.EnumDescriptorProto.Builder.class);
      }

      @Override
      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public String getName() {
         Object ref = this.name_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.name_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getNameBytes() {
         Object ref = this.name_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.name_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public List<DescriptorProtos.EnumValueDescriptorProto> getValueList() {
         return this.value_;
      }

      @Override
      public List<? extends DescriptorProtos.EnumValueDescriptorProtoOrBuilder> getValueOrBuilderList() {
         return this.value_;
      }

      @Override
      public int getValueCount() {
         return this.value_.size();
      }

      @Override
      public DescriptorProtos.EnumValueDescriptorProto getValue(int index) {
         return (DescriptorProtos.EnumValueDescriptorProto)this.value_.get(index);
      }

      @Override
      public DescriptorProtos.EnumValueDescriptorProtoOrBuilder getValueOrBuilder(int index) {
         return (DescriptorProtos.EnumValueDescriptorProtoOrBuilder)this.value_.get(index);
      }

      @Override
      public boolean hasOptions() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public DescriptorProtos.EnumOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.EnumOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public DescriptorProtos.EnumOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.EnumOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public List<DescriptorProtos.EnumDescriptorProto.EnumReservedRange> getReservedRangeList() {
         return this.reservedRange_;
      }

      @Override
      public List<? extends DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder> getReservedRangeOrBuilderList() {
         return this.reservedRange_;
      }

      @Override
      public int getReservedRangeCount() {
         return this.reservedRange_.size();
      }

      @Override
      public DescriptorProtos.EnumDescriptorProto.EnumReservedRange getReservedRange(int index) {
         return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)this.reservedRange_.get(index);
      }

      @Override
      public DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder getReservedRangeOrBuilder(int index) {
         return (DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder)this.reservedRange_.get(index);
      }

      public ProtocolStringList getReservedNameList() {
         return this.reservedName_;
      }

      @Override
      public int getReservedNameCount() {
         return this.reservedName_.size();
      }

      @Override
      public String getReservedName(int index) {
         return (String)this.reservedName_.get(index);
      }

      @Override
      public ByteString getReservedNameBytes(int index) {
         return this.reservedName_.getByteString(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getValueCount(); ++i) {
               if (!this.getValue(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (this.hasOptions() && !this.getOptions().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.name_);
         }

         for(int i = 0; i < this.value_.size(); ++i) {
            output.writeMessage(2, (MessageLite)this.value_.get(i));
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeMessage(3, this.getOptions());
         }

         for(int i = 0; i < this.reservedRange_.size(); ++i) {
            output.writeMessage(4, (MessageLite)this.reservedRange_.get(i));
         }

         for(int i = 0; i < this.reservedName_.size(); ++i) {
            GeneratedMessageV3.writeString(output, 5, this.reservedName_.getRaw(i));
         }

         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            for(int i = 0; i < this.value_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.value_.get(i));
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeMessageSize(3, this.getOptions());
            }

            for(int i = 0; i < this.reservedRange_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(4, (MessageLite)this.reservedRange_.get(i));
            }

            int dataSize = 0;

            for(int i = 0; i < this.reservedName_.size(); ++i) {
               dataSize += computeStringSizeNoTag(this.reservedName_.getRaw(i));
            }

            size += dataSize;
            size += 1 * this.getReservedNameList().size();
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.EnumDescriptorProto)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.EnumDescriptorProto other = (DescriptorProtos.EnumDescriptorProto)obj;
            if (this.hasName() != other.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(other.getName())) {
               return false;
            } else if (!this.getValueList().equals(other.getValueList())) {
               return false;
            } else if (this.hasOptions() != other.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(other.getOptions())) {
               return false;
            } else if (!this.getReservedRangeList().equals(other.getReservedRangeList())) {
               return false;
            } else if (!this.getReservedNameList().equals(other.getReservedNameList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasName()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getName().hashCode();
            }

            if (this.getValueCount() > 0) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getValueList().hashCode();
            }

            if (this.hasOptions()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getOptions().hashCode();
            }

            if (this.getReservedRangeCount() > 0) {
               hash = 37 * hash + 4;
               hash = 53 * hash + this.getReservedRangeList().hashCode();
            }

            if (this.getReservedNameCount() > 0) {
               hash = 37 * hash + 5;
               hash = 53 * hash + this.getReservedNameList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.EnumDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.EnumDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.EnumDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.EnumDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.EnumDescriptorProto.Builder newBuilder(DescriptorProtos.EnumDescriptorProto prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.EnumDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE
            ? new DescriptorProtos.EnumDescriptorProto.Builder()
            : new DescriptorProtos.EnumDescriptorProto.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.EnumDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.EnumDescriptorProto.Builder(parent);
      }

      public static DescriptorProtos.EnumDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.EnumDescriptorProto> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.EnumDescriptorProto> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.EnumDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.Builder<DescriptorProtos.EnumDescriptorProto.Builder>
         implements DescriptorProtos.EnumDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_ = "";
         private List<DescriptorProtos.EnumValueDescriptorProto> value_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.EnumValueDescriptorProto, DescriptorProtos.EnumValueDescriptorProto.Builder, DescriptorProtos.EnumValueDescriptorProtoOrBuilder> valueBuilder_;
         private DescriptorProtos.EnumOptions options_;
         private SingleFieldBuilderV3<DescriptorProtos.EnumOptions, DescriptorProtos.EnumOptions.Builder, DescriptorProtos.EnumOptionsOrBuilder> optionsBuilder_;
         private List<DescriptorProtos.EnumDescriptorProto.EnumReservedRange> reservedRange_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.EnumDescriptorProto.EnumReservedRange, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder, DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder> reservedRangeBuilder_;
         private LazyStringList reservedName_ = LazyStringArrayList.EMPTY;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.EnumDescriptorProto.class, DescriptorProtos.EnumDescriptorProto.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getValueFieldBuilder();
               this.getOptionsFieldBuilder();
               this.getReservedRangeFieldBuilder();
            }

         }

         public DescriptorProtos.EnumDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            if (this.valueBuilder_ == null) {
               this.value_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.valueBuilder_.clear();
            }

            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            if (this.reservedRangeBuilder_ == null) {
               this.reservedRange_ = Collections.emptyList();
               this.bitField0_ &= -9;
            } else {
               this.reservedRangeBuilder_.clear();
            }

            this.reservedName_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -17;
            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_descriptor;
         }

         public DescriptorProtos.EnumDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.EnumDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.EnumDescriptorProto build() {
            DescriptorProtos.EnumDescriptorProto result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.EnumDescriptorProto buildPartial() {
            DescriptorProtos.EnumDescriptorProto result = new DescriptorProtos.EnumDescriptorProto(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.name_ = this.name_;
            if (this.valueBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0) {
                  this.value_ = Collections.unmodifiableList(this.value_);
                  this.bitField0_ &= -3;
               }

               result.value_ = this.value_;
            } else {
               result.value_ = this.valueBuilder_.build();
            }

            if ((from_bitField0_ & 4) != 0) {
               if (this.optionsBuilder_ == null) {
                  result.options_ = this.options_;
               } else {
                  result.options_ = this.optionsBuilder_.build();
               }

               to_bitField0_ |= 2;
            }

            if (this.reservedRangeBuilder_ == null) {
               if ((this.bitField0_ & 8) != 0) {
                  this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_);
                  this.bitField0_ &= -9;
               }

               result.reservedRange_ = this.reservedRange_;
            } else {
               result.reservedRange_ = this.reservedRangeBuilder_.build();
            }

            if ((this.bitField0_ & 16) != 0) {
               this.reservedName_ = this.reservedName_.getUnmodifiableView();
               this.bitField0_ &= -17;
            }

            result.reservedName_ = this.reservedName_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clone() {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.setField(field, value);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.clearField(field);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.addRepeatedField(field, value);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.EnumDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.EnumDescriptorProto)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.EnumDescriptorProto.Builder mergeFrom(DescriptorProtos.EnumDescriptorProto other) {
            if (other == DescriptorProtos.EnumDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = other.name_;
                  this.onChanged();
               }

               if (this.valueBuilder_ == null) {
                  if (!other.value_.isEmpty()) {
                     if (this.value_.isEmpty()) {
                        this.value_ = other.value_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureValueIsMutable();
                        this.value_.addAll(other.value_);
                     }

                     this.onChanged();
                  }
               } else if (!other.value_.isEmpty()) {
                  if (this.valueBuilder_.isEmpty()) {
                     this.valueBuilder_.dispose();
                     this.valueBuilder_ = null;
                     this.value_ = other.value_;
                     this.bitField0_ &= -3;
                     this.valueBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getValueFieldBuilder() : null;
                  } else {
                     this.valueBuilder_.addAllMessages(other.value_);
                  }
               }

               if (other.hasOptions()) {
                  this.mergeOptions(other.getOptions());
               }

               if (this.reservedRangeBuilder_ == null) {
                  if (!other.reservedRange_.isEmpty()) {
                     if (this.reservedRange_.isEmpty()) {
                        this.reservedRange_ = other.reservedRange_;
                        this.bitField0_ &= -9;
                     } else {
                        this.ensureReservedRangeIsMutable();
                        this.reservedRange_.addAll(other.reservedRange_);
                     }

                     this.onChanged();
                  }
               } else if (!other.reservedRange_.isEmpty()) {
                  if (this.reservedRangeBuilder_.isEmpty()) {
                     this.reservedRangeBuilder_.dispose();
                     this.reservedRangeBuilder_ = null;
                     this.reservedRange_ = other.reservedRange_;
                     this.bitField0_ &= -9;
                     this.reservedRangeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getReservedRangeFieldBuilder() : null;
                  } else {
                     this.reservedRangeBuilder_.addAllMessages(other.reservedRange_);
                  }
               }

               if (!other.reservedName_.isEmpty()) {
                  if (this.reservedName_.isEmpty()) {
                     this.reservedName_ = other.reservedName_;
                     this.bitField0_ &= -17;
                  } else {
                     this.ensureReservedNameIsMutable();
                     this.reservedName_.addAll(other.reservedName_);
                  }

                  this.onChanged();
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getValueCount(); ++i) {
               if (!this.getValue(i).isInitialized()) {
                  return false;
               }
            }

            return !this.hasOptions() || this.getOptions().isInitialized();
         }

         public DescriptorProtos.EnumDescriptorProto.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.EnumDescriptorProto parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.EnumDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.EnumDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public String getName() {
            Object ref = this.name_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.name_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.name_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.EnumDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         private void ensureValueIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.value_ = new ArrayList(this.value_);
               this.bitField0_ |= 2;
            }

         }

         @Override
         public List<DescriptorProtos.EnumValueDescriptorProto> getValueList() {
            return this.valueBuilder_ == null ? Collections.unmodifiableList(this.value_) : this.valueBuilder_.getMessageList();
         }

         @Override
         public int getValueCount() {
            return this.valueBuilder_ == null ? this.value_.size() : this.valueBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.EnumValueDescriptorProto getValue(int index) {
            return this.valueBuilder_ == null ? (DescriptorProtos.EnumValueDescriptorProto)this.value_.get(index) : this.valueBuilder_.getMessage(index);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setValue(int index, DescriptorProtos.EnumValueDescriptorProto value) {
            if (this.valueBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureValueIsMutable();
               this.value_.set(index, value);
               this.onChanged();
            } else {
               this.valueBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setValue(int index, DescriptorProtos.EnumValueDescriptorProto.Builder builderForValue) {
            if (this.valueBuilder_ == null) {
               this.ensureValueIsMutable();
               this.value_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.valueBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addValue(DescriptorProtos.EnumValueDescriptorProto value) {
            if (this.valueBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureValueIsMutable();
               this.value_.add(value);
               this.onChanged();
            } else {
               this.valueBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addValue(int index, DescriptorProtos.EnumValueDescriptorProto value) {
            if (this.valueBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureValueIsMutable();
               this.value_.add(index, value);
               this.onChanged();
            } else {
               this.valueBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addValue(DescriptorProtos.EnumValueDescriptorProto.Builder builderForValue) {
            if (this.valueBuilder_ == null) {
               this.ensureValueIsMutable();
               this.value_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.valueBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addValue(int index, DescriptorProtos.EnumValueDescriptorProto.Builder builderForValue) {
            if (this.valueBuilder_ == null) {
               this.ensureValueIsMutable();
               this.value_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.valueBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addAllValue(Iterable<? extends DescriptorProtos.EnumValueDescriptorProto> values) {
            if (this.valueBuilder_ == null) {
               this.ensureValueIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.value_);
               this.onChanged();
            } else {
               this.valueBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearValue() {
            if (this.valueBuilder_ == null) {
               this.value_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.valueBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder removeValue(int index) {
            if (this.valueBuilder_ == null) {
               this.ensureValueIsMutable();
               this.value_.remove(index);
               this.onChanged();
            } else {
               this.valueBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder getValueBuilder(int index) {
            return this.getValueFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.EnumValueDescriptorProtoOrBuilder getValueOrBuilder(int index) {
            return this.valueBuilder_ == null
               ? (DescriptorProtos.EnumValueDescriptorProtoOrBuilder)this.value_.get(index)
               : this.valueBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.EnumValueDescriptorProtoOrBuilder> getValueOrBuilderList() {
            return this.valueBuilder_ != null ? this.valueBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.value_);
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder addValueBuilder() {
            return this.getValueFieldBuilder().addBuilder(DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder addValueBuilder(int index) {
            return this.getValueFieldBuilder().addBuilder(index, DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance());
         }

         public List<DescriptorProtos.EnumValueDescriptorProto.Builder> getValueBuilderList() {
            return this.getValueFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.EnumValueDescriptorProto, DescriptorProtos.EnumValueDescriptorProto.Builder, DescriptorProtos.EnumValueDescriptorProtoOrBuilder> getValueFieldBuilder() {
            if (this.valueBuilder_ == null) {
               this.valueBuilder_ = new RepeatedFieldBuilderV3<>(this.value_, (this.bitField0_ & 2) != 0, this.getParentForChildren(), this.isClean());
               this.value_ = null;
            }

            return this.valueBuilder_;
         }

         @Override
         public boolean hasOptions() {
            return (this.bitField0_ & 4) != 0;
         }

         @Override
         public DescriptorProtos.EnumOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.EnumOptions.getDefaultInstance() : this.options_;
            } else {
               return this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setOptions(DescriptorProtos.EnumOptions value) {
            if (this.optionsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.options_ = value;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setOptions(DescriptorProtos.EnumOptions.Builder builderForValue) {
            if (this.optionsBuilder_ == null) {
               this.options_ = builderForValue.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder mergeOptions(DescriptorProtos.EnumOptions value) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0 && this.options_ != null && this.options_ != DescriptorProtos.EnumOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.EnumOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
               } else {
                  this.options_ = value;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            return this;
         }

         public DescriptorProtos.EnumOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 4;
            this.onChanged();
            return this.getOptionsFieldBuilder().getBuilder();
         }

         @Override
         public DescriptorProtos.EnumOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.EnumOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3<DescriptorProtos.EnumOptions, DescriptorProtos.EnumOptions.Builder, DescriptorProtos.EnumOptionsOrBuilder> getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3<>(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         private void ensureReservedRangeIsMutable() {
            if ((this.bitField0_ & 8) == 0) {
               this.reservedRange_ = new ArrayList(this.reservedRange_);
               this.bitField0_ |= 8;
            }

         }

         @Override
         public List<DescriptorProtos.EnumDescriptorProto.EnumReservedRange> getReservedRangeList() {
            return this.reservedRangeBuilder_ == null ? Collections.unmodifiableList(this.reservedRange_) : this.reservedRangeBuilder_.getMessageList();
         }

         @Override
         public int getReservedRangeCount() {
            return this.reservedRangeBuilder_ == null ? this.reservedRange_.size() : this.reservedRangeBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange getReservedRange(int index) {
            return this.reservedRangeBuilder_ == null
               ? (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)this.reservedRange_.get(index)
               : this.reservedRangeBuilder_.getMessage(index);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setReservedRange(int index, DescriptorProtos.EnumDescriptorProto.EnumReservedRange value) {
            if (this.reservedRangeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureReservedRangeIsMutable();
               this.reservedRange_.set(index, value);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setReservedRange(
            int index, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder builderForValue
         ) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addReservedRange(DescriptorProtos.EnumDescriptorProto.EnumReservedRange value) {
            if (this.reservedRangeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(value);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addReservedRange(int index, DescriptorProtos.EnumDescriptorProto.EnumReservedRange value) {
            if (this.reservedRangeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(index, value);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addReservedRange(DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder builderForValue) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addReservedRange(
            int index, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder builderForValue
         ) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addAllReservedRange(
            Iterable<? extends DescriptorProtos.EnumDescriptorProto.EnumReservedRange> values
         ) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.reservedRange_);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearReservedRange() {
            if (this.reservedRangeBuilder_ == null) {
               this.reservedRange_ = Collections.emptyList();
               this.bitField0_ &= -9;
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder removeReservedRange(int index) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.remove(index);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder getReservedRangeBuilder(int index) {
            return this.getReservedRangeFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder getReservedRangeOrBuilder(int index) {
            return this.reservedRangeBuilder_ == null
               ? (DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder)this.reservedRange_.get(index)
               : this.reservedRangeBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder> getReservedRangeOrBuilderList() {
            return this.reservedRangeBuilder_ != null
               ? this.reservedRangeBuilder_.getMessageOrBuilderList()
               : Collections.unmodifiableList(this.reservedRange_);
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder addReservedRangeBuilder() {
            return this.getReservedRangeFieldBuilder().addBuilder(DescriptorProtos.EnumDescriptorProto.EnumReservedRange.getDefaultInstance());
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder addReservedRangeBuilder(int index) {
            return this.getReservedRangeFieldBuilder().addBuilder(index, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.getDefaultInstance());
         }

         public List<DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder> getReservedRangeBuilderList() {
            return this.getReservedRangeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.EnumDescriptorProto.EnumReservedRange, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder, DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder> getReservedRangeFieldBuilder() {
            if (this.reservedRangeBuilder_ == null) {
               this.reservedRangeBuilder_ = new RepeatedFieldBuilderV3<>(
                  this.reservedRange_, (this.bitField0_ & 8) != 0, this.getParentForChildren(), this.isClean()
               );
               this.reservedRange_ = null;
            }

            return this.reservedRangeBuilder_;
         }

         private void ensureReservedNameIsMutable() {
            if ((this.bitField0_ & 16) == 0) {
               this.reservedName_ = new LazyStringArrayList(this.reservedName_);
               this.bitField0_ |= 16;
            }

         }

         public ProtocolStringList getReservedNameList() {
            return this.reservedName_.getUnmodifiableView();
         }

         @Override
         public int getReservedNameCount() {
            return this.reservedName_.size();
         }

         @Override
         public String getReservedName(int index) {
            return (String)this.reservedName_.get(index);
         }

         @Override
         public ByteString getReservedNameBytes(int index) {
            return this.reservedName_.getByteString(index);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setReservedName(int index, String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureReservedNameIsMutable();
               this.reservedName_.set(index, value);
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addReservedName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureReservedNameIsMutable();
               this.reservedName_.add(value);
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addAllReservedName(Iterable<String> values) {
            this.ensureReservedNameIsMutable();
            AbstractMessageLite.Builder.addAll(values, this.reservedName_);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearReservedName() {
            this.reservedName_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -17;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addReservedNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureReservedNameIsMutable();
               this.reservedName_.add(value);
               this.onChanged();
               return this;
            }
         }

         public final DescriptorProtos.EnumDescriptorProto.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.EnumDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.mergeUnknownFields(unknownFields);
         }
      }

      public static final class EnumReservedRange extends GeneratedMessageV3 implements DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder {
         private static final long serialVersionUID = 0L;
         private int bitField0_;
         public static final int START_FIELD_NUMBER = 1;
         private int start_;
         public static final int END_FIELD_NUMBER = 2;
         private int end_;
         private byte memoizedIsInitialized = -1;
         private static final DescriptorProtos.EnumDescriptorProto.EnumReservedRange DEFAULT_INSTANCE = new DescriptorProtos.EnumDescriptorProto.EnumReservedRange(
            
         );
         @Deprecated
         public static final Parser<DescriptorProtos.EnumDescriptorProto.EnumReservedRange> PARSER = new AbstractParser<DescriptorProtos.EnumDescriptorProto.EnumReservedRange>(
            
         ) {
            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new DescriptorProtos.EnumDescriptorProto.EnumReservedRange(input, extensionRegistry);
            }
         };

         private EnumReservedRange(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
         }

         private EnumReservedRange() {
         }

         @Override
         protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
            return new DescriptorProtos.EnumDescriptorProto.EnumReservedRange();
         }

         @Override
         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private EnumReservedRange(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
               throw new NullPointerException();
            } else {
               int mutable_bitField0_ = 0;
               UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

               try {
                  boolean done = false;

                  while(!done) {
                     int tag = input.readTag();
                     switch(tag) {
                        case 0:
                           done = true;
                           break;
                        case 8:
                           this.bitField0_ |= 1;
                           this.start_ = input.readInt32();
                           break;
                        case 16:
                           this.bitField0_ |= 2;
                           this.end_ = input.readInt32();
                           break;
                        default:
                           if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                              done = true;
                           }
                     }
                  }
               } catch (InvalidProtocolBufferException var12) {
                  throw var12.setUnfinishedMessage(this);
               } catch (UninitializedMessageException var13) {
                  throw var13.asInvalidProtocolBufferException().setUnfinishedMessage(this);
               } catch (IOException var14) {
                  throw new InvalidProtocolBufferException(var14).setUnfinishedMessage(this);
               } finally {
                  this.unknownFields = unknownFields.build();
                  this.makeExtensionsImmutable();
               }

            }
         }

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable
               .ensureFieldAccessorsInitialized(
                  DescriptorProtos.EnumDescriptorProto.EnumReservedRange.class, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder.class
               );
         }

         @Override
         public boolean hasStart() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public int getStart() {
            return this.start_;
         }

         @Override
         public boolean hasEnd() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public int getEnd() {
            return this.end_;
         }

         @Override
         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
               return true;
            } else if (isInitialized == 0) {
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         @Override
         public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) != 0) {
               output.writeInt32(1, this.start_);
            }

            if ((this.bitField0_ & 2) != 0) {
               output.writeInt32(2, this.end_);
            }

            this.unknownFields.writeTo(output);
         }

         @Override
         public int getSerializedSize() {
            int size = this.memoizedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) != 0) {
                  size += CodedOutputStream.computeInt32Size(1, this.start_);
               }

               if ((this.bitField0_ & 2) != 0) {
                  size += CodedOutputStream.computeInt32Size(2, this.end_);
               }

               size += this.unknownFields.getSerializedSize();
               this.memoizedSize = size;
               return size;
            }
         }

         @Override
         public boolean equals(Object obj) {
            if (obj == this) {
               return true;
            } else if (!(obj instanceof DescriptorProtos.EnumDescriptorProto.EnumReservedRange)) {
               return super.equals(obj);
            } else {
               DescriptorProtos.EnumDescriptorProto.EnumReservedRange other = (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)obj;
               if (this.hasStart() != other.hasStart()) {
                  return false;
               } else if (this.hasStart() && this.getStart() != other.getStart()) {
                  return false;
               } else if (this.hasEnd() != other.hasEnd()) {
                  return false;
               } else if (this.hasEnd() && this.getEnd() != other.getEnd()) {
                  return false;
               } else {
                  return this.unknownFields.equals(other.unknownFields);
               }
            }
         }

         @Override
         public int hashCode() {
            if (this.memoizedHashCode != 0) {
               return this.memoizedHashCode;
            } else {
               int hash = 41;
               hash = 19 * hash + getDescriptor().hashCode();
               if (this.hasStart()) {
                  hash = 37 * hash + 1;
                  hash = 53 * hash + this.getStart();
               }

               if (this.hasEnd()) {
                  hash = 37 * hash + 2;
                  hash = 53 * hash + this.getEnd();
               }

               hash = 29 * hash + this.unknownFields.hashCode();
               this.memoizedHashCode = hash;
               return hash;
            }
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(InputStream input) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseDelimitedFrom(InputStream input) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(CodedInputStream input) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder newBuilderForType() {
            return newBuilder();
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder newBuilder(
            DescriptorProtos.EnumDescriptorProto.EnumReservedRange prototype
         ) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder toBuilder() {
            return this == DEFAULT_INSTANCE
               ? new DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder()
               : new DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder().mergeFrom(this);
         }

         protected DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
            return new DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder(parent);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange getDefaultInstance() {
            return DEFAULT_INSTANCE;
         }

         public static Parser<DescriptorProtos.EnumDescriptorProto.EnumReservedRange> parser() {
            return PARSER;
         }

         @Override
         public Parser<DescriptorProtos.EnumDescriptorProto.EnumReservedRange> getParserForType() {
            return PARSER;
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
         }

         public static final class Builder
            extends GeneratedMessageV3.Builder<DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder>
            implements DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder {
            private int bitField0_;
            private int start_;
            private int end_;

            public static final Descriptors.Descriptor getDescriptor() {
               return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor;
            }

            @Override
            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
               return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                     DescriptorProtos.EnumDescriptorProto.EnumReservedRange.class, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder.class
                  );
            }

            private Builder() {
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
               super(parent);
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               }

            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder clear() {
               super.clear();
               this.start_ = 0;
               this.bitField0_ &= -2;
               this.end_ = 0;
               this.bitField0_ &= -3;
               return this;
            }

            @Override
            public Descriptors.Descriptor getDescriptorForType() {
               return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange getDefaultInstanceForType() {
               return DescriptorProtos.EnumDescriptorProto.EnumReservedRange.getDefaultInstance();
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange build() {
               DescriptorProtos.EnumDescriptorProto.EnumReservedRange result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange buildPartial() {
               DescriptorProtos.EnumDescriptorProto.EnumReservedRange result = new DescriptorProtos.EnumDescriptorProto.EnumReservedRange(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) != 0) {
                  result.start_ = this.start_;
                  to_bitField0_ |= 1;
               }

               if ((from_bitField0_ & 2) != 0) {
                  result.end_ = this.end_;
                  to_bitField0_ |= 2;
               }

               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder clone() {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.clone();
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder setField(Descriptors.FieldDescriptor field, Object value) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.setField(field, value);
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder clearField(Descriptors.FieldDescriptor field) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.clearField(field);
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.clearOneof(oneof);
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.setRepeatedField(field, index, value);
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.addRepeatedField(field, value);
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder mergeFrom(Message other) {
               if (other instanceof DescriptorProtos.EnumDescriptorProto.EnumReservedRange) {
                  return this.mergeFrom((DescriptorProtos.EnumDescriptorProto.EnumReservedRange)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder mergeFrom(DescriptorProtos.EnumDescriptorProto.EnumReservedRange other) {
               if (other == DescriptorProtos.EnumDescriptorProto.EnumReservedRange.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasStart()) {
                     this.setStart(other.getStart());
                  }

                  if (other.hasEnd()) {
                     this.setEnd(other.getEnd());
                  }

                  this.mergeUnknownFields(other.unknownFields);
                  this.onChanged();
                  return this;
               }
            }

            @Override
            public final boolean isInitialized() {
               return true;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               DescriptorProtos.EnumDescriptorProto.EnumReservedRange parsedMessage = null;

               try {
                  parsedMessage = DescriptorProtos.EnumDescriptorProto.EnumReservedRange.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException var8) {
                  parsedMessage = (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)var8.getUnfinishedMessage();
                  throw var8.unwrapIOException();
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            @Override
            public boolean hasStart() {
               return (this.bitField0_ & 1) != 0;
            }

            @Override
            public int getStart() {
               return this.start_;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder setStart(int value) {
               this.bitField0_ |= 1;
               this.start_ = value;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder clearStart() {
               this.bitField0_ &= -2;
               this.start_ = 0;
               this.onChanged();
               return this;
            }

            @Override
            public boolean hasEnd() {
               return (this.bitField0_ & 2) != 0;
            }

            @Override
            public int getEnd() {
               return this.end_;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder setEnd(int value) {
               this.bitField0_ |= 2;
               this.end_ = value;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder clearEnd() {
               this.bitField0_ &= -3;
               this.end_ = 0;
               this.onChanged();
               return this;
            }

            public final DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder setUnknownFields(UnknownFieldSet unknownFields) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.setUnknownFields(unknownFields);
            }

            public final DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.mergeUnknownFields(unknownFields);
            }
         }
      }

      public interface EnumReservedRangeOrBuilder extends MessageOrBuilder {
         boolean hasStart();

         int getStart();

         boolean hasEnd();

         int getEnd();
      }
   }

   public interface EnumDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      List<DescriptorProtos.EnumValueDescriptorProto> getValueList();

      DescriptorProtos.EnumValueDescriptorProto getValue(int var1);

      int getValueCount();

      List<? extends DescriptorProtos.EnumValueDescriptorProtoOrBuilder> getValueOrBuilderList();

      DescriptorProtos.EnumValueDescriptorProtoOrBuilder getValueOrBuilder(int var1);

      boolean hasOptions();

      DescriptorProtos.EnumOptions getOptions();

      DescriptorProtos.EnumOptionsOrBuilder getOptionsOrBuilder();

      List<DescriptorProtos.EnumDescriptorProto.EnumReservedRange> getReservedRangeList();

      DescriptorProtos.EnumDescriptorProto.EnumReservedRange getReservedRange(int var1);

      int getReservedRangeCount();

      List<? extends DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder> getReservedRangeOrBuilderList();

      DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder getReservedRangeOrBuilder(int var1);

      List<String> getReservedNameList();

      int getReservedNameCount();

      String getReservedName(int var1);

      ByteString getReservedNameBytes(int var1);
   }

   public static final class EnumOptions
      extends GeneratedMessageV3.ExtendableMessage<DescriptorProtos.EnumOptions>
      implements DescriptorProtos.EnumOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int ALLOW_ALIAS_FIELD_NUMBER = 2;
      private boolean allowAlias_;
      public static final int DEPRECATED_FIELD_NUMBER = 3;
      private boolean deprecated_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.EnumOptions DEFAULT_INSTANCE = new DescriptorProtos.EnumOptions();
      @Deprecated
      public static final Parser<DescriptorProtos.EnumOptions> PARSER = new AbstractParser<DescriptorProtos.EnumOptions>() {
         public DescriptorProtos.EnumOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.EnumOptions(input, extensionRegistry);
         }
      };

      private EnumOptions(GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.EnumOptions, ?> builder) {
         super(builder);
      }

      private EnumOptions() {
         this.uninterpretedOption_ = Collections.emptyList();
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.EnumOptions();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private EnumOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 16:
                        this.bitField0_ |= 1;
                        this.allowAlias_ = input.readBool();
                        break;
                     case 24:
                        this.bitField0_ |= 2;
                        this.deprecated_ = input.readBool();
                        break;
                     case 7994:
                        if ((mutable_bitField0_ & 4) == 0) {
                           this.uninterpretedOption_ = new ArrayList();
                           mutable_bitField0_ |= 4;
                        }

                        this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var13) {
               throw var13.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw new InvalidProtocolBufferException(var14).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 4) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_EnumOptions_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_EnumOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.EnumOptions.class, DescriptorProtos.EnumOptions.Builder.class);
      }

      @Override
      public boolean hasAllowAlias() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public boolean getAllowAlias() {
         return this.allowAlias_;
      }

      @Override
      public boolean hasDeprecated() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public boolean getDeprecated() {
         return this.deprecated_;
      }

      @Override
      public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      @Override
      public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      @Override
      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      @Override
      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index);
      }

      @Override
      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         GeneratedMessageV3.ExtendableMessage<DescriptorProtos.EnumOptions>.ExtensionWriter extensionWriter = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            output.writeBool(2, this.allowAlias_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeBool(3, this.deprecated_);
         }

         for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
            output.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(i));
         }

         extensionWriter.writeUntil(536870912, output);
         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeBoolSize(2, this.allowAlias_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeBoolSize(3, this.deprecated_);
            }

            for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(i));
            }

            size += this.extensionsSerializedSize();
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.EnumOptions)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.EnumOptions other = (DescriptorProtos.EnumOptions)obj;
            if (this.hasAllowAlias() != other.hasAllowAlias()) {
               return false;
            } else if (this.hasAllowAlias() && this.getAllowAlias() != other.getAllowAlias()) {
               return false;
            } else if (this.hasDeprecated() != other.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != other.getDeprecated()) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(other.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(other.getExtensionFields());
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasAllowAlias()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + Internal.hashBoolean(this.getAllowAlias());
            }

            if (this.hasDeprecated()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.getUninterpretedOptionCount() > 0) {
               hash = 37 * hash + 999;
               hash = 53 * hash + this.getUninterpretedOptionList().hashCode();
            }

            hash = hashFields(hash, this.getExtensionFields());
            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.EnumOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.EnumOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.EnumOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.EnumOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.EnumOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.EnumOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.EnumOptions parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.EnumOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.EnumOptions parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.EnumOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.EnumOptions parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.EnumOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.EnumOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.EnumOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.EnumOptions.Builder newBuilder(DescriptorProtos.EnumOptions prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.EnumOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.EnumOptions.Builder() : new DescriptorProtos.EnumOptions.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.EnumOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.EnumOptions.Builder(parent);
      }

      public static DescriptorProtos.EnumOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.EnumOptions> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.EnumOptions> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.EnumOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.EnumOptions, DescriptorProtos.EnumOptions.Builder>
         implements DescriptorProtos.EnumOptionsOrBuilder {
         private int bitField0_;
         private boolean allowAlias_;
         private boolean deprecated_;
         private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_EnumOptions_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_EnumOptions_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.EnumOptions.class, DescriptorProtos.EnumOptions.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.EnumOptions.Builder clear() {
            super.clear();
            this.allowAlias_ = false;
            this.bitField0_ &= -2;
            this.deprecated_ = false;
            this.bitField0_ &= -3;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -5;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_EnumOptions_descriptor;
         }

         public DescriptorProtos.EnumOptions getDefaultInstanceForType() {
            return DescriptorProtos.EnumOptions.getDefaultInstance();
         }

         public DescriptorProtos.EnumOptions build() {
            DescriptorProtos.EnumOptions result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.EnumOptions buildPartial() {
            DescriptorProtos.EnumOptions result = new DescriptorProtos.EnumOptions(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.allowAlias_ = this.allowAlias_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               result.deprecated_ = this.deprecated_;
               to_bitField0_ |= 2;
            }

            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -5;
               }

               result.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.EnumOptions.Builder clone() {
            return (DescriptorProtos.EnumOptions.Builder)super.clone();
         }

         public DescriptorProtos.EnumOptions.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.EnumOptions.Builder)super.setField(field, value);
         }

         public DescriptorProtos.EnumOptions.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.EnumOptions.Builder)super.clearField(field);
         }

         public DescriptorProtos.EnumOptions.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.EnumOptions.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.EnumOptions.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.EnumOptions.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.EnumOptions.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.EnumOptions.Builder)super.addRepeatedField(field, value);
         }

         public <Type> DescriptorProtos.EnumOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumOptions, Type> extension, Type value
         ) {
            return (DescriptorProtos.EnumOptions.Builder)super.setExtension(extension, value);
         }

         public <Type> DescriptorProtos.EnumOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumOptions, List<Type>> extension, int index, Type value
         ) {
            return (DescriptorProtos.EnumOptions.Builder)super.setExtension(extension, index, value);
         }

         public <Type> DescriptorProtos.EnumOptions.Builder addExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumOptions, List<Type>> extension, Type value
         ) {
            return (DescriptorProtos.EnumOptions.Builder)super.addExtension(extension, value);
         }

         public <Type> DescriptorProtos.EnumOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumOptions, ?> extension) {
            return (DescriptorProtos.EnumOptions.Builder)super.clearExtension(extension);
         }

         public DescriptorProtos.EnumOptions.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.EnumOptions) {
               return this.mergeFrom((DescriptorProtos.EnumOptions)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.EnumOptions.Builder mergeFrom(DescriptorProtos.EnumOptions other) {
            if (other == DescriptorProtos.EnumOptions.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasAllowAlias()) {
                  this.setAllowAlias(other.getAllowAlias());
               }

               if (other.hasDeprecated()) {
                  this.setDeprecated(other.getDeprecated());
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!other.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = other.uninterpretedOption_;
                        this.bitField0_ &= -5;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(other.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!other.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = other.uninterpretedOption_;
                     this.bitField0_ &= -5;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(other);
               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  return false;
               }
            }

            return this.extensionsAreInitialized();
         }

         public DescriptorProtos.EnumOptions.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.EnumOptions parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.EnumOptions.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.EnumOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasAllowAlias() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public boolean getAllowAlias() {
            return this.allowAlias_;
         }

         public DescriptorProtos.EnumOptions.Builder setAllowAlias(boolean value) {
            this.bitField0_ |= 1;
            this.allowAlias_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumOptions.Builder clearAllowAlias() {
            this.bitField0_ &= -2;
            this.allowAlias_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasDeprecated() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.EnumOptions.Builder setDeprecated(boolean value) {
            this.bitField0_ |= 2;
            this.deprecated_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumOptions.Builder clearDeprecated() {
            this.bitField0_ &= -3;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 4) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 4;
            }

         }

         @Override
         public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null
               ? Collections.unmodifiableList(this.uninterpretedOption_)
               : this.uninterpretedOptionBuilder_.getMessageList();
         }

         @Override
         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessage(index);
         }

         public DescriptorProtos.EnumOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -5;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder removeUninterpretedOption(int index) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(index);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null
               ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList()
               : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(index, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(
                  this.uninterpretedOption_, (this.bitField0_ & 4) != 0, this.getParentForChildren(), this.isClean()
               );
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.EnumOptions.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.EnumOptions.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.EnumOptions.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.EnumOptions.Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface EnumOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder<DescriptorProtos.EnumOptions> {
      boolean hasAllowAlias();

      boolean getAllowAlias();

      boolean hasDeprecated();

      boolean getDeprecated();

      List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class EnumValueDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.EnumValueDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int NUMBER_FIELD_NUMBER = 2;
      private int number_;
      public static final int OPTIONS_FIELD_NUMBER = 3;
      private DescriptorProtos.EnumValueOptions options_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.EnumValueDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.EnumValueDescriptorProto();
      @Deprecated
      public static final Parser<DescriptorProtos.EnumValueDescriptorProto> PARSER = new AbstractParser<DescriptorProtos.EnumValueDescriptorProto>() {
         public DescriptorProtos.EnumValueDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.EnumValueDescriptorProto(input, extensionRegistry);
         }
      };

      private EnumValueDescriptorProto(GeneratedMessageV3.Builder<?> builder) {
         super(builder);
      }

      private EnumValueDescriptorProto() {
         this.name_ = "";
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.EnumValueDescriptorProto();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private EnumValueDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.name_ = bs;
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.number_ = input.readInt32();
                        break;
                     case 26:
                        DescriptorProtos.EnumValueOptions.Builder subBuilder = null;
                        if ((this.bitField0_ & 4) != 0) {
                           subBuilder = this.options_.toBuilder();
                        }

                        this.options_ = input.readMessage(DescriptorProtos.EnumValueOptions.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.options_);
                           this.options_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 4;
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var13) {
               throw var13.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var14) {
               throw var14.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var15) {
               throw new InvalidProtocolBufferException(var15).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.EnumValueDescriptorProto.class, DescriptorProtos.EnumValueDescriptorProto.Builder.class);
      }

      @Override
      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public String getName() {
         Object ref = this.name_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.name_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getNameBytes() {
         Object ref = this.name_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.name_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasNumber() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public int getNumber() {
         return this.number_;
      }

      @Override
      public boolean hasOptions() {
         return (this.bitField0_ & 4) != 0;
      }

      @Override
      public DescriptorProtos.EnumValueOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.EnumValueOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public DescriptorProtos.EnumValueOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.EnumValueOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else if (this.hasOptions() && !this.getOptions().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.name_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeInt32(2, this.number_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeMessage(3, this.getOptions());
         }

         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeInt32Size(2, this.number_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeMessageSize(3, this.getOptions());
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.EnumValueDescriptorProto)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.EnumValueDescriptorProto other = (DescriptorProtos.EnumValueDescriptorProto)obj;
            if (this.hasName() != other.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(other.getName())) {
               return false;
            } else if (this.hasNumber() != other.hasNumber()) {
               return false;
            } else if (this.hasNumber() && this.getNumber() != other.getNumber()) {
               return false;
            } else if (this.hasOptions() != other.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(other.getOptions())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasName()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getName().hashCode();
            }

            if (this.hasNumber()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getNumber();
            }

            if (this.hasOptions()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getOptions().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.EnumValueDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.EnumValueDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.EnumValueDescriptorProto.Builder newBuilder(DescriptorProtos.EnumValueDescriptorProto prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.EnumValueDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE
            ? new DescriptorProtos.EnumValueDescriptorProto.Builder()
            : new DescriptorProtos.EnumValueDescriptorProto.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.EnumValueDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.EnumValueDescriptorProto.Builder(parent);
      }

      public static DescriptorProtos.EnumValueDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.EnumValueDescriptorProto> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.EnumValueDescriptorProto> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.EnumValueDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.Builder<DescriptorProtos.EnumValueDescriptorProto.Builder>
         implements DescriptorProtos.EnumValueDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_ = "";
         private int number_;
         private DescriptorProtos.EnumValueOptions options_;
         private SingleFieldBuilderV3<DescriptorProtos.EnumValueOptions, DescriptorProtos.EnumValueOptions.Builder, DescriptorProtos.EnumValueOptionsOrBuilder> optionsBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.EnumValueDescriptorProto.class, DescriptorProtos.EnumValueDescriptorProto.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getOptionsFieldBuilder();
            }

         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            this.number_ = 0;
            this.bitField0_ &= -3;
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_descriptor;
         }

         public DescriptorProtos.EnumValueDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.EnumValueDescriptorProto build() {
            DescriptorProtos.EnumValueDescriptorProto result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.EnumValueDescriptorProto buildPartial() {
            DescriptorProtos.EnumValueDescriptorProto result = new DescriptorProtos.EnumValueDescriptorProto(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.name_ = this.name_;
            if ((from_bitField0_ & 2) != 0) {
               result.number_ = this.number_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               if (this.optionsBuilder_ == null) {
                  result.options_ = this.options_;
               } else {
                  result.options_ = this.optionsBuilder_.build();
               }

               to_bitField0_ |= 4;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clone() {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.setField(field, value);
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.clearField(field);
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.addRepeatedField(field, value);
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.EnumValueDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.EnumValueDescriptorProto)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder mergeFrom(DescriptorProtos.EnumValueDescriptorProto other) {
            if (other == DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = other.name_;
                  this.onChanged();
               }

               if (other.hasNumber()) {
                  this.setNumber(other.getNumber());
               }

               if (other.hasOptions()) {
                  this.mergeOptions(other.getOptions());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            return !this.hasOptions() || this.getOptions().isInitialized();
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.EnumValueDescriptorProto parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.EnumValueDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.EnumValueDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public String getName() {
            Object ref = this.name_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.name_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.name_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasNumber() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public int getNumber() {
            return this.number_;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setNumber(int value) {
            this.bitField0_ |= 2;
            this.number_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clearNumber() {
            this.bitField0_ &= -3;
            this.number_ = 0;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasOptions() {
            return (this.bitField0_ & 4) != 0;
         }

         @Override
         public DescriptorProtos.EnumValueOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.EnumValueOptions.getDefaultInstance() : this.options_;
            } else {
               return this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setOptions(DescriptorProtos.EnumValueOptions value) {
            if (this.optionsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.options_ = value;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setOptions(DescriptorProtos.EnumValueOptions.Builder builderForValue) {
            if (this.optionsBuilder_ == null) {
               this.options_ = builderForValue.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder mergeOptions(DescriptorProtos.EnumValueOptions value) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0 && this.options_ != null && this.options_ != DescriptorProtos.EnumValueOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.EnumValueOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
               } else {
                  this.options_ = value;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 4;
            this.onChanged();
            return this.getOptionsFieldBuilder().getBuilder();
         }

         @Override
         public DescriptorProtos.EnumValueOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.EnumValueOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3<DescriptorProtos.EnumValueOptions, DescriptorProtos.EnumValueOptions.Builder, DescriptorProtos.EnumValueOptionsOrBuilder> getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3<>(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         public final DescriptorProtos.EnumValueDescriptorProto.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.EnumValueDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface EnumValueDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      boolean hasNumber();

      int getNumber();

      boolean hasOptions();

      DescriptorProtos.EnumValueOptions getOptions();

      DescriptorProtos.EnumValueOptionsOrBuilder getOptionsOrBuilder();
   }

   public static final class EnumValueOptions
      extends GeneratedMessageV3.ExtendableMessage<DescriptorProtos.EnumValueOptions>
      implements DescriptorProtos.EnumValueOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int DEPRECATED_FIELD_NUMBER = 1;
      private boolean deprecated_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.EnumValueOptions DEFAULT_INSTANCE = new DescriptorProtos.EnumValueOptions();
      @Deprecated
      public static final Parser<DescriptorProtos.EnumValueOptions> PARSER = new AbstractParser<DescriptorProtos.EnumValueOptions>() {
         public DescriptorProtos.EnumValueOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.EnumValueOptions(input, extensionRegistry);
         }
      };

      private EnumValueOptions(GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.EnumValueOptions, ?> builder) {
         super(builder);
      }

      private EnumValueOptions() {
         this.uninterpretedOption_ = Collections.emptyList();
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.EnumValueOptions();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private EnumValueOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.deprecated_ = input.readBool();
                        break;
                     case 7994:
                        if ((mutable_bitField0_ & 2) == 0) {
                           this.uninterpretedOption_ = new ArrayList();
                           mutable_bitField0_ |= 2;
                        }

                        this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var13) {
               throw var13.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw new InvalidProtocolBufferException(var14).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 2) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.EnumValueOptions.class, DescriptorProtos.EnumValueOptions.Builder.class);
      }

      @Override
      public boolean hasDeprecated() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public boolean getDeprecated() {
         return this.deprecated_;
      }

      @Override
      public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      @Override
      public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      @Override
      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      @Override
      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index);
      }

      @Override
      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         GeneratedMessageV3.ExtendableMessage<DescriptorProtos.EnumValueOptions>.ExtensionWriter extensionWriter = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            output.writeBool(1, this.deprecated_);
         }

         for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
            output.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(i));
         }

         extensionWriter.writeUntil(536870912, output);
         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeBoolSize(1, this.deprecated_);
            }

            for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(i));
            }

            size += this.extensionsSerializedSize();
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.EnumValueOptions)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.EnumValueOptions other = (DescriptorProtos.EnumValueOptions)obj;
            if (this.hasDeprecated() != other.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != other.getDeprecated()) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(other.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(other.getExtensionFields());
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasDeprecated()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.getUninterpretedOptionCount() > 0) {
               hash = 37 * hash + 999;
               hash = 53 * hash + this.getUninterpretedOptionList().hashCode();
            }

            hash = hashFields(hash, this.getExtensionFields());
            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.EnumValueOptions parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.EnumValueOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.EnumValueOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.EnumValueOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.EnumValueOptions.Builder newBuilder(DescriptorProtos.EnumValueOptions prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.EnumValueOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.EnumValueOptions.Builder() : new DescriptorProtos.EnumValueOptions.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.EnumValueOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.EnumValueOptions.Builder(parent);
      }

      public static DescriptorProtos.EnumValueOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.EnumValueOptions> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.EnumValueOptions> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.EnumValueOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.EnumValueOptions, DescriptorProtos.EnumValueOptions.Builder>
         implements DescriptorProtos.EnumValueOptionsOrBuilder {
         private int bitField0_;
         private boolean deprecated_;
         private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.EnumValueOptions.class, DescriptorProtos.EnumValueOptions.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.EnumValueOptions.Builder clear() {
            super.clear();
            this.deprecated_ = false;
            this.bitField0_ &= -2;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_descriptor;
         }

         public DescriptorProtos.EnumValueOptions getDefaultInstanceForType() {
            return DescriptorProtos.EnumValueOptions.getDefaultInstance();
         }

         public DescriptorProtos.EnumValueOptions build() {
            DescriptorProtos.EnumValueOptions result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.EnumValueOptions buildPartial() {
            DescriptorProtos.EnumValueOptions result = new DescriptorProtos.EnumValueOptions(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.deprecated_ = this.deprecated_;
               to_bitField0_ |= 1;
            }

            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -3;
               }

               result.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.EnumValueOptions.Builder clone() {
            return (DescriptorProtos.EnumValueOptions.Builder)super.clone();
         }

         public DescriptorProtos.EnumValueOptions.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.setField(field, value);
         }

         public DescriptorProtos.EnumValueOptions.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.clearField(field);
         }

         public DescriptorProtos.EnumValueOptions.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.EnumValueOptions.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.EnumValueOptions.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.addRepeatedField(field, value);
         }

         public <Type> DescriptorProtos.EnumValueOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumValueOptions, Type> extension, Type value
         ) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.setExtension(extension, value);
         }

         public <Type> DescriptorProtos.EnumValueOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumValueOptions, List<Type>> extension, int index, Type value
         ) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.setExtension(extension, index, value);
         }

         public <Type> DescriptorProtos.EnumValueOptions.Builder addExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumValueOptions, List<Type>> extension, Type value
         ) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.addExtension(extension, value);
         }

         public <Type> DescriptorProtos.EnumValueOptions.Builder clearExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumValueOptions, ?> extension
         ) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.clearExtension(extension);
         }

         public DescriptorProtos.EnumValueOptions.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.EnumValueOptions) {
               return this.mergeFrom((DescriptorProtos.EnumValueOptions)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.EnumValueOptions.Builder mergeFrom(DescriptorProtos.EnumValueOptions other) {
            if (other == DescriptorProtos.EnumValueOptions.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasDeprecated()) {
                  this.setDeprecated(other.getDeprecated());
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!other.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = other.uninterpretedOption_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(other.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!other.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = other.uninterpretedOption_;
                     this.bitField0_ &= -3;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(other);
               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  return false;
               }
            }

            return this.extensionsAreInitialized();
         }

         public DescriptorProtos.EnumValueOptions.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.EnumValueOptions parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.EnumValueOptions.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.EnumValueOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasDeprecated() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.EnumValueOptions.Builder setDeprecated(boolean value) {
            this.bitField0_ |= 1;
            this.deprecated_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder clearDeprecated() {
            this.bitField0_ &= -2;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 2;
            }

         }

         @Override
         public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null
               ? Collections.unmodifiableList(this.uninterpretedOption_)
               : this.uninterpretedOptionBuilder_.getMessageList();
         }

         @Override
         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessage(index);
         }

         public DescriptorProtos.EnumValueOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder removeUninterpretedOption(int index) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(index);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null
               ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList()
               : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(index, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(
                  this.uninterpretedOption_, (this.bitField0_ & 2) != 0, this.getParentForChildren(), this.isClean()
               );
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.EnumValueOptions.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.EnumValueOptions.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface EnumValueOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder<DescriptorProtos.EnumValueOptions> {
      boolean hasDeprecated();

      boolean getDeprecated();

      List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class ExtensionRangeOptions
      extends GeneratedMessageV3.ExtendableMessage<DescriptorProtos.ExtensionRangeOptions>
      implements DescriptorProtos.ExtensionRangeOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.ExtensionRangeOptions DEFAULT_INSTANCE = new DescriptorProtos.ExtensionRangeOptions();
      @Deprecated
      public static final Parser<DescriptorProtos.ExtensionRangeOptions> PARSER = new AbstractParser<DescriptorProtos.ExtensionRangeOptions>() {
         public DescriptorProtos.ExtensionRangeOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.ExtensionRangeOptions(input, extensionRegistry);
         }
      };

      private ExtensionRangeOptions(GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.ExtensionRangeOptions, ?> builder) {
         super(builder);
      }

      private ExtensionRangeOptions() {
         this.uninterpretedOption_ = Collections.emptyList();
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.ExtensionRangeOptions();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private ExtensionRangeOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 7994:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.uninterpretedOption_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var13) {
               throw var13.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw new InvalidProtocolBufferException(var14).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.ExtensionRangeOptions.class, DescriptorProtos.ExtensionRangeOptions.Builder.class);
      }

      @Override
      public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      @Override
      public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      @Override
      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      @Override
      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index);
      }

      @Override
      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         GeneratedMessageV3.ExtendableMessage<DescriptorProtos.ExtensionRangeOptions>.ExtensionWriter extensionWriter = this.newExtensionWriter();

         for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
            output.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(i));
         }

         extensionWriter.writeUntil(536870912, output);
         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(i));
            }

            size += this.extensionsSerializedSize();
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.ExtensionRangeOptions)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.ExtensionRangeOptions other = (DescriptorProtos.ExtensionRangeOptions)obj;
            if (!this.getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(other.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(other.getExtensionFields());
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getUninterpretedOptionCount() > 0) {
               hash = 37 * hash + 999;
               hash = 53 * hash + this.getUninterpretedOptionList().hashCode();
            }

            hash = hashFields(hash, this.getExtensionFields());
            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.ExtensionRangeOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.ExtensionRangeOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.ExtensionRangeOptions.Builder newBuilder(DescriptorProtos.ExtensionRangeOptions prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.ExtensionRangeOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE
            ? new DescriptorProtos.ExtensionRangeOptions.Builder()
            : new DescriptorProtos.ExtensionRangeOptions.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.ExtensionRangeOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.ExtensionRangeOptions.Builder(parent);
      }

      public static DescriptorProtos.ExtensionRangeOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.ExtensionRangeOptions> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.ExtensionRangeOptions> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.ExtensionRangeOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.ExtensionRangeOptions, DescriptorProtos.ExtensionRangeOptions.Builder>
         implements DescriptorProtos.ExtensionRangeOptionsOrBuilder {
         private int bitField0_;
         private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.ExtensionRangeOptions.class, DescriptorProtos.ExtensionRangeOptions.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.ExtensionRangeOptions.Builder clear() {
            super.clear();
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_descriptor;
         }

         public DescriptorProtos.ExtensionRangeOptions getDefaultInstanceForType() {
            return DescriptorProtos.ExtensionRangeOptions.getDefaultInstance();
         }

         public DescriptorProtos.ExtensionRangeOptions build() {
            DescriptorProtos.ExtensionRangeOptions result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.ExtensionRangeOptions buildPartial() {
            DescriptorProtos.ExtensionRangeOptions result = new DescriptorProtos.ExtensionRangeOptions(this);
            int from_bitField0_ = this.bitField0_;
            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -2;
               }

               result.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder clone() {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.clone();
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.setField(field, value);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.clearField(field);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.addRepeatedField(field, value);
         }

         public <Type> DescriptorProtos.ExtensionRangeOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.ExtensionRangeOptions, Type> extension, Type value
         ) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.setExtension(extension, value);
         }

         public <Type> DescriptorProtos.ExtensionRangeOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.ExtensionRangeOptions, List<Type>> extension, int index, Type value
         ) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.setExtension(extension, index, value);
         }

         public <Type> DescriptorProtos.ExtensionRangeOptions.Builder addExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.ExtensionRangeOptions, List<Type>> extension, Type value
         ) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.addExtension(extension, value);
         }

         public <Type> DescriptorProtos.ExtensionRangeOptions.Builder clearExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.ExtensionRangeOptions, ?> extension
         ) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.clearExtension(extension);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.ExtensionRangeOptions) {
               return this.mergeFrom((DescriptorProtos.ExtensionRangeOptions)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder mergeFrom(DescriptorProtos.ExtensionRangeOptions other) {
            if (other == DescriptorProtos.ExtensionRangeOptions.getDefaultInstance()) {
               return this;
            } else {
               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!other.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = other.uninterpretedOption_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(other.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!other.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = other.uninterpretedOption_;
                     this.bitField0_ &= -2;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(other);
               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  return false;
               }
            }

            return this.extensionsAreInitialized();
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.ExtensionRangeOptions parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.ExtensionRangeOptions.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.ExtensionRangeOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 1;
            }

         }

         @Override
         public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null
               ? Collections.unmodifiableList(this.uninterpretedOption_)
               : this.uninterpretedOptionBuilder_.getMessageList();
         }

         @Override
         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessage(index);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder removeUninterpretedOption(int index) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(index);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null
               ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList()
               : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(index, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(
                  this.uninterpretedOption_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean()
               );
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.ExtensionRangeOptions.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.ExtensionRangeOptions.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface ExtensionRangeOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder<DescriptorProtos.ExtensionRangeOptions> {
      List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class FieldDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.FieldDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int NUMBER_FIELD_NUMBER = 3;
      private int number_;
      public static final int LABEL_FIELD_NUMBER = 4;
      private int label_;
      public static final int TYPE_FIELD_NUMBER = 5;
      private int type_;
      public static final int TYPE_NAME_FIELD_NUMBER = 6;
      private volatile Object typeName_;
      public static final int EXTENDEE_FIELD_NUMBER = 2;
      private volatile Object extendee_;
      public static final int DEFAULT_VALUE_FIELD_NUMBER = 7;
      private volatile Object defaultValue_;
      public static final int ONEOF_INDEX_FIELD_NUMBER = 9;
      private int oneofIndex_;
      public static final int JSON_NAME_FIELD_NUMBER = 10;
      private volatile Object jsonName_;
      public static final int OPTIONS_FIELD_NUMBER = 8;
      private DescriptorProtos.FieldOptions options_;
      public static final int PROTO3_OPTIONAL_FIELD_NUMBER = 17;
      private boolean proto3Optional_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.FieldDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.FieldDescriptorProto();
      @Deprecated
      public static final Parser<DescriptorProtos.FieldDescriptorProto> PARSER = new AbstractParser<DescriptorProtos.FieldDescriptorProto>() {
         public DescriptorProtos.FieldDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.FieldDescriptorProto(input, extensionRegistry);
         }
      };

      private FieldDescriptorProto(GeneratedMessageV3.Builder<?> builder) {
         super(builder);
      }

      private FieldDescriptorProto() {
         this.name_ = "";
         this.label_ = 1;
         this.type_ = 1;
         this.typeName_ = "";
         this.extendee_ = "";
         this.defaultValue_ = "";
         this.jsonName_ = "";
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.FieldDescriptorProto();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private FieldDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 10: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.name_ = bs;
                        break;
                     }
                     case 18: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 32;
                        this.extendee_ = bs;
                        break;
                     }
                     case 24:
                        this.bitField0_ |= 2;
                        this.number_ = input.readInt32();
                        break;
                     case 32:
                        int rawValue = input.readEnum();
                        DescriptorProtos.FieldDescriptorProto.Label value = DescriptorProtos.FieldDescriptorProto.Label.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(4, rawValue);
                        } else {
                           this.bitField0_ |= 4;
                           this.label_ = rawValue;
                        }
                        break;
                     case 40:
                        int rawValue = input.readEnum();
                        DescriptorProtos.FieldDescriptorProto.Type value = DescriptorProtos.FieldDescriptorProto.Type.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(5, rawValue);
                        } else {
                           this.bitField0_ |= 8;
                           this.type_ = rawValue;
                        }
                        break;
                     case 50: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 16;
                        this.typeName_ = bs;
                        break;
                     }
                     case 58: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 64;
                        this.defaultValue_ = bs;
                        break;
                     }
                     case 66:
                        DescriptorProtos.FieldOptions.Builder subBuilder = null;
                        if ((this.bitField0_ & 512) != 0) {
                           subBuilder = this.options_.toBuilder();
                        }

                        this.options_ = input.readMessage(DescriptorProtos.FieldOptions.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.options_);
                           this.options_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 512;
                        break;
                     case 72:
                        this.bitField0_ |= 128;
                        this.oneofIndex_ = input.readInt32();
                        break;
                     case 82: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 256;
                        this.jsonName_ = bs;
                        break;
                     }
                     case 136:
                        this.bitField0_ |= 1024;
                        this.proto3Optional_ = input.readBool();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var14) {
               throw var14.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var15) {
               throw var15.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var16) {
               throw new InvalidProtocolBufferException(var16).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.FieldDescriptorProto.class, DescriptorProtos.FieldDescriptorProto.Builder.class);
      }

      @Override
      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public String getName() {
         Object ref = this.name_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.name_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getNameBytes() {
         Object ref = this.name_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.name_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasNumber() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public int getNumber() {
         return this.number_;
      }

      @Override
      public boolean hasLabel() {
         return (this.bitField0_ & 4) != 0;
      }

      @Override
      public DescriptorProtos.FieldDescriptorProto.Label getLabel() {
         DescriptorProtos.FieldDescriptorProto.Label result = DescriptorProtos.FieldDescriptorProto.Label.valueOf(this.label_);
         return result == null ? DescriptorProtos.FieldDescriptorProto.Label.LABEL_OPTIONAL : result;
      }

      @Override
      public boolean hasType() {
         return (this.bitField0_ & 8) != 0;
      }

      @Override
      public DescriptorProtos.FieldDescriptorProto.Type getType() {
         DescriptorProtos.FieldDescriptorProto.Type result = DescriptorProtos.FieldDescriptorProto.Type.valueOf(this.type_);
         return result == null ? DescriptorProtos.FieldDescriptorProto.Type.TYPE_DOUBLE : result;
      }

      @Override
      public boolean hasTypeName() {
         return (this.bitField0_ & 16) != 0;
      }

      @Override
      public String getTypeName() {
         Object ref = this.typeName_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.typeName_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getTypeNameBytes() {
         Object ref = this.typeName_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.typeName_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasExtendee() {
         return (this.bitField0_ & 32) != 0;
      }

      @Override
      public String getExtendee() {
         Object ref = this.extendee_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.extendee_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getExtendeeBytes() {
         Object ref = this.extendee_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.extendee_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasDefaultValue() {
         return (this.bitField0_ & 64) != 0;
      }

      @Override
      public String getDefaultValue() {
         Object ref = this.defaultValue_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.defaultValue_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getDefaultValueBytes() {
         Object ref = this.defaultValue_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.defaultValue_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasOneofIndex() {
         return (this.bitField0_ & 128) != 0;
      }

      @Override
      public int getOneofIndex() {
         return this.oneofIndex_;
      }

      @Override
      public boolean hasJsonName() {
         return (this.bitField0_ & 256) != 0;
      }

      @Override
      public String getJsonName() {
         Object ref = this.jsonName_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.jsonName_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getJsonNameBytes() {
         Object ref = this.jsonName_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.jsonName_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasOptions() {
         return (this.bitField0_ & 512) != 0;
      }

      @Override
      public DescriptorProtos.FieldOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.FieldOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public DescriptorProtos.FieldOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.FieldOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public boolean hasProto3Optional() {
         return (this.bitField0_ & 1024) != 0;
      }

      @Override
      public boolean getProto3Optional() {
         return this.proto3Optional_;
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else if (this.hasOptions() && !this.getOptions().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.name_);
         }

         if ((this.bitField0_ & 32) != 0) {
            GeneratedMessageV3.writeString(output, 2, this.extendee_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeInt32(3, this.number_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeEnum(4, this.label_);
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeEnum(5, this.type_);
         }

         if ((this.bitField0_ & 16) != 0) {
            GeneratedMessageV3.writeString(output, 6, this.typeName_);
         }

         if ((this.bitField0_ & 64) != 0) {
            GeneratedMessageV3.writeString(output, 7, this.defaultValue_);
         }

         if ((this.bitField0_ & 512) != 0) {
            output.writeMessage(8, this.getOptions());
         }

         if ((this.bitField0_ & 128) != 0) {
            output.writeInt32(9, this.oneofIndex_);
         }

         if ((this.bitField0_ & 256) != 0) {
            GeneratedMessageV3.writeString(output, 10, this.jsonName_);
         }

         if ((this.bitField0_ & 1024) != 0) {
            output.writeBool(17, this.proto3Optional_);
         }

         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            if ((this.bitField0_ & 32) != 0) {
               size += GeneratedMessageV3.computeStringSize(2, this.extendee_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeInt32Size(3, this.number_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeEnumSize(4, this.label_);
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeEnumSize(5, this.type_);
            }

            if ((this.bitField0_ & 16) != 0) {
               size += GeneratedMessageV3.computeStringSize(6, this.typeName_);
            }

            if ((this.bitField0_ & 64) != 0) {
               size += GeneratedMessageV3.computeStringSize(7, this.defaultValue_);
            }

            if ((this.bitField0_ & 512) != 0) {
               size += CodedOutputStream.computeMessageSize(8, this.getOptions());
            }

            if ((this.bitField0_ & 128) != 0) {
               size += CodedOutputStream.computeInt32Size(9, this.oneofIndex_);
            }

            if ((this.bitField0_ & 256) != 0) {
               size += GeneratedMessageV3.computeStringSize(10, this.jsonName_);
            }

            if ((this.bitField0_ & 1024) != 0) {
               size += CodedOutputStream.computeBoolSize(17, this.proto3Optional_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.FieldDescriptorProto)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.FieldDescriptorProto other = (DescriptorProtos.FieldDescriptorProto)obj;
            if (this.hasName() != other.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(other.getName())) {
               return false;
            } else if (this.hasNumber() != other.hasNumber()) {
               return false;
            } else if (this.hasNumber() && this.getNumber() != other.getNumber()) {
               return false;
            } else if (this.hasLabel() != other.hasLabel()) {
               return false;
            } else if (this.hasLabel() && this.label_ != other.label_) {
               return false;
            } else if (this.hasType() != other.hasType()) {
               return false;
            } else if (this.hasType() && this.type_ != other.type_) {
               return false;
            } else if (this.hasTypeName() != other.hasTypeName()) {
               return false;
            } else if (this.hasTypeName() && !this.getTypeName().equals(other.getTypeName())) {
               return false;
            } else if (this.hasExtendee() != other.hasExtendee()) {
               return false;
            } else if (this.hasExtendee() && !this.getExtendee().equals(other.getExtendee())) {
               return false;
            } else if (this.hasDefaultValue() != other.hasDefaultValue()) {
               return false;
            } else if (this.hasDefaultValue() && !this.getDefaultValue().equals(other.getDefaultValue())) {
               return false;
            } else if (this.hasOneofIndex() != other.hasOneofIndex()) {
               return false;
            } else if (this.hasOneofIndex() && this.getOneofIndex() != other.getOneofIndex()) {
               return false;
            } else if (this.hasJsonName() != other.hasJsonName()) {
               return false;
            } else if (this.hasJsonName() && !this.getJsonName().equals(other.getJsonName())) {
               return false;
            } else if (this.hasOptions() != other.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(other.getOptions())) {
               return false;
            } else if (this.hasProto3Optional() != other.hasProto3Optional()) {
               return false;
            } else if (this.hasProto3Optional() && this.getProto3Optional() != other.getProto3Optional()) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasName()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getName().hashCode();
            }

            if (this.hasNumber()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getNumber();
            }

            if (this.hasLabel()) {
               hash = 37 * hash + 4;
               hash = 53 * hash + this.label_;
            }

            if (this.hasType()) {
               hash = 37 * hash + 5;
               hash = 53 * hash + this.type_;
            }

            if (this.hasTypeName()) {
               hash = 37 * hash + 6;
               hash = 53 * hash + this.getTypeName().hashCode();
            }

            if (this.hasExtendee()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getExtendee().hashCode();
            }

            if (this.hasDefaultValue()) {
               hash = 37 * hash + 7;
               hash = 53 * hash + this.getDefaultValue().hashCode();
            }

            if (this.hasOneofIndex()) {
               hash = 37 * hash + 9;
               hash = 53 * hash + this.getOneofIndex();
            }

            if (this.hasJsonName()) {
               hash = 37 * hash + 10;
               hash = 53 * hash + this.getJsonName().hashCode();
            }

            if (this.hasOptions()) {
               hash = 37 * hash + 8;
               hash = 53 * hash + this.getOptions().hashCode();
            }

            if (this.hasProto3Optional()) {
               hash = 37 * hash + 17;
               hash = 53 * hash + Internal.hashBoolean(this.getProto3Optional());
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.FieldDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FieldDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.FieldDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.FieldDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.FieldDescriptorProto.Builder newBuilder(DescriptorProtos.FieldDescriptorProto prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.FieldDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE
            ? new DescriptorProtos.FieldDescriptorProto.Builder()
            : new DescriptorProtos.FieldDescriptorProto.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.FieldDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.FieldDescriptorProto.Builder(parent);
      }

      public static DescriptorProtos.FieldDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.FieldDescriptorProto> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.FieldDescriptorProto> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.FieldDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.Builder<DescriptorProtos.FieldDescriptorProto.Builder>
         implements DescriptorProtos.FieldDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_ = "";
         private int number_;
         private int label_ = 1;
         private int type_ = 1;
         private Object typeName_ = "";
         private Object extendee_ = "";
         private Object defaultValue_ = "";
         private int oneofIndex_;
         private Object jsonName_ = "";
         private DescriptorProtos.FieldOptions options_;
         private SingleFieldBuilderV3<DescriptorProtos.FieldOptions, DescriptorProtos.FieldOptions.Builder, DescriptorProtos.FieldOptionsOrBuilder> optionsBuilder_;
         private boolean proto3Optional_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.FieldDescriptorProto.class, DescriptorProtos.FieldDescriptorProto.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getOptionsFieldBuilder();
            }

         }

         public DescriptorProtos.FieldDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            this.number_ = 0;
            this.bitField0_ &= -3;
            this.label_ = 1;
            this.bitField0_ &= -5;
            this.type_ = 1;
            this.bitField0_ &= -9;
            this.typeName_ = "";
            this.bitField0_ &= -17;
            this.extendee_ = "";
            this.bitField0_ &= -33;
            this.defaultValue_ = "";
            this.bitField0_ &= -65;
            this.oneofIndex_ = 0;
            this.bitField0_ &= -129;
            this.jsonName_ = "";
            this.bitField0_ &= -257;
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -513;
            this.proto3Optional_ = false;
            this.bitField0_ &= -1025;
            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_descriptor;
         }

         public DescriptorProtos.FieldDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.FieldDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.FieldDescriptorProto build() {
            DescriptorProtos.FieldDescriptorProto result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.FieldDescriptorProto buildPartial() {
            DescriptorProtos.FieldDescriptorProto result = new DescriptorProtos.FieldDescriptorProto(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.name_ = this.name_;
            if ((from_bitField0_ & 2) != 0) {
               result.number_ = this.number_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               to_bitField0_ |= 4;
            }

            result.label_ = this.label_;
            if ((from_bitField0_ & 8) != 0) {
               to_bitField0_ |= 8;
            }

            result.type_ = this.type_;
            if ((from_bitField0_ & 16) != 0) {
               to_bitField0_ |= 16;
            }

            result.typeName_ = this.typeName_;
            if ((from_bitField0_ & 32) != 0) {
               to_bitField0_ |= 32;
            }

            result.extendee_ = this.extendee_;
            if ((from_bitField0_ & 64) != 0) {
               to_bitField0_ |= 64;
            }

            result.defaultValue_ = this.defaultValue_;
            if ((from_bitField0_ & 128) != 0) {
               result.oneofIndex_ = this.oneofIndex_;
               to_bitField0_ |= 128;
            }

            if ((from_bitField0_ & 256) != 0) {
               to_bitField0_ |= 256;
            }

            result.jsonName_ = this.jsonName_;
            if ((from_bitField0_ & 512) != 0) {
               if (this.optionsBuilder_ == null) {
                  result.options_ = this.options_;
               } else {
                  result.options_ = this.optionsBuilder_.build();
               }

               to_bitField0_ |= 512;
            }

            if ((from_bitField0_ & 1024) != 0) {
               result.proto3Optional_ = this.proto3Optional_;
               to_bitField0_ |= 1024;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clone() {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.setField(field, value);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.clearField(field);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.addRepeatedField(field, value);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.FieldDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.FieldDescriptorProto)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder mergeFrom(DescriptorProtos.FieldDescriptorProto other) {
            if (other == DescriptorProtos.FieldDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = other.name_;
                  this.onChanged();
               }

               if (other.hasNumber()) {
                  this.setNumber(other.getNumber());
               }

               if (other.hasLabel()) {
                  this.setLabel(other.getLabel());
               }

               if (other.hasType()) {
                  this.setType(other.getType());
               }

               if (other.hasTypeName()) {
                  this.bitField0_ |= 16;
                  this.typeName_ = other.typeName_;
                  this.onChanged();
               }

               if (other.hasExtendee()) {
                  this.bitField0_ |= 32;
                  this.extendee_ = other.extendee_;
                  this.onChanged();
               }

               if (other.hasDefaultValue()) {
                  this.bitField0_ |= 64;
                  this.defaultValue_ = other.defaultValue_;
                  this.onChanged();
               }

               if (other.hasOneofIndex()) {
                  this.setOneofIndex(other.getOneofIndex());
               }

               if (other.hasJsonName()) {
                  this.bitField0_ |= 256;
                  this.jsonName_ = other.jsonName_;
                  this.onChanged();
               }

               if (other.hasOptions()) {
                  this.mergeOptions(other.getOptions());
               }

               if (other.hasProto3Optional()) {
                  this.setProto3Optional(other.getProto3Optional());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            return !this.hasOptions() || this.getOptions().isInitialized();
         }

         public DescriptorProtos.FieldDescriptorProto.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.FieldDescriptorProto parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.FieldDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.FieldDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public String getName() {
            Object ref = this.name_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.name_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.name_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasNumber() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public int getNumber() {
            return this.number_;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setNumber(int value) {
            this.bitField0_ |= 2;
            this.number_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearNumber() {
            this.bitField0_ &= -3;
            this.number_ = 0;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasLabel() {
            return (this.bitField0_ & 4) != 0;
         }

         @Override
         public DescriptorProtos.FieldDescriptorProto.Label getLabel() {
            DescriptorProtos.FieldDescriptorProto.Label result = DescriptorProtos.FieldDescriptorProto.Label.valueOf(this.label_);
            return result == null ? DescriptorProtos.FieldDescriptorProto.Label.LABEL_OPTIONAL : result;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setLabel(DescriptorProtos.FieldDescriptorProto.Label value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.label_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearLabel() {
            this.bitField0_ &= -5;
            this.label_ = 1;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasType() {
            return (this.bitField0_ & 8) != 0;
         }

         @Override
         public DescriptorProtos.FieldDescriptorProto.Type getType() {
            DescriptorProtos.FieldDescriptorProto.Type result = DescriptorProtos.FieldDescriptorProto.Type.valueOf(this.type_);
            return result == null ? DescriptorProtos.FieldDescriptorProto.Type.TYPE_DOUBLE : result;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setType(DescriptorProtos.FieldDescriptorProto.Type value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8;
               this.type_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearType() {
            this.bitField0_ &= -9;
            this.type_ = 1;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasTypeName() {
            return (this.bitField0_ & 16) != 0;
         }

         @Override
         public String getTypeName() {
            Object ref = this.typeName_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.typeName_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getTypeNameBytes() {
            Object ref = this.typeName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.typeName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setTypeName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.typeName_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearTypeName() {
            this.bitField0_ &= -17;
            this.typeName_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getTypeName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setTypeNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.typeName_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasExtendee() {
            return (this.bitField0_ & 32) != 0;
         }

         @Override
         public String getExtendee() {
            Object ref = this.extendee_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.extendee_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getExtendeeBytes() {
            Object ref = this.extendee_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.extendee_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setExtendee(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 32;
               this.extendee_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearExtendee() {
            this.bitField0_ &= -33;
            this.extendee_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getExtendee();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setExtendeeBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 32;
               this.extendee_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasDefaultValue() {
            return (this.bitField0_ & 64) != 0;
         }

         @Override
         public String getDefaultValue() {
            Object ref = this.defaultValue_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.defaultValue_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getDefaultValueBytes() {
            Object ref = this.defaultValue_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.defaultValue_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setDefaultValue(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 64;
               this.defaultValue_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearDefaultValue() {
            this.bitField0_ &= -65;
            this.defaultValue_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getDefaultValue();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setDefaultValueBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 64;
               this.defaultValue_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasOneofIndex() {
            return (this.bitField0_ & 128) != 0;
         }

         @Override
         public int getOneofIndex() {
            return this.oneofIndex_;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setOneofIndex(int value) {
            this.bitField0_ |= 128;
            this.oneofIndex_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearOneofIndex() {
            this.bitField0_ &= -129;
            this.oneofIndex_ = 0;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasJsonName() {
            return (this.bitField0_ & 256) != 0;
         }

         @Override
         public String getJsonName() {
            Object ref = this.jsonName_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.jsonName_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getJsonNameBytes() {
            Object ref = this.jsonName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.jsonName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setJsonName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 256;
               this.jsonName_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearJsonName() {
            this.bitField0_ &= -257;
            this.jsonName_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getJsonName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setJsonNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 256;
               this.jsonName_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasOptions() {
            return (this.bitField0_ & 512) != 0;
         }

         @Override
         public DescriptorProtos.FieldOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.FieldOptions.getDefaultInstance() : this.options_;
            } else {
               return this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setOptions(DescriptorProtos.FieldOptions value) {
            if (this.optionsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.options_ = value;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setOptions(DescriptorProtos.FieldOptions.Builder builderForValue) {
            if (this.optionsBuilder_ == null) {
               this.options_ = builderForValue.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 512;
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder mergeOptions(DescriptorProtos.FieldOptions value) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 512) != 0 && this.options_ != null && this.options_ != DescriptorProtos.FieldOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.FieldOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
               } else {
                  this.options_ = value;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -513;
            return this;
         }

         public DescriptorProtos.FieldOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 512;
            this.onChanged();
            return this.getOptionsFieldBuilder().getBuilder();
         }

         @Override
         public DescriptorProtos.FieldOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.FieldOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3<DescriptorProtos.FieldOptions, DescriptorProtos.FieldOptions.Builder, DescriptorProtos.FieldOptionsOrBuilder> getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3<>(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         @Override
         public boolean hasProto3Optional() {
            return (this.bitField0_ & 1024) != 0;
         }

         @Override
         public boolean getProto3Optional() {
            return this.proto3Optional_;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setProto3Optional(boolean value) {
            this.bitField0_ |= 1024;
            this.proto3Optional_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearProto3Optional() {
            this.bitField0_ &= -1025;
            this.proto3Optional_ = false;
            this.onChanged();
            return this;
         }

         public final DescriptorProtos.FieldDescriptorProto.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.FieldDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.mergeUnknownFields(unknownFields);
         }
      }

      public static enum Label implements ProtocolMessageEnum {
         LABEL_OPTIONAL(1),
         LABEL_REQUIRED(2),
         LABEL_REPEATED(3);

         public static final int LABEL_OPTIONAL_VALUE = 1;
         public static final int LABEL_REQUIRED_VALUE = 2;
         public static final int LABEL_REPEATED_VALUE = 3;
         private static final Internal.EnumLiteMap<DescriptorProtos.FieldDescriptorProto.Label> internalValueMap = new Internal.EnumLiteMap<DescriptorProtos.FieldDescriptorProto.Label>(
            
         ) {
            public DescriptorProtos.FieldDescriptorProto.Label findValueByNumber(int number) {
               return DescriptorProtos.FieldDescriptorProto.Label.forNumber(number);
            }
         };
         private static final DescriptorProtos.FieldDescriptorProto.Label[] VALUES = values();
         private final int value;

         @Override
         public final int getNumber() {
            return this.value;
         }

         @Deprecated
         public static DescriptorProtos.FieldDescriptorProto.Label valueOf(int value) {
            return forNumber(value);
         }

         public static DescriptorProtos.FieldDescriptorProto.Label forNumber(int value) {
            switch(value) {
               case 1:
                  return LABEL_OPTIONAL;
               case 2:
                  return LABEL_REQUIRED;
               case 3:
                  return LABEL_REPEATED;
               default:
                  return null;
            }
         }

         public static Internal.EnumLiteMap<DescriptorProtos.FieldDescriptorProto.Label> internalGetValueMap() {
            return internalValueMap;
         }

         @Override
         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         @Override
         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)DescriptorProtos.FieldDescriptorProto.getDescriptor().getEnumTypes().get(1);
         }

         public static DescriptorProtos.FieldDescriptorProto.Label valueOf(Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[desc.getIndex()];
            }
         }

         private Label(int value) {
            this.value = value;
         }
      }

      public static enum Type implements ProtocolMessageEnum {
         TYPE_DOUBLE(1),
         TYPE_FLOAT(2),
         TYPE_INT64(3),
         TYPE_UINT64(4),
         TYPE_INT32(5),
         TYPE_FIXED64(6),
         TYPE_FIXED32(7),
         TYPE_BOOL(8),
         TYPE_STRING(9),
         TYPE_GROUP(10),
         TYPE_MESSAGE(11),
         TYPE_BYTES(12),
         TYPE_UINT32(13),
         TYPE_ENUM(14),
         TYPE_SFIXED32(15),
         TYPE_SFIXED64(16),
         TYPE_SINT32(17),
         TYPE_SINT64(18);

         public static final int TYPE_DOUBLE_VALUE = 1;
         public static final int TYPE_FLOAT_VALUE = 2;
         public static final int TYPE_INT64_VALUE = 3;
         public static final int TYPE_UINT64_VALUE = 4;
         public static final int TYPE_INT32_VALUE = 5;
         public static final int TYPE_FIXED64_VALUE = 6;
         public static final int TYPE_FIXED32_VALUE = 7;
         public static final int TYPE_BOOL_VALUE = 8;
         public static final int TYPE_STRING_VALUE = 9;
         public static final int TYPE_GROUP_VALUE = 10;
         public static final int TYPE_MESSAGE_VALUE = 11;
         public static final int TYPE_BYTES_VALUE = 12;
         public static final int TYPE_UINT32_VALUE = 13;
         public static final int TYPE_ENUM_VALUE = 14;
         public static final int TYPE_SFIXED32_VALUE = 15;
         public static final int TYPE_SFIXED64_VALUE = 16;
         public static final int TYPE_SINT32_VALUE = 17;
         public static final int TYPE_SINT64_VALUE = 18;
         private static final Internal.EnumLiteMap<DescriptorProtos.FieldDescriptorProto.Type> internalValueMap = new Internal.EnumLiteMap<DescriptorProtos.FieldDescriptorProto.Type>(
            
         ) {
            public DescriptorProtos.FieldDescriptorProto.Type findValueByNumber(int number) {
               return DescriptorProtos.FieldDescriptorProto.Type.forNumber(number);
            }
         };
         private static final DescriptorProtos.FieldDescriptorProto.Type[] VALUES = values();
         private final int value;

         @Override
         public final int getNumber() {
            return this.value;
         }

         @Deprecated
         public static DescriptorProtos.FieldDescriptorProto.Type valueOf(int value) {
            return forNumber(value);
         }

         public static DescriptorProtos.FieldDescriptorProto.Type forNumber(int value) {
            switch(value) {
               case 1:
                  return TYPE_DOUBLE;
               case 2:
                  return TYPE_FLOAT;
               case 3:
                  return TYPE_INT64;
               case 4:
                  return TYPE_UINT64;
               case 5:
                  return TYPE_INT32;
               case 6:
                  return TYPE_FIXED64;
               case 7:
                  return TYPE_FIXED32;
               case 8:
                  return TYPE_BOOL;
               case 9:
                  return TYPE_STRING;
               case 10:
                  return TYPE_GROUP;
               case 11:
                  return TYPE_MESSAGE;
               case 12:
                  return TYPE_BYTES;
               case 13:
                  return TYPE_UINT32;
               case 14:
                  return TYPE_ENUM;
               case 15:
                  return TYPE_SFIXED32;
               case 16:
                  return TYPE_SFIXED64;
               case 17:
                  return TYPE_SINT32;
               case 18:
                  return TYPE_SINT64;
               default:
                  return null;
            }
         }

         public static Internal.EnumLiteMap<DescriptorProtos.FieldDescriptorProto.Type> internalGetValueMap() {
            return internalValueMap;
         }

         @Override
         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         @Override
         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)DescriptorProtos.FieldDescriptorProto.getDescriptor().getEnumTypes().get(0);
         }

         public static DescriptorProtos.FieldDescriptorProto.Type valueOf(Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[desc.getIndex()];
            }
         }

         private Type(int value) {
            this.value = value;
         }
      }
   }

   public interface FieldDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      boolean hasNumber();

      int getNumber();

      boolean hasLabel();

      DescriptorProtos.FieldDescriptorProto.Label getLabel();

      boolean hasType();

      DescriptorProtos.FieldDescriptorProto.Type getType();

      boolean hasTypeName();

      String getTypeName();

      ByteString getTypeNameBytes();

      boolean hasExtendee();

      String getExtendee();

      ByteString getExtendeeBytes();

      boolean hasDefaultValue();

      String getDefaultValue();

      ByteString getDefaultValueBytes();

      boolean hasOneofIndex();

      int getOneofIndex();

      boolean hasJsonName();

      String getJsonName();

      ByteString getJsonNameBytes();

      boolean hasOptions();

      DescriptorProtos.FieldOptions getOptions();

      DescriptorProtos.FieldOptionsOrBuilder getOptionsOrBuilder();

      boolean hasProto3Optional();

      boolean getProto3Optional();
   }

   public static final class FieldOptions
      extends GeneratedMessageV3.ExtendableMessage<DescriptorProtos.FieldOptions>
      implements DescriptorProtos.FieldOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int CTYPE_FIELD_NUMBER = 1;
      private int ctype_;
      public static final int PACKED_FIELD_NUMBER = 2;
      private boolean packed_;
      public static final int JSTYPE_FIELD_NUMBER = 6;
      private int jstype_;
      public static final int LAZY_FIELD_NUMBER = 5;
      private boolean lazy_;
      public static final int UNVERIFIED_LAZY_FIELD_NUMBER = 15;
      private boolean unverifiedLazy_;
      public static final int DEPRECATED_FIELD_NUMBER = 3;
      private boolean deprecated_;
      public static final int WEAK_FIELD_NUMBER = 10;
      private boolean weak_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.FieldOptions DEFAULT_INSTANCE = new DescriptorProtos.FieldOptions();
      @Deprecated
      public static final Parser<DescriptorProtos.FieldOptions> PARSER = new AbstractParser<DescriptorProtos.FieldOptions>() {
         public DescriptorProtos.FieldOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.FieldOptions(input, extensionRegistry);
         }
      };

      private FieldOptions(GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.FieldOptions, ?> builder) {
         super(builder);
      }

      private FieldOptions() {
         this.ctype_ = 0;
         this.jstype_ = 0;
         this.uninterpretedOption_ = Collections.emptyList();
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.FieldOptions();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private FieldOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        int rawValue = input.readEnum();
                        DescriptorProtos.FieldOptions.CType value = DescriptorProtos.FieldOptions.CType.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(1, rawValue);
                        } else {
                           this.bitField0_ |= 1;
                           this.ctype_ = rawValue;
                        }
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.packed_ = input.readBool();
                        break;
                     case 24:
                        this.bitField0_ |= 32;
                        this.deprecated_ = input.readBool();
                        break;
                     case 40:
                        this.bitField0_ |= 8;
                        this.lazy_ = input.readBool();
                        break;
                     case 48:
                        int rawValue = input.readEnum();
                        DescriptorProtos.FieldOptions.JSType value = DescriptorProtos.FieldOptions.JSType.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(6, rawValue);
                        } else {
                           this.bitField0_ |= 4;
                           this.jstype_ = rawValue;
                        }
                        break;
                     case 80:
                        this.bitField0_ |= 64;
                        this.weak_ = input.readBool();
                        break;
                     case 120:
                        this.bitField0_ |= 16;
                        this.unverifiedLazy_ = input.readBool();
                        break;
                     case 7994:
                        if ((mutable_bitField0_ & 128) == 0) {
                           this.uninterpretedOption_ = new ArrayList();
                           mutable_bitField0_ |= 128;
                        }

                        this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var14) {
               throw var14.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var15) {
               throw var15.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var16) {
               throw new InvalidProtocolBufferException(var16).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 128) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_FieldOptions_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_FieldOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.FieldOptions.class, DescriptorProtos.FieldOptions.Builder.class);
      }

      @Override
      public boolean hasCtype() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public DescriptorProtos.FieldOptions.CType getCtype() {
         DescriptorProtos.FieldOptions.CType result = DescriptorProtos.FieldOptions.CType.valueOf(this.ctype_);
         return result == null ? DescriptorProtos.FieldOptions.CType.STRING : result;
      }

      @Override
      public boolean hasPacked() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public boolean getPacked() {
         return this.packed_;
      }

      @Override
      public boolean hasJstype() {
         return (this.bitField0_ & 4) != 0;
      }

      @Override
      public DescriptorProtos.FieldOptions.JSType getJstype() {
         DescriptorProtos.FieldOptions.JSType result = DescriptorProtos.FieldOptions.JSType.valueOf(this.jstype_);
         return result == null ? DescriptorProtos.FieldOptions.JSType.JS_NORMAL : result;
      }

      @Override
      public boolean hasLazy() {
         return (this.bitField0_ & 8) != 0;
      }

      @Override
      public boolean getLazy() {
         return this.lazy_;
      }

      @Override
      public boolean hasUnverifiedLazy() {
         return (this.bitField0_ & 16) != 0;
      }

      @Override
      public boolean getUnverifiedLazy() {
         return this.unverifiedLazy_;
      }

      @Override
      public boolean hasDeprecated() {
         return (this.bitField0_ & 32) != 0;
      }

      @Override
      public boolean getDeprecated() {
         return this.deprecated_;
      }

      @Override
      public boolean hasWeak() {
         return (this.bitField0_ & 64) != 0;
      }

      @Override
      public boolean getWeak() {
         return this.weak_;
      }

      @Override
      public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      @Override
      public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      @Override
      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      @Override
      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index);
      }

      @Override
      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         GeneratedMessageV3.ExtendableMessage<DescriptorProtos.FieldOptions>.ExtensionWriter extensionWriter = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            output.writeEnum(1, this.ctype_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeBool(2, this.packed_);
         }

         if ((this.bitField0_ & 32) != 0) {
            output.writeBool(3, this.deprecated_);
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeBool(5, this.lazy_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeEnum(6, this.jstype_);
         }

         if ((this.bitField0_ & 64) != 0) {
            output.writeBool(10, this.weak_);
         }

         if ((this.bitField0_ & 16) != 0) {
            output.writeBool(15, this.unverifiedLazy_);
         }

         for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
            output.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(i));
         }

         extensionWriter.writeUntil(536870912, output);
         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeEnumSize(1, this.ctype_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeBoolSize(2, this.packed_);
            }

            if ((this.bitField0_ & 32) != 0) {
               size += CodedOutputStream.computeBoolSize(3, this.deprecated_);
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeBoolSize(5, this.lazy_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeEnumSize(6, this.jstype_);
            }

            if ((this.bitField0_ & 64) != 0) {
               size += CodedOutputStream.computeBoolSize(10, this.weak_);
            }

            if ((this.bitField0_ & 16) != 0) {
               size += CodedOutputStream.computeBoolSize(15, this.unverifiedLazy_);
            }

            for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(i));
            }

            size += this.extensionsSerializedSize();
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.FieldOptions)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.FieldOptions other = (DescriptorProtos.FieldOptions)obj;
            if (this.hasCtype() != other.hasCtype()) {
               return false;
            } else if (this.hasCtype() && this.ctype_ != other.ctype_) {
               return false;
            } else if (this.hasPacked() != other.hasPacked()) {
               return false;
            } else if (this.hasPacked() && this.getPacked() != other.getPacked()) {
               return false;
            } else if (this.hasJstype() != other.hasJstype()) {
               return false;
            } else if (this.hasJstype() && this.jstype_ != other.jstype_) {
               return false;
            } else if (this.hasLazy() != other.hasLazy()) {
               return false;
            } else if (this.hasLazy() && this.getLazy() != other.getLazy()) {
               return false;
            } else if (this.hasUnverifiedLazy() != other.hasUnverifiedLazy()) {
               return false;
            } else if (this.hasUnverifiedLazy() && this.getUnverifiedLazy() != other.getUnverifiedLazy()) {
               return false;
            } else if (this.hasDeprecated() != other.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != other.getDeprecated()) {
               return false;
            } else if (this.hasWeak() != other.hasWeak()) {
               return false;
            } else if (this.hasWeak() && this.getWeak() != other.getWeak()) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(other.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(other.getExtensionFields());
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasCtype()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.ctype_;
            }

            if (this.hasPacked()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + Internal.hashBoolean(this.getPacked());
            }

            if (this.hasJstype()) {
               hash = 37 * hash + 6;
               hash = 53 * hash + this.jstype_;
            }

            if (this.hasLazy()) {
               hash = 37 * hash + 5;
               hash = 53 * hash + Internal.hashBoolean(this.getLazy());
            }

            if (this.hasUnverifiedLazy()) {
               hash = 37 * hash + 15;
               hash = 53 * hash + Internal.hashBoolean(this.getUnverifiedLazy());
            }

            if (this.hasDeprecated()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.hasWeak()) {
               hash = 37 * hash + 10;
               hash = 53 * hash + Internal.hashBoolean(this.getWeak());
            }

            if (this.getUninterpretedOptionCount() > 0) {
               hash = 37 * hash + 999;
               hash = 53 * hash + this.getUninterpretedOptionList().hashCode();
            }

            hash = hashFields(hash, this.getExtensionFields());
            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.FieldOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FieldOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FieldOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FieldOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FieldOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FieldOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FieldOptions parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FieldOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.FieldOptions parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FieldOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.FieldOptions parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FieldOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.FieldOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.FieldOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.FieldOptions.Builder newBuilder(DescriptorProtos.FieldOptions prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.FieldOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.FieldOptions.Builder() : new DescriptorProtos.FieldOptions.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.FieldOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.FieldOptions.Builder(parent);
      }

      public static DescriptorProtos.FieldOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.FieldOptions> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.FieldOptions> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.FieldOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.FieldOptions, DescriptorProtos.FieldOptions.Builder>
         implements DescriptorProtos.FieldOptionsOrBuilder {
         private int bitField0_;
         private int ctype_ = 0;
         private boolean packed_;
         private int jstype_ = 0;
         private boolean lazy_;
         private boolean unverifiedLazy_;
         private boolean deprecated_;
         private boolean weak_;
         private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_FieldOptions_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_FieldOptions_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.FieldOptions.class, DescriptorProtos.FieldOptions.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.FieldOptions.Builder clear() {
            super.clear();
            this.ctype_ = 0;
            this.bitField0_ &= -2;
            this.packed_ = false;
            this.bitField0_ &= -3;
            this.jstype_ = 0;
            this.bitField0_ &= -5;
            this.lazy_ = false;
            this.bitField0_ &= -9;
            this.unverifiedLazy_ = false;
            this.bitField0_ &= -17;
            this.deprecated_ = false;
            this.bitField0_ &= -33;
            this.weak_ = false;
            this.bitField0_ &= -65;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -129;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_FieldOptions_descriptor;
         }

         public DescriptorProtos.FieldOptions getDefaultInstanceForType() {
            return DescriptorProtos.FieldOptions.getDefaultInstance();
         }

         public DescriptorProtos.FieldOptions build() {
            DescriptorProtos.FieldOptions result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.FieldOptions buildPartial() {
            DescriptorProtos.FieldOptions result = new DescriptorProtos.FieldOptions(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.ctype_ = this.ctype_;
            if ((from_bitField0_ & 2) != 0) {
               result.packed_ = this.packed_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               to_bitField0_ |= 4;
            }

            result.jstype_ = this.jstype_;
            if ((from_bitField0_ & 8) != 0) {
               result.lazy_ = this.lazy_;
               to_bitField0_ |= 8;
            }

            if ((from_bitField0_ & 16) != 0) {
               result.unverifiedLazy_ = this.unverifiedLazy_;
               to_bitField0_ |= 16;
            }

            if ((from_bitField0_ & 32) != 0) {
               result.deprecated_ = this.deprecated_;
               to_bitField0_ |= 32;
            }

            if ((from_bitField0_ & 64) != 0) {
               result.weak_ = this.weak_;
               to_bitField0_ |= 64;
            }

            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 128) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -129;
               }

               result.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.FieldOptions.Builder clone() {
            return (DescriptorProtos.FieldOptions.Builder)super.clone();
         }

         public DescriptorProtos.FieldOptions.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.FieldOptions.Builder)super.setField(field, value);
         }

         public DescriptorProtos.FieldOptions.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.FieldOptions.Builder)super.clearField(field);
         }

         public DescriptorProtos.FieldOptions.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.FieldOptions.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.FieldOptions.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.FieldOptions.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.FieldOptions.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.FieldOptions.Builder)super.addRepeatedField(field, value);
         }

         public <Type> DescriptorProtos.FieldOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.FieldOptions, Type> extension, Type value
         ) {
            return (DescriptorProtos.FieldOptions.Builder)super.setExtension(extension, value);
         }

         public <Type> DescriptorProtos.FieldOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.FieldOptions, List<Type>> extension, int index, Type value
         ) {
            return (DescriptorProtos.FieldOptions.Builder)super.setExtension(extension, index, value);
         }

         public <Type> DescriptorProtos.FieldOptions.Builder addExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.FieldOptions, List<Type>> extension, Type value
         ) {
            return (DescriptorProtos.FieldOptions.Builder)super.addExtension(extension, value);
         }

         public <Type> DescriptorProtos.FieldOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.FieldOptions, ?> extension) {
            return (DescriptorProtos.FieldOptions.Builder)super.clearExtension(extension);
         }

         public DescriptorProtos.FieldOptions.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.FieldOptions) {
               return this.mergeFrom((DescriptorProtos.FieldOptions)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.FieldOptions.Builder mergeFrom(DescriptorProtos.FieldOptions other) {
            if (other == DescriptorProtos.FieldOptions.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasCtype()) {
                  this.setCtype(other.getCtype());
               }

               if (other.hasPacked()) {
                  this.setPacked(other.getPacked());
               }

               if (other.hasJstype()) {
                  this.setJstype(other.getJstype());
               }

               if (other.hasLazy()) {
                  this.setLazy(other.getLazy());
               }

               if (other.hasUnverifiedLazy()) {
                  this.setUnverifiedLazy(other.getUnverifiedLazy());
               }

               if (other.hasDeprecated()) {
                  this.setDeprecated(other.getDeprecated());
               }

               if (other.hasWeak()) {
                  this.setWeak(other.getWeak());
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!other.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = other.uninterpretedOption_;
                        this.bitField0_ &= -129;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(other.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!other.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = other.uninterpretedOption_;
                     this.bitField0_ &= -129;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(other);
               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  return false;
               }
            }

            return this.extensionsAreInitialized();
         }

         public DescriptorProtos.FieldOptions.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.FieldOptions parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.FieldOptions.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.FieldOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasCtype() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public DescriptorProtos.FieldOptions.CType getCtype() {
            DescriptorProtos.FieldOptions.CType result = DescriptorProtos.FieldOptions.CType.valueOf(this.ctype_);
            return result == null ? DescriptorProtos.FieldOptions.CType.STRING : result;
         }

         public DescriptorProtos.FieldOptions.Builder setCtype(DescriptorProtos.FieldOptions.CType value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.ctype_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldOptions.Builder clearCtype() {
            this.bitField0_ &= -2;
            this.ctype_ = 0;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasPacked() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public boolean getPacked() {
            return this.packed_;
         }

         public DescriptorProtos.FieldOptions.Builder setPacked(boolean value) {
            this.bitField0_ |= 2;
            this.packed_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldOptions.Builder clearPacked() {
            this.bitField0_ &= -3;
            this.packed_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasJstype() {
            return (this.bitField0_ & 4) != 0;
         }

         @Override
         public DescriptorProtos.FieldOptions.JSType getJstype() {
            DescriptorProtos.FieldOptions.JSType result = DescriptorProtos.FieldOptions.JSType.valueOf(this.jstype_);
            return result == null ? DescriptorProtos.FieldOptions.JSType.JS_NORMAL : result;
         }

         public DescriptorProtos.FieldOptions.Builder setJstype(DescriptorProtos.FieldOptions.JSType value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.jstype_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldOptions.Builder clearJstype() {
            this.bitField0_ &= -5;
            this.jstype_ = 0;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasLazy() {
            return (this.bitField0_ & 8) != 0;
         }

         @Override
         public boolean getLazy() {
            return this.lazy_;
         }

         public DescriptorProtos.FieldOptions.Builder setLazy(boolean value) {
            this.bitField0_ |= 8;
            this.lazy_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldOptions.Builder clearLazy() {
            this.bitField0_ &= -9;
            this.lazy_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasUnverifiedLazy() {
            return (this.bitField0_ & 16) != 0;
         }

         @Override
         public boolean getUnverifiedLazy() {
            return this.unverifiedLazy_;
         }

         public DescriptorProtos.FieldOptions.Builder setUnverifiedLazy(boolean value) {
            this.bitField0_ |= 16;
            this.unverifiedLazy_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldOptions.Builder clearUnverifiedLazy() {
            this.bitField0_ &= -17;
            this.unverifiedLazy_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasDeprecated() {
            return (this.bitField0_ & 32) != 0;
         }

         @Override
         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.FieldOptions.Builder setDeprecated(boolean value) {
            this.bitField0_ |= 32;
            this.deprecated_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldOptions.Builder clearDeprecated() {
            this.bitField0_ &= -33;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasWeak() {
            return (this.bitField0_ & 64) != 0;
         }

         @Override
         public boolean getWeak() {
            return this.weak_;
         }

         public DescriptorProtos.FieldOptions.Builder setWeak(boolean value) {
            this.bitField0_ |= 64;
            this.weak_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldOptions.Builder clearWeak() {
            this.bitField0_ &= -65;
            this.weak_ = false;
            this.onChanged();
            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 128) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 128;
            }

         }

         @Override
         public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null
               ? Collections.unmodifiableList(this.uninterpretedOption_)
               : this.uninterpretedOptionBuilder_.getMessageList();
         }

         @Override
         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessage(index);
         }

         public DescriptorProtos.FieldOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -129;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder removeUninterpretedOption(int index) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(index);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null
               ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList()
               : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(index, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(
                  this.uninterpretedOption_, (this.bitField0_ & 128) != 0, this.getParentForChildren(), this.isClean()
               );
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.FieldOptions.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.FieldOptions.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.FieldOptions.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.FieldOptions.Builder)super.mergeUnknownFields(unknownFields);
         }
      }

      public static enum CType implements ProtocolMessageEnum {
         STRING(0),
         CORD(1),
         STRING_PIECE(2);

         public static final int STRING_VALUE = 0;
         public static final int CORD_VALUE = 1;
         public static final int STRING_PIECE_VALUE = 2;
         private static final Internal.EnumLiteMap<DescriptorProtos.FieldOptions.CType> internalValueMap = new Internal.EnumLiteMap<DescriptorProtos.FieldOptions.CType>(
            
         ) {
            public DescriptorProtos.FieldOptions.CType findValueByNumber(int number) {
               return DescriptorProtos.FieldOptions.CType.forNumber(number);
            }
         };
         private static final DescriptorProtos.FieldOptions.CType[] VALUES = values();
         private final int value;

         @Override
         public final int getNumber() {
            return this.value;
         }

         @Deprecated
         public static DescriptorProtos.FieldOptions.CType valueOf(int value) {
            return forNumber(value);
         }

         public static DescriptorProtos.FieldOptions.CType forNumber(int value) {
            switch(value) {
               case 0:
                  return STRING;
               case 1:
                  return CORD;
               case 2:
                  return STRING_PIECE;
               default:
                  return null;
            }
         }

         public static Internal.EnumLiteMap<DescriptorProtos.FieldOptions.CType> internalGetValueMap() {
            return internalValueMap;
         }

         @Override
         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         @Override
         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)DescriptorProtos.FieldOptions.getDescriptor().getEnumTypes().get(0);
         }

         public static DescriptorProtos.FieldOptions.CType valueOf(Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[desc.getIndex()];
            }
         }

         private CType(int value) {
            this.value = value;
         }
      }

      public static enum JSType implements ProtocolMessageEnum {
         JS_NORMAL(0),
         JS_STRING(1),
         JS_NUMBER(2);

         public static final int JS_NORMAL_VALUE = 0;
         public static final int JS_STRING_VALUE = 1;
         public static final int JS_NUMBER_VALUE = 2;
         private static final Internal.EnumLiteMap<DescriptorProtos.FieldOptions.JSType> internalValueMap = new Internal.EnumLiteMap<DescriptorProtos.FieldOptions.JSType>(
            
         ) {
            public DescriptorProtos.FieldOptions.JSType findValueByNumber(int number) {
               return DescriptorProtos.FieldOptions.JSType.forNumber(number);
            }
         };
         private static final DescriptorProtos.FieldOptions.JSType[] VALUES = values();
         private final int value;

         @Override
         public final int getNumber() {
            return this.value;
         }

         @Deprecated
         public static DescriptorProtos.FieldOptions.JSType valueOf(int value) {
            return forNumber(value);
         }

         public static DescriptorProtos.FieldOptions.JSType forNumber(int value) {
            switch(value) {
               case 0:
                  return JS_NORMAL;
               case 1:
                  return JS_STRING;
               case 2:
                  return JS_NUMBER;
               default:
                  return null;
            }
         }

         public static Internal.EnumLiteMap<DescriptorProtos.FieldOptions.JSType> internalGetValueMap() {
            return internalValueMap;
         }

         @Override
         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         @Override
         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)DescriptorProtos.FieldOptions.getDescriptor().getEnumTypes().get(1);
         }

         public static DescriptorProtos.FieldOptions.JSType valueOf(Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[desc.getIndex()];
            }
         }

         private JSType(int value) {
            this.value = value;
         }
      }
   }

   public interface FieldOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder<DescriptorProtos.FieldOptions> {
      boolean hasCtype();

      DescriptorProtos.FieldOptions.CType getCtype();

      boolean hasPacked();

      boolean getPacked();

      boolean hasJstype();

      DescriptorProtos.FieldOptions.JSType getJstype();

      boolean hasLazy();

      boolean getLazy();

      boolean hasUnverifiedLazy();

      boolean getUnverifiedLazy();

      boolean hasDeprecated();

      boolean getDeprecated();

      boolean hasWeak();

      boolean getWeak();

      List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class FileDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.FileDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int PACKAGE_FIELD_NUMBER = 2;
      private volatile Object package_;
      public static final int DEPENDENCY_FIELD_NUMBER = 3;
      private LazyStringList dependency_;
      public static final int PUBLIC_DEPENDENCY_FIELD_NUMBER = 10;
      private Internal.IntList publicDependency_;
      public static final int WEAK_DEPENDENCY_FIELD_NUMBER = 11;
      private Internal.IntList weakDependency_;
      public static final int MESSAGE_TYPE_FIELD_NUMBER = 4;
      private List<DescriptorProtos.DescriptorProto> messageType_;
      public static final int ENUM_TYPE_FIELD_NUMBER = 5;
      private List<DescriptorProtos.EnumDescriptorProto> enumType_;
      public static final int SERVICE_FIELD_NUMBER = 6;
      private List<DescriptorProtos.ServiceDescriptorProto> service_;
      public static final int EXTENSION_FIELD_NUMBER = 7;
      private List<DescriptorProtos.FieldDescriptorProto> extension_;
      public static final int OPTIONS_FIELD_NUMBER = 8;
      private DescriptorProtos.FileOptions options_;
      public static final int SOURCE_CODE_INFO_FIELD_NUMBER = 9;
      private DescriptorProtos.SourceCodeInfo sourceCodeInfo_;
      public static final int SYNTAX_FIELD_NUMBER = 12;
      private volatile Object syntax_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.FileDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.FileDescriptorProto();
      @Deprecated
      public static final Parser<DescriptorProtos.FileDescriptorProto> PARSER = new AbstractParser<DescriptorProtos.FileDescriptorProto>() {
         public DescriptorProtos.FileDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.FileDescriptorProto(input, extensionRegistry);
         }
      };

      private FileDescriptorProto(GeneratedMessageV3.Builder<?> builder) {
         super(builder);
      }

      private FileDescriptorProto() {
         this.name_ = "";
         this.package_ = "";
         this.dependency_ = LazyStringArrayList.EMPTY;
         this.publicDependency_ = emptyIntList();
         this.weakDependency_ = emptyIntList();
         this.messageType_ = Collections.emptyList();
         this.enumType_ = Collections.emptyList();
         this.service_ = Collections.emptyList();
         this.extension_ = Collections.emptyList();
         this.syntax_ = "";
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.FileDescriptorProto();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private FileDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  int limit;
                  switch(tag) {
                     case 0:
                        done = true;
                        continue;
                     case 10: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.name_ = bs;
                        continue;
                     }
                     case 18: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 2;
                        this.package_ = bs;
                        continue;
                     }
                     case 26: {
                        ByteString bs = input.readBytes();
                        if ((mutable_bitField0_ & 4) == 0) {
                           this.dependency_ = new LazyStringArrayList();
                           mutable_bitField0_ |= 4;
                        }

                        this.dependency_.add(bs);
                        continue;
                     }
                     case 34:
                        if ((mutable_bitField0_ & 32) == 0) {
                           this.messageType_ = new ArrayList();
                           mutable_bitField0_ |= 32;
                        }

                        this.messageType_.add(input.readMessage(DescriptorProtos.DescriptorProto.PARSER, extensionRegistry));
                        continue;
                     case 42:
                        if ((mutable_bitField0_ & 64) == 0) {
                           this.enumType_ = new ArrayList();
                           mutable_bitField0_ |= 64;
                        }

                        this.enumType_.add(input.readMessage(DescriptorProtos.EnumDescriptorProto.PARSER, extensionRegistry));
                        continue;
                     case 50:
                        if ((mutable_bitField0_ & 128) == 0) {
                           this.service_ = new ArrayList();
                           mutable_bitField0_ |= 128;
                        }

                        this.service_.add(input.readMessage(DescriptorProtos.ServiceDescriptorProto.PARSER, extensionRegistry));
                        continue;
                     case 58:
                        if ((mutable_bitField0_ & 256) == 0) {
                           this.extension_ = new ArrayList();
                           mutable_bitField0_ |= 256;
                        }

                        this.extension_.add(input.readMessage(DescriptorProtos.FieldDescriptorProto.PARSER, extensionRegistry));
                        continue;
                     case 66:
                        DescriptorProtos.FileOptions.Builder subBuilder = null;
                        if ((this.bitField0_ & 4) != 0) {
                           subBuilder = this.options_.toBuilder();
                        }

                        this.options_ = input.readMessage(DescriptorProtos.FileOptions.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.options_);
                           this.options_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 4;
                        continue;
                     case 74:
                        DescriptorProtos.SourceCodeInfo.Builder subBuilder = null;
                        if ((this.bitField0_ & 8) != 0) {
                           subBuilder = this.sourceCodeInfo_.toBuilder();
                        }

                        this.sourceCodeInfo_ = input.readMessage(DescriptorProtos.SourceCodeInfo.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.sourceCodeInfo_);
                           this.sourceCodeInfo_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 8;
                        continue;
                     case 80:
                        if ((mutable_bitField0_ & 8) == 0) {
                           this.publicDependency_ = newIntList();
                           mutable_bitField0_ |= 8;
                        }

                        this.publicDependency_.addInt(input.readInt32());
                        continue;
                     case 82:
                        int length = input.readRawVarint32();
                        limit = input.pushLimit(length);
                        if ((mutable_bitField0_ & 8) == 0 && input.getBytesUntilLimit() > 0) {
                           this.publicDependency_ = newIntList();
                           mutable_bitField0_ |= 8;
                        }
                        break;
                     case 88:
                        if ((mutable_bitField0_ & 16) == 0) {
                           this.weakDependency_ = newIntList();
                           mutable_bitField0_ |= 16;
                        }

                        this.weakDependency_.addInt(input.readInt32());
                        continue;
                     case 90:
                        int length = input.readRawVarint32();
                        limit = input.pushLimit(length);
                        if ((mutable_bitField0_ & 16) == 0 && input.getBytesUntilLimit() > 0) {
                           this.weakDependency_ = newIntList();
                           mutable_bitField0_ |= 16;
                        }

                        while(input.getBytesUntilLimit() > 0) {
                           this.weakDependency_.addInt(input.readInt32());
                        }

                        input.popLimit(limit);
                        continue;
                     case 98: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 16;
                        this.syntax_ = bs;
                        continue;
                     }
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                        continue;
                  }

                  while(input.getBytesUntilLimit() > 0) {
                     this.publicDependency_.addInt(input.readInt32());
                  }

                  input.popLimit(limit);
               }
            } catch (InvalidProtocolBufferException var14) {
               throw var14.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var15) {
               throw var15.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var16) {
               throw new InvalidProtocolBufferException(var16).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 4) != 0) {
                  this.dependency_ = this.dependency_.getUnmodifiableView();
               }

               if ((mutable_bitField0_ & 32) != 0) {
                  this.messageType_ = Collections.unmodifiableList(this.messageType_);
               }

               if ((mutable_bitField0_ & 64) != 0) {
                  this.enumType_ = Collections.unmodifiableList(this.enumType_);
               }

               if ((mutable_bitField0_ & 128) != 0) {
                  this.service_ = Collections.unmodifiableList(this.service_);
               }

               if ((mutable_bitField0_ & 256) != 0) {
                  this.extension_ = Collections.unmodifiableList(this.extension_);
               }

               if ((mutable_bitField0_ & 8) != 0) {
                  this.publicDependency_.makeImmutable();
               }

               if ((mutable_bitField0_ & 16) != 0) {
                  this.weakDependency_.makeImmutable();
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.FileDescriptorProto.class, DescriptorProtos.FileDescriptorProto.Builder.class);
      }

      @Override
      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public String getName() {
         Object ref = this.name_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.name_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getNameBytes() {
         Object ref = this.name_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.name_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasPackage() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public String getPackage() {
         Object ref = this.package_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.package_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getPackageBytes() {
         Object ref = this.package_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.package_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public ProtocolStringList getDependencyList() {
         return this.dependency_;
      }

      @Override
      public int getDependencyCount() {
         return this.dependency_.size();
      }

      @Override
      public String getDependency(int index) {
         return (String)this.dependency_.get(index);
      }

      @Override
      public ByteString getDependencyBytes(int index) {
         return this.dependency_.getByteString(index);
      }

      @Override
      public List<Integer> getPublicDependencyList() {
         return this.publicDependency_;
      }

      @Override
      public int getPublicDependencyCount() {
         return this.publicDependency_.size();
      }

      @Override
      public int getPublicDependency(int index) {
         return this.publicDependency_.getInt(index);
      }

      @Override
      public List<Integer> getWeakDependencyList() {
         return this.weakDependency_;
      }

      @Override
      public int getWeakDependencyCount() {
         return this.weakDependency_.size();
      }

      @Override
      public int getWeakDependency(int index) {
         return this.weakDependency_.getInt(index);
      }

      @Override
      public List<DescriptorProtos.DescriptorProto> getMessageTypeList() {
         return this.messageType_;
      }

      @Override
      public List<? extends DescriptorProtos.DescriptorProtoOrBuilder> getMessageTypeOrBuilderList() {
         return this.messageType_;
      }

      @Override
      public int getMessageTypeCount() {
         return this.messageType_.size();
      }

      @Override
      public DescriptorProtos.DescriptorProto getMessageType(int index) {
         return (DescriptorProtos.DescriptorProto)this.messageType_.get(index);
      }

      @Override
      public DescriptorProtos.DescriptorProtoOrBuilder getMessageTypeOrBuilder(int index) {
         return (DescriptorProtos.DescriptorProtoOrBuilder)this.messageType_.get(index);
      }

      @Override
      public List<DescriptorProtos.EnumDescriptorProto> getEnumTypeList() {
         return this.enumType_;
      }

      @Override
      public List<? extends DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList() {
         return this.enumType_;
      }

      @Override
      public int getEnumTypeCount() {
         return this.enumType_.size();
      }

      @Override
      public DescriptorProtos.EnumDescriptorProto getEnumType(int index) {
         return (DescriptorProtos.EnumDescriptorProto)this.enumType_.get(index);
      }

      @Override
      public DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int index) {
         return (DescriptorProtos.EnumDescriptorProtoOrBuilder)this.enumType_.get(index);
      }

      @Override
      public List<DescriptorProtos.ServiceDescriptorProto> getServiceList() {
         return this.service_;
      }

      @Override
      public List<? extends DescriptorProtos.ServiceDescriptorProtoOrBuilder> getServiceOrBuilderList() {
         return this.service_;
      }

      @Override
      public int getServiceCount() {
         return this.service_.size();
      }

      @Override
      public DescriptorProtos.ServiceDescriptorProto getService(int index) {
         return (DescriptorProtos.ServiceDescriptorProto)this.service_.get(index);
      }

      @Override
      public DescriptorProtos.ServiceDescriptorProtoOrBuilder getServiceOrBuilder(int index) {
         return (DescriptorProtos.ServiceDescriptorProtoOrBuilder)this.service_.get(index);
      }

      @Override
      public List<DescriptorProtos.FieldDescriptorProto> getExtensionList() {
         return this.extension_;
      }

      @Override
      public List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList() {
         return this.extension_;
      }

      @Override
      public int getExtensionCount() {
         return this.extension_.size();
      }

      @Override
      public DescriptorProtos.FieldDescriptorProto getExtension(int index) {
         return (DescriptorProtos.FieldDescriptorProto)this.extension_.get(index);
      }

      @Override
      public DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int index) {
         return (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.extension_.get(index);
      }

      @Override
      public boolean hasOptions() {
         return (this.bitField0_ & 4) != 0;
      }

      @Override
      public DescriptorProtos.FileOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.FileOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public DescriptorProtos.FileOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.FileOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public boolean hasSourceCodeInfo() {
         return (this.bitField0_ & 8) != 0;
      }

      @Override
      public DescriptorProtos.SourceCodeInfo getSourceCodeInfo() {
         return this.sourceCodeInfo_ == null ? DescriptorProtos.SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_;
      }

      @Override
      public DescriptorProtos.SourceCodeInfoOrBuilder getSourceCodeInfoOrBuilder() {
         return this.sourceCodeInfo_ == null ? DescriptorProtos.SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_;
      }

      @Override
      public boolean hasSyntax() {
         return (this.bitField0_ & 16) != 0;
      }

      @Override
      public String getSyntax() {
         Object ref = this.syntax_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.syntax_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getSyntaxBytes() {
         Object ref = this.syntax_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.syntax_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getMessageTypeCount(); ++i) {
               if (!this.getMessageType(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(int i = 0; i < this.getEnumTypeCount(); ++i) {
               if (!this.getEnumType(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(int i = 0; i < this.getServiceCount(); ++i) {
               if (!this.getService(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(int i = 0; i < this.getExtensionCount(); ++i) {
               if (!this.getExtension(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (this.hasOptions() && !this.getOptions().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.name_);
         }

         if ((this.bitField0_ & 2) != 0) {
            GeneratedMessageV3.writeString(output, 2, this.package_);
         }

         for(int i = 0; i < this.dependency_.size(); ++i) {
            GeneratedMessageV3.writeString(output, 3, this.dependency_.getRaw(i));
         }

         for(int i = 0; i < this.messageType_.size(); ++i) {
            output.writeMessage(4, (MessageLite)this.messageType_.get(i));
         }

         for(int i = 0; i < this.enumType_.size(); ++i) {
            output.writeMessage(5, (MessageLite)this.enumType_.get(i));
         }

         for(int i = 0; i < this.service_.size(); ++i) {
            output.writeMessage(6, (MessageLite)this.service_.get(i));
         }

         for(int i = 0; i < this.extension_.size(); ++i) {
            output.writeMessage(7, (MessageLite)this.extension_.get(i));
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeMessage(8, this.getOptions());
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeMessage(9, this.getSourceCodeInfo());
         }

         for(int i = 0; i < this.publicDependency_.size(); ++i) {
            output.writeInt32(10, this.publicDependency_.getInt(i));
         }

         for(int i = 0; i < this.weakDependency_.size(); ++i) {
            output.writeInt32(11, this.weakDependency_.getInt(i));
         }

         if ((this.bitField0_ & 16) != 0) {
            GeneratedMessageV3.writeString(output, 12, this.syntax_);
         }

         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += GeneratedMessageV3.computeStringSize(2, this.package_);
            }

            int dataSize = 0;

            for(int i = 0; i < this.dependency_.size(); ++i) {
               dataSize += computeStringSizeNoTag(this.dependency_.getRaw(i));
            }

            size += dataSize;
            size += 1 * this.getDependencyList().size();

            for(int i = 0; i < this.messageType_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(4, (MessageLite)this.messageType_.get(i));
            }

            for(int i = 0; i < this.enumType_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(5, (MessageLite)this.enumType_.get(i));
            }

            for(int i = 0; i < this.service_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(6, (MessageLite)this.service_.get(i));
            }

            for(int i = 0; i < this.extension_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(7, (MessageLite)this.extension_.get(i));
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeMessageSize(8, this.getOptions());
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeMessageSize(9, this.getSourceCodeInfo());
            }

            dataSize = 0;

            for(int i = 0; i < this.publicDependency_.size(); ++i) {
               dataSize += CodedOutputStream.computeInt32SizeNoTag(this.publicDependency_.getInt(i));
            }

            size += dataSize;
            size += 1 * this.getPublicDependencyList().size();
            dataSize = 0;

            for(int i = 0; i < this.weakDependency_.size(); ++i) {
               dataSize += CodedOutputStream.computeInt32SizeNoTag(this.weakDependency_.getInt(i));
            }

            size += dataSize;
            size += 1 * this.getWeakDependencyList().size();
            if ((this.bitField0_ & 16) != 0) {
               size += GeneratedMessageV3.computeStringSize(12, this.syntax_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.FileDescriptorProto)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.FileDescriptorProto other = (DescriptorProtos.FileDescriptorProto)obj;
            if (this.hasName() != other.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(other.getName())) {
               return false;
            } else if (this.hasPackage() != other.hasPackage()) {
               return false;
            } else if (this.hasPackage() && !this.getPackage().equals(other.getPackage())) {
               return false;
            } else if (!this.getDependencyList().equals(other.getDependencyList())) {
               return false;
            } else if (!this.getPublicDependencyList().equals(other.getPublicDependencyList())) {
               return false;
            } else if (!this.getWeakDependencyList().equals(other.getWeakDependencyList())) {
               return false;
            } else if (!this.getMessageTypeList().equals(other.getMessageTypeList())) {
               return false;
            } else if (!this.getEnumTypeList().equals(other.getEnumTypeList())) {
               return false;
            } else if (!this.getServiceList().equals(other.getServiceList())) {
               return false;
            } else if (!this.getExtensionList().equals(other.getExtensionList())) {
               return false;
            } else if (this.hasOptions() != other.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(other.getOptions())) {
               return false;
            } else if (this.hasSourceCodeInfo() != other.hasSourceCodeInfo()) {
               return false;
            } else if (this.hasSourceCodeInfo() && !this.getSourceCodeInfo().equals(other.getSourceCodeInfo())) {
               return false;
            } else if (this.hasSyntax() != other.hasSyntax()) {
               return false;
            } else if (this.hasSyntax() && !this.getSyntax().equals(other.getSyntax())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasName()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getName().hashCode();
            }

            if (this.hasPackage()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getPackage().hashCode();
            }

            if (this.getDependencyCount() > 0) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getDependencyList().hashCode();
            }

            if (this.getPublicDependencyCount() > 0) {
               hash = 37 * hash + 10;
               hash = 53 * hash + this.getPublicDependencyList().hashCode();
            }

            if (this.getWeakDependencyCount() > 0) {
               hash = 37 * hash + 11;
               hash = 53 * hash + this.getWeakDependencyList().hashCode();
            }

            if (this.getMessageTypeCount() > 0) {
               hash = 37 * hash + 4;
               hash = 53 * hash + this.getMessageTypeList().hashCode();
            }

            if (this.getEnumTypeCount() > 0) {
               hash = 37 * hash + 5;
               hash = 53 * hash + this.getEnumTypeList().hashCode();
            }

            if (this.getServiceCount() > 0) {
               hash = 37 * hash + 6;
               hash = 53 * hash + this.getServiceList().hashCode();
            }

            if (this.getExtensionCount() > 0) {
               hash = 37 * hash + 7;
               hash = 53 * hash + this.getExtensionList().hashCode();
            }

            if (this.hasOptions()) {
               hash = 37 * hash + 8;
               hash = 53 * hash + this.getOptions().hashCode();
            }

            if (this.hasSourceCodeInfo()) {
               hash = 37 * hash + 9;
               hash = 53 * hash + this.getSourceCodeInfo().hashCode();
            }

            if (this.hasSyntax()) {
               hash = 37 * hash + 12;
               hash = 53 * hash + this.getSyntax().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.FileDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FileDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.FileDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.FileDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.FileDescriptorProto.Builder newBuilder(DescriptorProtos.FileDescriptorProto prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.FileDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE
            ? new DescriptorProtos.FileDescriptorProto.Builder()
            : new DescriptorProtos.FileDescriptorProto.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.FileDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.FileDescriptorProto.Builder(parent);
      }

      public static DescriptorProtos.FileDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.FileDescriptorProto> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.FileDescriptorProto> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.FileDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.Builder<DescriptorProtos.FileDescriptorProto.Builder>
         implements DescriptorProtos.FileDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_ = "";
         private Object package_ = "";
         private LazyStringList dependency_ = LazyStringArrayList.EMPTY;
         private Internal.IntList publicDependency_ = GeneratedMessageV3.emptyIntList();
         private Internal.IntList weakDependency_ = GeneratedMessageV3.emptyIntList();
         private List<DescriptorProtos.DescriptorProto> messageType_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto, DescriptorProtos.DescriptorProto.Builder, DescriptorProtos.DescriptorProtoOrBuilder> messageTypeBuilder_;
         private List<DescriptorProtos.EnumDescriptorProto> enumType_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.EnumDescriptorProto, DescriptorProtos.EnumDescriptorProto.Builder, DescriptorProtos.EnumDescriptorProtoOrBuilder> enumTypeBuilder_;
         private List<DescriptorProtos.ServiceDescriptorProto> service_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.ServiceDescriptorProto, DescriptorProtos.ServiceDescriptorProto.Builder, DescriptorProtos.ServiceDescriptorProtoOrBuilder> serviceBuilder_;
         private List<DescriptorProtos.FieldDescriptorProto> extension_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.FieldDescriptorProto, DescriptorProtos.FieldDescriptorProto.Builder, DescriptorProtos.FieldDescriptorProtoOrBuilder> extensionBuilder_;
         private DescriptorProtos.FileOptions options_;
         private SingleFieldBuilderV3<DescriptorProtos.FileOptions, DescriptorProtos.FileOptions.Builder, DescriptorProtos.FileOptionsOrBuilder> optionsBuilder_;
         private DescriptorProtos.SourceCodeInfo sourceCodeInfo_;
         private SingleFieldBuilderV3<DescriptorProtos.SourceCodeInfo, DescriptorProtos.SourceCodeInfo.Builder, DescriptorProtos.SourceCodeInfoOrBuilder> sourceCodeInfoBuilder_;
         private Object syntax_ = "";

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.FileDescriptorProto.class, DescriptorProtos.FileDescriptorProto.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getMessageTypeFieldBuilder();
               this.getEnumTypeFieldBuilder();
               this.getServiceFieldBuilder();
               this.getExtensionFieldBuilder();
               this.getOptionsFieldBuilder();
               this.getSourceCodeInfoFieldBuilder();
            }

         }

         public DescriptorProtos.FileDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            this.package_ = "";
            this.bitField0_ &= -3;
            this.dependency_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -5;
            this.publicDependency_ = GeneratedMessageV3.emptyIntList();
            this.bitField0_ &= -9;
            this.weakDependency_ = GeneratedMessageV3.emptyIntList();
            this.bitField0_ &= -17;
            if (this.messageTypeBuilder_ == null) {
               this.messageType_ = Collections.emptyList();
               this.bitField0_ &= -33;
            } else {
               this.messageTypeBuilder_.clear();
            }

            if (this.enumTypeBuilder_ == null) {
               this.enumType_ = Collections.emptyList();
               this.bitField0_ &= -65;
            } else {
               this.enumTypeBuilder_.clear();
            }

            if (this.serviceBuilder_ == null) {
               this.service_ = Collections.emptyList();
               this.bitField0_ &= -129;
            } else {
               this.serviceBuilder_.clear();
            }

            if (this.extensionBuilder_ == null) {
               this.extension_ = Collections.emptyList();
               this.bitField0_ &= -257;
            } else {
               this.extensionBuilder_.clear();
            }

            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -513;
            if (this.sourceCodeInfoBuilder_ == null) {
               this.sourceCodeInfo_ = null;
            } else {
               this.sourceCodeInfoBuilder_.clear();
            }

            this.bitField0_ &= -1025;
            this.syntax_ = "";
            this.bitField0_ &= -2049;
            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_descriptor;
         }

         public DescriptorProtos.FileDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.FileDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.FileDescriptorProto build() {
            DescriptorProtos.FileDescriptorProto result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.FileDescriptorProto buildPartial() {
            DescriptorProtos.FileDescriptorProto result = new DescriptorProtos.FileDescriptorProto(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.name_ = this.name_;
            if ((from_bitField0_ & 2) != 0) {
               to_bitField0_ |= 2;
            }

            result.package_ = this.package_;
            if ((this.bitField0_ & 4) != 0) {
               this.dependency_ = this.dependency_.getUnmodifiableView();
               this.bitField0_ &= -5;
            }

            result.dependency_ = this.dependency_;
            if ((this.bitField0_ & 8) != 0) {
               this.publicDependency_.makeImmutable();
               this.bitField0_ &= -9;
            }

            result.publicDependency_ = this.publicDependency_;
            if ((this.bitField0_ & 16) != 0) {
               this.weakDependency_.makeImmutable();
               this.bitField0_ &= -17;
            }

            result.weakDependency_ = this.weakDependency_;
            if (this.messageTypeBuilder_ == null) {
               if ((this.bitField0_ & 32) != 0) {
                  this.messageType_ = Collections.unmodifiableList(this.messageType_);
                  this.bitField0_ &= -33;
               }

               result.messageType_ = this.messageType_;
            } else {
               result.messageType_ = this.messageTypeBuilder_.build();
            }

            if (this.enumTypeBuilder_ == null) {
               if ((this.bitField0_ & 64) != 0) {
                  this.enumType_ = Collections.unmodifiableList(this.enumType_);
                  this.bitField0_ &= -65;
               }

               result.enumType_ = this.enumType_;
            } else {
               result.enumType_ = this.enumTypeBuilder_.build();
            }

            if (this.serviceBuilder_ == null) {
               if ((this.bitField0_ & 128) != 0) {
                  this.service_ = Collections.unmodifiableList(this.service_);
                  this.bitField0_ &= -129;
               }

               result.service_ = this.service_;
            } else {
               result.service_ = this.serviceBuilder_.build();
            }

            if (this.extensionBuilder_ == null) {
               if ((this.bitField0_ & 256) != 0) {
                  this.extension_ = Collections.unmodifiableList(this.extension_);
                  this.bitField0_ &= -257;
               }

               result.extension_ = this.extension_;
            } else {
               result.extension_ = this.extensionBuilder_.build();
            }

            if ((from_bitField0_ & 512) != 0) {
               if (this.optionsBuilder_ == null) {
                  result.options_ = this.options_;
               } else {
                  result.options_ = this.optionsBuilder_.build();
               }

               to_bitField0_ |= 4;
            }

            if ((from_bitField0_ & 1024) != 0) {
               if (this.sourceCodeInfoBuilder_ == null) {
                  result.sourceCodeInfo_ = this.sourceCodeInfo_;
               } else {
                  result.sourceCodeInfo_ = this.sourceCodeInfoBuilder_.build();
               }

               to_bitField0_ |= 8;
            }

            if ((from_bitField0_ & 2048) != 0) {
               to_bitField0_ |= 16;
            }

            result.syntax_ = this.syntax_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clone() {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.FileDescriptorProto.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.setField(field, value);
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.clearField(field);
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.FileDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.addRepeatedField(field, value);
         }

         public DescriptorProtos.FileDescriptorProto.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.FileDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.FileDescriptorProto)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder mergeFrom(DescriptorProtos.FileDescriptorProto other) {
            if (other == DescriptorProtos.FileDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = other.name_;
                  this.onChanged();
               }

               if (other.hasPackage()) {
                  this.bitField0_ |= 2;
                  this.package_ = other.package_;
                  this.onChanged();
               }

               if (!other.dependency_.isEmpty()) {
                  if (this.dependency_.isEmpty()) {
                     this.dependency_ = other.dependency_;
                     this.bitField0_ &= -5;
                  } else {
                     this.ensureDependencyIsMutable();
                     this.dependency_.addAll(other.dependency_);
                  }

                  this.onChanged();
               }

               if (!other.publicDependency_.isEmpty()) {
                  if (this.publicDependency_.isEmpty()) {
                     this.publicDependency_ = other.publicDependency_;
                     this.bitField0_ &= -9;
                  } else {
                     this.ensurePublicDependencyIsMutable();
                     this.publicDependency_.addAll(other.publicDependency_);
                  }

                  this.onChanged();
               }

               if (!other.weakDependency_.isEmpty()) {
                  if (this.weakDependency_.isEmpty()) {
                     this.weakDependency_ = other.weakDependency_;
                     this.bitField0_ &= -17;
                  } else {
                     this.ensureWeakDependencyIsMutable();
                     this.weakDependency_.addAll(other.weakDependency_);
                  }

                  this.onChanged();
               }

               if (this.messageTypeBuilder_ == null) {
                  if (!other.messageType_.isEmpty()) {
                     if (this.messageType_.isEmpty()) {
                        this.messageType_ = other.messageType_;
                        this.bitField0_ &= -33;
                     } else {
                        this.ensureMessageTypeIsMutable();
                        this.messageType_.addAll(other.messageType_);
                     }

                     this.onChanged();
                  }
               } else if (!other.messageType_.isEmpty()) {
                  if (this.messageTypeBuilder_.isEmpty()) {
                     this.messageTypeBuilder_.dispose();
                     this.messageTypeBuilder_ = null;
                     this.messageType_ = other.messageType_;
                     this.bitField0_ &= -33;
                     this.messageTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getMessageTypeFieldBuilder() : null;
                  } else {
                     this.messageTypeBuilder_.addAllMessages(other.messageType_);
                  }
               }

               if (this.enumTypeBuilder_ == null) {
                  if (!other.enumType_.isEmpty()) {
                     if (this.enumType_.isEmpty()) {
                        this.enumType_ = other.enumType_;
                        this.bitField0_ &= -65;
                     } else {
                        this.ensureEnumTypeIsMutable();
                        this.enumType_.addAll(other.enumType_);
                     }

                     this.onChanged();
                  }
               } else if (!other.enumType_.isEmpty()) {
                  if (this.enumTypeBuilder_.isEmpty()) {
                     this.enumTypeBuilder_.dispose();
                     this.enumTypeBuilder_ = null;
                     this.enumType_ = other.enumType_;
                     this.bitField0_ &= -65;
                     this.enumTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getEnumTypeFieldBuilder() : null;
                  } else {
                     this.enumTypeBuilder_.addAllMessages(other.enumType_);
                  }
               }

               if (this.serviceBuilder_ == null) {
                  if (!other.service_.isEmpty()) {
                     if (this.service_.isEmpty()) {
                        this.service_ = other.service_;
                        this.bitField0_ &= -129;
                     } else {
                        this.ensureServiceIsMutable();
                        this.service_.addAll(other.service_);
                     }

                     this.onChanged();
                  }
               } else if (!other.service_.isEmpty()) {
                  if (this.serviceBuilder_.isEmpty()) {
                     this.serviceBuilder_.dispose();
                     this.serviceBuilder_ = null;
                     this.service_ = other.service_;
                     this.bitField0_ &= -129;
                     this.serviceBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getServiceFieldBuilder() : null;
                  } else {
                     this.serviceBuilder_.addAllMessages(other.service_);
                  }
               }

               if (this.extensionBuilder_ == null) {
                  if (!other.extension_.isEmpty()) {
                     if (this.extension_.isEmpty()) {
                        this.extension_ = other.extension_;
                        this.bitField0_ &= -257;
                     } else {
                        this.ensureExtensionIsMutable();
                        this.extension_.addAll(other.extension_);
                     }

                     this.onChanged();
                  }
               } else if (!other.extension_.isEmpty()) {
                  if (this.extensionBuilder_.isEmpty()) {
                     this.extensionBuilder_.dispose();
                     this.extensionBuilder_ = null;
                     this.extension_ = other.extension_;
                     this.bitField0_ &= -257;
                     this.extensionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getExtensionFieldBuilder() : null;
                  } else {
                     this.extensionBuilder_.addAllMessages(other.extension_);
                  }
               }

               if (other.hasOptions()) {
                  this.mergeOptions(other.getOptions());
               }

               if (other.hasSourceCodeInfo()) {
                  this.mergeSourceCodeInfo(other.getSourceCodeInfo());
               }

               if (other.hasSyntax()) {
                  this.bitField0_ |= 2048;
                  this.syntax_ = other.syntax_;
                  this.onChanged();
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getMessageTypeCount(); ++i) {
               if (!this.getMessageType(i).isInitialized()) {
                  return false;
               }
            }

            for(int i = 0; i < this.getEnumTypeCount(); ++i) {
               if (!this.getEnumType(i).isInitialized()) {
                  return false;
               }
            }

            for(int i = 0; i < this.getServiceCount(); ++i) {
               if (!this.getService(i).isInitialized()) {
                  return false;
               }
            }

            for(int i = 0; i < this.getExtensionCount(); ++i) {
               if (!this.getExtension(i).isInitialized()) {
                  return false;
               }
            }

            return !this.hasOptions() || this.getOptions().isInitialized();
         }

         public DescriptorProtos.FileDescriptorProto.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.FileDescriptorProto parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.FileDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.FileDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public String getName() {
            Object ref = this.name_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.name_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.name_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder setName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.FileDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasPackage() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public String getPackage() {
            Object ref = this.package_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.package_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getPackageBytes() {
            Object ref = this.package_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.package_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder setPackage(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.package_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearPackage() {
            this.bitField0_ &= -3;
            this.package_ = DescriptorProtos.FileDescriptorProto.getDefaultInstance().getPackage();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setPackageBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.package_ = value;
               this.onChanged();
               return this;
            }
         }

         private void ensureDependencyIsMutable() {
            if ((this.bitField0_ & 4) == 0) {
               this.dependency_ = new LazyStringArrayList(this.dependency_);
               this.bitField0_ |= 4;
            }

         }

         public ProtocolStringList getDependencyList() {
            return this.dependency_.getUnmodifiableView();
         }

         @Override
         public int getDependencyCount() {
            return this.dependency_.size();
         }

         @Override
         public String getDependency(int index) {
            return (String)this.dependency_.get(index);
         }

         @Override
         public ByteString getDependencyBytes(int index) {
            return this.dependency_.getByteString(index);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setDependency(int index, String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureDependencyIsMutable();
               this.dependency_.set(index, value);
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder addDependency(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureDependencyIsMutable();
               this.dependency_.add(value);
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllDependency(Iterable<String> values) {
            this.ensureDependencyIsMutable();
            AbstractMessageLite.Builder.addAll(values, this.dependency_);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearDependency() {
            this.dependency_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -5;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addDependencyBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureDependencyIsMutable();
               this.dependency_.add(value);
               this.onChanged();
               return this;
            }
         }

         private void ensurePublicDependencyIsMutable() {
            if ((this.bitField0_ & 8) == 0) {
               this.publicDependency_ = GeneratedMessageV3.mutableCopy(this.publicDependency_);
               this.bitField0_ |= 8;
            }

         }

         @Override
         public List<Integer> getPublicDependencyList() {
            return (List<Integer>)((this.bitField0_ & 8) != 0 ? Collections.unmodifiableList(this.publicDependency_) : this.publicDependency_);
         }

         @Override
         public int getPublicDependencyCount() {
            return this.publicDependency_.size();
         }

         @Override
         public int getPublicDependency(int index) {
            return this.publicDependency_.getInt(index);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setPublicDependency(int index, int value) {
            this.ensurePublicDependencyIsMutable();
            this.publicDependency_.setInt(index, value);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addPublicDependency(int value) {
            this.ensurePublicDependencyIsMutable();
            this.publicDependency_.addInt(value);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllPublicDependency(Iterable<? extends Integer> values) {
            this.ensurePublicDependencyIsMutable();
            AbstractMessageLite.Builder.addAll(values, this.publicDependency_);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearPublicDependency() {
            this.publicDependency_ = GeneratedMessageV3.emptyIntList();
            this.bitField0_ &= -9;
            this.onChanged();
            return this;
         }

         private void ensureWeakDependencyIsMutable() {
            if ((this.bitField0_ & 16) == 0) {
               this.weakDependency_ = GeneratedMessageV3.mutableCopy(this.weakDependency_);
               this.bitField0_ |= 16;
            }

         }

         @Override
         public List<Integer> getWeakDependencyList() {
            return (List<Integer>)((this.bitField0_ & 16) != 0 ? Collections.unmodifiableList(this.weakDependency_) : this.weakDependency_);
         }

         @Override
         public int getWeakDependencyCount() {
            return this.weakDependency_.size();
         }

         @Override
         public int getWeakDependency(int index) {
            return this.weakDependency_.getInt(index);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setWeakDependency(int index, int value) {
            this.ensureWeakDependencyIsMutable();
            this.weakDependency_.setInt(index, value);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addWeakDependency(int value) {
            this.ensureWeakDependencyIsMutable();
            this.weakDependency_.addInt(value);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllWeakDependency(Iterable<? extends Integer> values) {
            this.ensureWeakDependencyIsMutable();
            AbstractMessageLite.Builder.addAll(values, this.weakDependency_);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearWeakDependency() {
            this.weakDependency_ = GeneratedMessageV3.emptyIntList();
            this.bitField0_ &= -17;
            this.onChanged();
            return this;
         }

         private void ensureMessageTypeIsMutable() {
            if ((this.bitField0_ & 32) == 0) {
               this.messageType_ = new ArrayList(this.messageType_);
               this.bitField0_ |= 32;
            }

         }

         @Override
         public List<DescriptorProtos.DescriptorProto> getMessageTypeList() {
            return this.messageTypeBuilder_ == null ? Collections.unmodifiableList(this.messageType_) : this.messageTypeBuilder_.getMessageList();
         }

         @Override
         public int getMessageTypeCount() {
            return this.messageTypeBuilder_ == null ? this.messageType_.size() : this.messageTypeBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.DescriptorProto getMessageType(int index) {
            return this.messageTypeBuilder_ == null
               ? (DescriptorProtos.DescriptorProto)this.messageType_.get(index)
               : this.messageTypeBuilder_.getMessage(index);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setMessageType(int index, DescriptorProtos.DescriptorProto value) {
            if (this.messageTypeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureMessageTypeIsMutable();
               this.messageType_.set(index, value);
               this.onChanged();
            } else {
               this.messageTypeBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setMessageType(int index, DescriptorProtos.DescriptorProto.Builder builderForValue) {
            if (this.messageTypeBuilder_ == null) {
               this.ensureMessageTypeIsMutable();
               this.messageType_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.messageTypeBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addMessageType(DescriptorProtos.DescriptorProto value) {
            if (this.messageTypeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureMessageTypeIsMutable();
               this.messageType_.add(value);
               this.onChanged();
            } else {
               this.messageTypeBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addMessageType(int index, DescriptorProtos.DescriptorProto value) {
            if (this.messageTypeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureMessageTypeIsMutable();
               this.messageType_.add(index, value);
               this.onChanged();
            } else {
               this.messageTypeBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addMessageType(DescriptorProtos.DescriptorProto.Builder builderForValue) {
            if (this.messageTypeBuilder_ == null) {
               this.ensureMessageTypeIsMutable();
               this.messageType_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.messageTypeBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addMessageType(int index, DescriptorProtos.DescriptorProto.Builder builderForValue) {
            if (this.messageTypeBuilder_ == null) {
               this.ensureMessageTypeIsMutable();
               this.messageType_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.messageTypeBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllMessageType(Iterable<? extends DescriptorProtos.DescriptorProto> values) {
            if (this.messageTypeBuilder_ == null) {
               this.ensureMessageTypeIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.messageType_);
               this.onChanged();
            } else {
               this.messageTypeBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearMessageType() {
            if (this.messageTypeBuilder_ == null) {
               this.messageType_ = Collections.emptyList();
               this.bitField0_ &= -33;
               this.onChanged();
            } else {
               this.messageTypeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder removeMessageType(int index) {
            if (this.messageTypeBuilder_ == null) {
               this.ensureMessageTypeIsMutable();
               this.messageType_.remove(index);
               this.onChanged();
            } else {
               this.messageTypeBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder getMessageTypeBuilder(int index) {
            return this.getMessageTypeFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.DescriptorProtoOrBuilder getMessageTypeOrBuilder(int index) {
            return this.messageTypeBuilder_ == null
               ? (DescriptorProtos.DescriptorProtoOrBuilder)this.messageType_.get(index)
               : this.messageTypeBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.DescriptorProtoOrBuilder> getMessageTypeOrBuilderList() {
            return this.messageTypeBuilder_ != null ? this.messageTypeBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.messageType_);
         }

         public DescriptorProtos.DescriptorProto.Builder addMessageTypeBuilder() {
            return this.getMessageTypeFieldBuilder().addBuilder(DescriptorProtos.DescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.DescriptorProto.Builder addMessageTypeBuilder(int index) {
            return this.getMessageTypeFieldBuilder().addBuilder(index, DescriptorProtos.DescriptorProto.getDefaultInstance());
         }

         public List<DescriptorProtos.DescriptorProto.Builder> getMessageTypeBuilderList() {
            return this.getMessageTypeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto, DescriptorProtos.DescriptorProto.Builder, DescriptorProtos.DescriptorProtoOrBuilder> getMessageTypeFieldBuilder() {
            if (this.messageTypeBuilder_ == null) {
               this.messageTypeBuilder_ = new RepeatedFieldBuilderV3<>(
                  this.messageType_, (this.bitField0_ & 32) != 0, this.getParentForChildren(), this.isClean()
               );
               this.messageType_ = null;
            }

            return this.messageTypeBuilder_;
         }

         private void ensureEnumTypeIsMutable() {
            if ((this.bitField0_ & 64) == 0) {
               this.enumType_ = new ArrayList(this.enumType_);
               this.bitField0_ |= 64;
            }

         }

         @Override
         public List<DescriptorProtos.EnumDescriptorProto> getEnumTypeList() {
            return this.enumTypeBuilder_ == null ? Collections.unmodifiableList(this.enumType_) : this.enumTypeBuilder_.getMessageList();
         }

         @Override
         public int getEnumTypeCount() {
            return this.enumTypeBuilder_ == null ? this.enumType_.size() : this.enumTypeBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.EnumDescriptorProto getEnumType(int index) {
            return this.enumTypeBuilder_ == null ? (DescriptorProtos.EnumDescriptorProto)this.enumType_.get(index) : this.enumTypeBuilder_.getMessage(index);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setEnumType(int index, DescriptorProtos.EnumDescriptorProto value) {
            if (this.enumTypeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEnumTypeIsMutable();
               this.enumType_.set(index, value);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setEnumType(int index, DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.enumTypeBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addEnumType(DescriptorProtos.EnumDescriptorProto value) {
            if (this.enumTypeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEnumTypeIsMutable();
               this.enumType_.add(value);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addEnumType(int index, DescriptorProtos.EnumDescriptorProto value) {
            if (this.enumTypeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEnumTypeIsMutable();
               this.enumType_.add(index, value);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addEnumType(DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addEnumType(int index, DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllEnumType(Iterable<? extends DescriptorProtos.EnumDescriptorProto> values) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.enumType_);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearEnumType() {
            if (this.enumTypeBuilder_ == null) {
               this.enumType_ = Collections.emptyList();
               this.bitField0_ &= -65;
               this.onChanged();
            } else {
               this.enumTypeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder removeEnumType(int index) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.remove(index);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder getEnumTypeBuilder(int index) {
            return this.getEnumTypeFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int index) {
            return this.enumTypeBuilder_ == null
               ? (DescriptorProtos.EnumDescriptorProtoOrBuilder)this.enumType_.get(index)
               : this.enumTypeBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList() {
            return this.enumTypeBuilder_ != null ? this.enumTypeBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.enumType_);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addEnumTypeBuilder() {
            return this.getEnumTypeFieldBuilder().addBuilder(DescriptorProtos.EnumDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addEnumTypeBuilder(int index) {
            return this.getEnumTypeFieldBuilder().addBuilder(index, DescriptorProtos.EnumDescriptorProto.getDefaultInstance());
         }

         public List<DescriptorProtos.EnumDescriptorProto.Builder> getEnumTypeBuilderList() {
            return this.getEnumTypeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.EnumDescriptorProto, DescriptorProtos.EnumDescriptorProto.Builder, DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeFieldBuilder() {
            if (this.enumTypeBuilder_ == null) {
               this.enumTypeBuilder_ = new RepeatedFieldBuilderV3<>(this.enumType_, (this.bitField0_ & 64) != 0, this.getParentForChildren(), this.isClean());
               this.enumType_ = null;
            }

            return this.enumTypeBuilder_;
         }

         private void ensureServiceIsMutable() {
            if ((this.bitField0_ & 128) == 0) {
               this.service_ = new ArrayList(this.service_);
               this.bitField0_ |= 128;
            }

         }

         @Override
         public List<DescriptorProtos.ServiceDescriptorProto> getServiceList() {
            return this.serviceBuilder_ == null ? Collections.unmodifiableList(this.service_) : this.serviceBuilder_.getMessageList();
         }

         @Override
         public int getServiceCount() {
            return this.serviceBuilder_ == null ? this.service_.size() : this.serviceBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.ServiceDescriptorProto getService(int index) {
            return this.serviceBuilder_ == null ? (DescriptorProtos.ServiceDescriptorProto)this.service_.get(index) : this.serviceBuilder_.getMessage(index);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setService(int index, DescriptorProtos.ServiceDescriptorProto value) {
            if (this.serviceBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureServiceIsMutable();
               this.service_.set(index, value);
               this.onChanged();
            } else {
               this.serviceBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setService(int index, DescriptorProtos.ServiceDescriptorProto.Builder builderForValue) {
            if (this.serviceBuilder_ == null) {
               this.ensureServiceIsMutable();
               this.service_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.serviceBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addService(DescriptorProtos.ServiceDescriptorProto value) {
            if (this.serviceBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureServiceIsMutable();
               this.service_.add(value);
               this.onChanged();
            } else {
               this.serviceBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addService(int index, DescriptorProtos.ServiceDescriptorProto value) {
            if (this.serviceBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureServiceIsMutable();
               this.service_.add(index, value);
               this.onChanged();
            } else {
               this.serviceBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addService(DescriptorProtos.ServiceDescriptorProto.Builder builderForValue) {
            if (this.serviceBuilder_ == null) {
               this.ensureServiceIsMutable();
               this.service_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.serviceBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addService(int index, DescriptorProtos.ServiceDescriptorProto.Builder builderForValue) {
            if (this.serviceBuilder_ == null) {
               this.ensureServiceIsMutable();
               this.service_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.serviceBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllService(Iterable<? extends DescriptorProtos.ServiceDescriptorProto> values) {
            if (this.serviceBuilder_ == null) {
               this.ensureServiceIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.service_);
               this.onChanged();
            } else {
               this.serviceBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearService() {
            if (this.serviceBuilder_ == null) {
               this.service_ = Collections.emptyList();
               this.bitField0_ &= -129;
               this.onChanged();
            } else {
               this.serviceBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder removeService(int index) {
            if (this.serviceBuilder_ == null) {
               this.ensureServiceIsMutable();
               this.service_.remove(index);
               this.onChanged();
            } else {
               this.serviceBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder getServiceBuilder(int index) {
            return this.getServiceFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.ServiceDescriptorProtoOrBuilder getServiceOrBuilder(int index) {
            return this.serviceBuilder_ == null
               ? (DescriptorProtos.ServiceDescriptorProtoOrBuilder)this.service_.get(index)
               : this.serviceBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.ServiceDescriptorProtoOrBuilder> getServiceOrBuilderList() {
            return this.serviceBuilder_ != null ? this.serviceBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.service_);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addServiceBuilder() {
            return this.getServiceFieldBuilder().addBuilder(DescriptorProtos.ServiceDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addServiceBuilder(int index) {
            return this.getServiceFieldBuilder().addBuilder(index, DescriptorProtos.ServiceDescriptorProto.getDefaultInstance());
         }

         public List<DescriptorProtos.ServiceDescriptorProto.Builder> getServiceBuilderList() {
            return this.getServiceFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.ServiceDescriptorProto, DescriptorProtos.ServiceDescriptorProto.Builder, DescriptorProtos.ServiceDescriptorProtoOrBuilder> getServiceFieldBuilder() {
            if (this.serviceBuilder_ == null) {
               this.serviceBuilder_ = new RepeatedFieldBuilderV3<>(this.service_, (this.bitField0_ & 128) != 0, this.getParentForChildren(), this.isClean());
               this.service_ = null;
            }

            return this.serviceBuilder_;
         }

         private void ensureExtensionIsMutable() {
            if ((this.bitField0_ & 256) == 0) {
               this.extension_ = new ArrayList(this.extension_);
               this.bitField0_ |= 256;
            }

         }

         @Override
         public List<DescriptorProtos.FieldDescriptorProto> getExtensionList() {
            return this.extensionBuilder_ == null ? Collections.unmodifiableList(this.extension_) : this.extensionBuilder_.getMessageList();
         }

         @Override
         public int getExtensionCount() {
            return this.extensionBuilder_ == null ? this.extension_.size() : this.extensionBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.FieldDescriptorProto getExtension(int index) {
            return this.extensionBuilder_ == null
               ? (DescriptorProtos.FieldDescriptorProto)this.extension_.get(index)
               : this.extensionBuilder_.getMessage(index);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setExtension(int index, DescriptorProtos.FieldDescriptorProto value) {
            if (this.extensionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionIsMutable();
               this.extension_.set(index, value);
               this.onChanged();
            } else {
               this.extensionBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setExtension(int index, DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.extensionBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addExtension(DescriptorProtos.FieldDescriptorProto value) {
            if (this.extensionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionIsMutable();
               this.extension_.add(value);
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addExtension(int index, DescriptorProtos.FieldDescriptorProto value) {
            if (this.extensionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionIsMutable();
               this.extension_.add(index, value);
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addExtension(DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addExtension(int index, DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllExtension(Iterable<? extends DescriptorProtos.FieldDescriptorProto> values) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.extension_);
               this.onChanged();
            } else {
               this.extensionBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearExtension() {
            if (this.extensionBuilder_ == null) {
               this.extension_ = Collections.emptyList();
               this.bitField0_ &= -257;
               this.onChanged();
            } else {
               this.extensionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder removeExtension(int index) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.remove(index);
               this.onChanged();
            } else {
               this.extensionBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder getExtensionBuilder(int index) {
            return this.getExtensionFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int index) {
            return this.extensionBuilder_ == null
               ? (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.extension_.get(index)
               : this.extensionBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList() {
            return this.extensionBuilder_ != null ? this.extensionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.extension_);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addExtensionBuilder() {
            return this.getExtensionFieldBuilder().addBuilder(DescriptorProtos.FieldDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addExtensionBuilder(int index) {
            return this.getExtensionFieldBuilder().addBuilder(index, DescriptorProtos.FieldDescriptorProto.getDefaultInstance());
         }

         public List<DescriptorProtos.FieldDescriptorProto.Builder> getExtensionBuilderList() {
            return this.getExtensionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.FieldDescriptorProto, DescriptorProtos.FieldDescriptorProto.Builder, DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionFieldBuilder() {
            if (this.extensionBuilder_ == null) {
               this.extensionBuilder_ = new RepeatedFieldBuilderV3<>(this.extension_, (this.bitField0_ & 256) != 0, this.getParentForChildren(), this.isClean());
               this.extension_ = null;
            }

            return this.extensionBuilder_;
         }

         @Override
         public boolean hasOptions() {
            return (this.bitField0_ & 512) != 0;
         }

         @Override
         public DescriptorProtos.FileOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.FileOptions.getDefaultInstance() : this.options_;
            } else {
               return this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder setOptions(DescriptorProtos.FileOptions value) {
            if (this.optionsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.options_ = value;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setOptions(DescriptorProtos.FileOptions.Builder builderForValue) {
            if (this.optionsBuilder_ == null) {
               this.options_ = builderForValue.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 512;
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder mergeOptions(DescriptorProtos.FileOptions value) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 512) != 0 && this.options_ != null && this.options_ != DescriptorProtos.FileOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.FileOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
               } else {
                  this.options_ = value;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -513;
            return this;
         }

         public DescriptorProtos.FileOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 512;
            this.onChanged();
            return this.getOptionsFieldBuilder().getBuilder();
         }

         @Override
         public DescriptorProtos.FileOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.FileOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3<DescriptorProtos.FileOptions, DescriptorProtos.FileOptions.Builder, DescriptorProtos.FileOptionsOrBuilder> getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3<>(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         @Override
         public boolean hasSourceCodeInfo() {
            return (this.bitField0_ & 1024) != 0;
         }

         @Override
         public DescriptorProtos.SourceCodeInfo getSourceCodeInfo() {
            if (this.sourceCodeInfoBuilder_ == null) {
               return this.sourceCodeInfo_ == null ? DescriptorProtos.SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_;
            } else {
               return this.sourceCodeInfoBuilder_.getMessage();
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder setSourceCodeInfo(DescriptorProtos.SourceCodeInfo value) {
            if (this.sourceCodeInfoBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.sourceCodeInfo_ = value;
               this.onChanged();
            } else {
               this.sourceCodeInfoBuilder_.setMessage(value);
            }

            this.bitField0_ |= 1024;
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setSourceCodeInfo(DescriptorProtos.SourceCodeInfo.Builder builderForValue) {
            if (this.sourceCodeInfoBuilder_ == null) {
               this.sourceCodeInfo_ = builderForValue.build();
               this.onChanged();
            } else {
               this.sourceCodeInfoBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 1024;
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder mergeSourceCodeInfo(DescriptorProtos.SourceCodeInfo value) {
            if (this.sourceCodeInfoBuilder_ == null) {
               if ((this.bitField0_ & 1024) != 0
                  && this.sourceCodeInfo_ != null
                  && this.sourceCodeInfo_ != DescriptorProtos.SourceCodeInfo.getDefaultInstance()) {
                  this.sourceCodeInfo_ = DescriptorProtos.SourceCodeInfo.newBuilder(this.sourceCodeInfo_).mergeFrom(value).buildPartial();
               } else {
                  this.sourceCodeInfo_ = value;
               }

               this.onChanged();
            } else {
               this.sourceCodeInfoBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 1024;
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearSourceCodeInfo() {
            if (this.sourceCodeInfoBuilder_ == null) {
               this.sourceCodeInfo_ = null;
               this.onChanged();
            } else {
               this.sourceCodeInfoBuilder_.clear();
            }

            this.bitField0_ &= -1025;
            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder getSourceCodeInfoBuilder() {
            this.bitField0_ |= 1024;
            this.onChanged();
            return this.getSourceCodeInfoFieldBuilder().getBuilder();
         }

         @Override
         public DescriptorProtos.SourceCodeInfoOrBuilder getSourceCodeInfoOrBuilder() {
            if (this.sourceCodeInfoBuilder_ != null) {
               return this.sourceCodeInfoBuilder_.getMessageOrBuilder();
            } else {
               return this.sourceCodeInfo_ == null ? DescriptorProtos.SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_;
            }
         }

         private SingleFieldBuilderV3<DescriptorProtos.SourceCodeInfo, DescriptorProtos.SourceCodeInfo.Builder, DescriptorProtos.SourceCodeInfoOrBuilder> getSourceCodeInfoFieldBuilder() {
            if (this.sourceCodeInfoBuilder_ == null) {
               this.sourceCodeInfoBuilder_ = new SingleFieldBuilderV3<>(this.getSourceCodeInfo(), this.getParentForChildren(), this.isClean());
               this.sourceCodeInfo_ = null;
            }

            return this.sourceCodeInfoBuilder_;
         }

         @Override
         public boolean hasSyntax() {
            return (this.bitField0_ & 2048) != 0;
         }

         @Override
         public String getSyntax() {
            Object ref = this.syntax_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.syntax_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getSyntaxBytes() {
            Object ref = this.syntax_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.syntax_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder setSyntax(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2048;
               this.syntax_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearSyntax() {
            this.bitField0_ &= -2049;
            this.syntax_ = DescriptorProtos.FileDescriptorProto.getDefaultInstance().getSyntax();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setSyntaxBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2048;
               this.syntax_ = value;
               this.onChanged();
               return this;
            }
         }

         public final DescriptorProtos.FileDescriptorProto.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.FileDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface FileDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      boolean hasPackage();

      String getPackage();

      ByteString getPackageBytes();

      List<String> getDependencyList();

      int getDependencyCount();

      String getDependency(int var1);

      ByteString getDependencyBytes(int var1);

      List<Integer> getPublicDependencyList();

      int getPublicDependencyCount();

      int getPublicDependency(int var1);

      List<Integer> getWeakDependencyList();

      int getWeakDependencyCount();

      int getWeakDependency(int var1);

      List<DescriptorProtos.DescriptorProto> getMessageTypeList();

      DescriptorProtos.DescriptorProto getMessageType(int var1);

      int getMessageTypeCount();

      List<? extends DescriptorProtos.DescriptorProtoOrBuilder> getMessageTypeOrBuilderList();

      DescriptorProtos.DescriptorProtoOrBuilder getMessageTypeOrBuilder(int var1);

      List<DescriptorProtos.EnumDescriptorProto> getEnumTypeList();

      DescriptorProtos.EnumDescriptorProto getEnumType(int var1);

      int getEnumTypeCount();

      List<? extends DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList();

      DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int var1);

      List<DescriptorProtos.ServiceDescriptorProto> getServiceList();

      DescriptorProtos.ServiceDescriptorProto getService(int var1);

      int getServiceCount();

      List<? extends DescriptorProtos.ServiceDescriptorProtoOrBuilder> getServiceOrBuilderList();

      DescriptorProtos.ServiceDescriptorProtoOrBuilder getServiceOrBuilder(int var1);

      List<DescriptorProtos.FieldDescriptorProto> getExtensionList();

      DescriptorProtos.FieldDescriptorProto getExtension(int var1);

      int getExtensionCount();

      List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList();

      DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int var1);

      boolean hasOptions();

      DescriptorProtos.FileOptions getOptions();

      DescriptorProtos.FileOptionsOrBuilder getOptionsOrBuilder();

      boolean hasSourceCodeInfo();

      DescriptorProtos.SourceCodeInfo getSourceCodeInfo();

      DescriptorProtos.SourceCodeInfoOrBuilder getSourceCodeInfoOrBuilder();

      boolean hasSyntax();

      String getSyntax();

      ByteString getSyntaxBytes();
   }

   public static final class FileDescriptorSet extends GeneratedMessageV3 implements DescriptorProtos.FileDescriptorSetOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int FILE_FIELD_NUMBER = 1;
      private List<DescriptorProtos.FileDescriptorProto> file_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.FileDescriptorSet DEFAULT_INSTANCE = new DescriptorProtos.FileDescriptorSet();
      @Deprecated
      public static final Parser<DescriptorProtos.FileDescriptorSet> PARSER = new AbstractParser<DescriptorProtos.FileDescriptorSet>() {
         public DescriptorProtos.FileDescriptorSet parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.FileDescriptorSet(input, extensionRegistry);
         }
      };

      private FileDescriptorSet(GeneratedMessageV3.Builder<?> builder) {
         super(builder);
      }

      private FileDescriptorSet() {
         this.file_ = Collections.emptyList();
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.FileDescriptorSet();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private FileDescriptorSet(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.file_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.file_.add(input.readMessage(DescriptorProtos.FileDescriptorProto.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var13) {
               throw var13.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw new InvalidProtocolBufferException(var14).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.file_ = Collections.unmodifiableList(this.file_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.FileDescriptorSet.class, DescriptorProtos.FileDescriptorSet.Builder.class);
      }

      @Override
      public List<DescriptorProtos.FileDescriptorProto> getFileList() {
         return this.file_;
      }

      @Override
      public List<? extends DescriptorProtos.FileDescriptorProtoOrBuilder> getFileOrBuilderList() {
         return this.file_;
      }

      @Override
      public int getFileCount() {
         return this.file_.size();
      }

      @Override
      public DescriptorProtos.FileDescriptorProto getFile(int index) {
         return (DescriptorProtos.FileDescriptorProto)this.file_.get(index);
      }

      @Override
      public DescriptorProtos.FileDescriptorProtoOrBuilder getFileOrBuilder(int index) {
         return (DescriptorProtos.FileDescriptorProtoOrBuilder)this.file_.get(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getFileCount(); ++i) {
               if (!this.getFile(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         for(int i = 0; i < this.file_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.file_.get(i));
         }

         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.file_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.file_.get(i));
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.FileDescriptorSet)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.FileDescriptorSet other = (DescriptorProtos.FileDescriptorSet)obj;
            if (!this.getFileList().equals(other.getFileList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getFileCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getFileList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.FileDescriptorSet parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FileDescriptorSet parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.FileDescriptorSet.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.FileDescriptorSet.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.FileDescriptorSet.Builder newBuilder(DescriptorProtos.FileDescriptorSet prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.FileDescriptorSet.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.FileDescriptorSet.Builder() : new DescriptorProtos.FileDescriptorSet.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.FileDescriptorSet.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.FileDescriptorSet.Builder(parent);
      }

      public static DescriptorProtos.FileDescriptorSet getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.FileDescriptorSet> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.FileDescriptorSet> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.FileDescriptorSet getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.Builder<DescriptorProtos.FileDescriptorSet.Builder>
         implements DescriptorProtos.FileDescriptorSetOrBuilder {
         private int bitField0_;
         private List<DescriptorProtos.FileDescriptorProto> file_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.FileDescriptorProto, DescriptorProtos.FileDescriptorProto.Builder, DescriptorProtos.FileDescriptorProtoOrBuilder> fileBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.FileDescriptorSet.class, DescriptorProtos.FileDescriptorSet.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getFileFieldBuilder();
            }

         }

         public DescriptorProtos.FileDescriptorSet.Builder clear() {
            super.clear();
            if (this.fileBuilder_ == null) {
               this.file_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.fileBuilder_.clear();
            }

            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_descriptor;
         }

         public DescriptorProtos.FileDescriptorSet getDefaultInstanceForType() {
            return DescriptorProtos.FileDescriptorSet.getDefaultInstance();
         }

         public DescriptorProtos.FileDescriptorSet build() {
            DescriptorProtos.FileDescriptorSet result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.FileDescriptorSet buildPartial() {
            DescriptorProtos.FileDescriptorSet result = new DescriptorProtos.FileDescriptorSet(this);
            int from_bitField0_ = this.bitField0_;
            if (this.fileBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.file_ = Collections.unmodifiableList(this.file_);
                  this.bitField0_ &= -2;
               }

               result.file_ = this.file_;
            } else {
               result.file_ = this.fileBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public DescriptorProtos.FileDescriptorSet.Builder clone() {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.clone();
         }

         public DescriptorProtos.FileDescriptorSet.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.setField(field, value);
         }

         public DescriptorProtos.FileDescriptorSet.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.clearField(field);
         }

         public DescriptorProtos.FileDescriptorSet.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.FileDescriptorSet.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.FileDescriptorSet.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.addRepeatedField(field, value);
         }

         public DescriptorProtos.FileDescriptorSet.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.FileDescriptorSet) {
               return this.mergeFrom((DescriptorProtos.FileDescriptorSet)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorSet.Builder mergeFrom(DescriptorProtos.FileDescriptorSet other) {
            if (other == DescriptorProtos.FileDescriptorSet.getDefaultInstance()) {
               return this;
            } else {
               if (this.fileBuilder_ == null) {
                  if (!other.file_.isEmpty()) {
                     if (this.file_.isEmpty()) {
                        this.file_ = other.file_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureFileIsMutable();
                        this.file_.addAll(other.file_);
                     }

                     this.onChanged();
                  }
               } else if (!other.file_.isEmpty()) {
                  if (this.fileBuilder_.isEmpty()) {
                     this.fileBuilder_.dispose();
                     this.fileBuilder_ = null;
                     this.file_ = other.file_;
                     this.bitField0_ &= -2;
                     this.fileBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getFileFieldBuilder() : null;
                  } else {
                     this.fileBuilder_.addAllMessages(other.file_);
                  }
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getFileCount(); ++i) {
               if (!this.getFile(i).isInitialized()) {
                  return false;
               }
            }

            return true;
         }

         public DescriptorProtos.FileDescriptorSet.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.FileDescriptorSet parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.FileDescriptorSet.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.FileDescriptorSet)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureFileIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.file_ = new ArrayList(this.file_);
               this.bitField0_ |= 1;
            }

         }

         @Override
         public List<DescriptorProtos.FileDescriptorProto> getFileList() {
            return this.fileBuilder_ == null ? Collections.unmodifiableList(this.file_) : this.fileBuilder_.getMessageList();
         }

         @Override
         public int getFileCount() {
            return this.fileBuilder_ == null ? this.file_.size() : this.fileBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.FileDescriptorProto getFile(int index) {
            return this.fileBuilder_ == null ? (DescriptorProtos.FileDescriptorProto)this.file_.get(index) : this.fileBuilder_.getMessage(index);
         }

         public DescriptorProtos.FileDescriptorSet.Builder setFile(int index, DescriptorProtos.FileDescriptorProto value) {
            if (this.fileBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureFileIsMutable();
               this.file_.set(index, value);
               this.onChanged();
            } else {
               this.fileBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder setFile(int index, DescriptorProtos.FileDescriptorProto.Builder builderForValue) {
            if (this.fileBuilder_ == null) {
               this.ensureFileIsMutable();
               this.file_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.fileBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder addFile(DescriptorProtos.FileDescriptorProto value) {
            if (this.fileBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureFileIsMutable();
               this.file_.add(value);
               this.onChanged();
            } else {
               this.fileBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder addFile(int index, DescriptorProtos.FileDescriptorProto value) {
            if (this.fileBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureFileIsMutable();
               this.file_.add(index, value);
               this.onChanged();
            } else {
               this.fileBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder addFile(DescriptorProtos.FileDescriptorProto.Builder builderForValue) {
            if (this.fileBuilder_ == null) {
               this.ensureFileIsMutable();
               this.file_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.fileBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder addFile(int index, DescriptorProtos.FileDescriptorProto.Builder builderForValue) {
            if (this.fileBuilder_ == null) {
               this.ensureFileIsMutable();
               this.file_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.fileBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder addAllFile(Iterable<? extends DescriptorProtos.FileDescriptorProto> values) {
            if (this.fileBuilder_ == null) {
               this.ensureFileIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.file_);
               this.onChanged();
            } else {
               this.fileBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder clearFile() {
            if (this.fileBuilder_ == null) {
               this.file_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.fileBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder removeFile(int index) {
            if (this.fileBuilder_ == null) {
               this.ensureFileIsMutable();
               this.file_.remove(index);
               this.onChanged();
            } else {
               this.fileBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder getFileBuilder(int index) {
            return this.getFileFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.FileDescriptorProtoOrBuilder getFileOrBuilder(int index) {
            return this.fileBuilder_ == null
               ? (DescriptorProtos.FileDescriptorProtoOrBuilder)this.file_.get(index)
               : this.fileBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.FileDescriptorProtoOrBuilder> getFileOrBuilderList() {
            return this.fileBuilder_ != null ? this.fileBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.file_);
         }

         public DescriptorProtos.FileDescriptorProto.Builder addFileBuilder() {
            return this.getFileFieldBuilder().addBuilder(DescriptorProtos.FileDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.FileDescriptorProto.Builder addFileBuilder(int index) {
            return this.getFileFieldBuilder().addBuilder(index, DescriptorProtos.FileDescriptorProto.getDefaultInstance());
         }

         public List<DescriptorProtos.FileDescriptorProto.Builder> getFileBuilderList() {
            return this.getFileFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.FileDescriptorProto, DescriptorProtos.FileDescriptorProto.Builder, DescriptorProtos.FileDescriptorProtoOrBuilder> getFileFieldBuilder() {
            if (this.fileBuilder_ == null) {
               this.fileBuilder_ = new RepeatedFieldBuilderV3<>(this.file_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.file_ = null;
            }

            return this.fileBuilder_;
         }

         public final DescriptorProtos.FileDescriptorSet.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.FileDescriptorSet.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface FileDescriptorSetOrBuilder extends MessageOrBuilder {
      List<DescriptorProtos.FileDescriptorProto> getFileList();

      DescriptorProtos.FileDescriptorProto getFile(int var1);

      int getFileCount();

      List<? extends DescriptorProtos.FileDescriptorProtoOrBuilder> getFileOrBuilderList();

      DescriptorProtos.FileDescriptorProtoOrBuilder getFileOrBuilder(int var1);
   }

   public static final class FileOptions
      extends GeneratedMessageV3.ExtendableMessage<DescriptorProtos.FileOptions>
      implements DescriptorProtos.FileOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int JAVA_PACKAGE_FIELD_NUMBER = 1;
      private volatile Object javaPackage_;
      public static final int JAVA_OUTER_CLASSNAME_FIELD_NUMBER = 8;
      private volatile Object javaOuterClassname_;
      public static final int JAVA_MULTIPLE_FILES_FIELD_NUMBER = 10;
      private boolean javaMultipleFiles_;
      public static final int JAVA_GENERATE_EQUALS_AND_HASH_FIELD_NUMBER = 20;
      private boolean javaGenerateEqualsAndHash_;
      public static final int JAVA_STRING_CHECK_UTF8_FIELD_NUMBER = 27;
      private boolean javaStringCheckUtf8_;
      public static final int OPTIMIZE_FOR_FIELD_NUMBER = 9;
      private int optimizeFor_;
      public static final int GO_PACKAGE_FIELD_NUMBER = 11;
      private volatile Object goPackage_;
      public static final int CC_GENERIC_SERVICES_FIELD_NUMBER = 16;
      private boolean ccGenericServices_;
      public static final int JAVA_GENERIC_SERVICES_FIELD_NUMBER = 17;
      private boolean javaGenericServices_;
      public static final int PY_GENERIC_SERVICES_FIELD_NUMBER = 18;
      private boolean pyGenericServices_;
      public static final int PHP_GENERIC_SERVICES_FIELD_NUMBER = 42;
      private boolean phpGenericServices_;
      public static final int DEPRECATED_FIELD_NUMBER = 23;
      private boolean deprecated_;
      public static final int CC_ENABLE_ARENAS_FIELD_NUMBER = 31;
      private boolean ccEnableArenas_;
      public static final int OBJC_CLASS_PREFIX_FIELD_NUMBER = 36;
      private volatile Object objcClassPrefix_;
      public static final int CSHARP_NAMESPACE_FIELD_NUMBER = 37;
      private volatile Object csharpNamespace_;
      public static final int SWIFT_PREFIX_FIELD_NUMBER = 39;
      private volatile Object swiftPrefix_;
      public static final int PHP_CLASS_PREFIX_FIELD_NUMBER = 40;
      private volatile Object phpClassPrefix_;
      public static final int PHP_NAMESPACE_FIELD_NUMBER = 41;
      private volatile Object phpNamespace_;
      public static final int PHP_METADATA_NAMESPACE_FIELD_NUMBER = 44;
      private volatile Object phpMetadataNamespace_;
      public static final int RUBY_PACKAGE_FIELD_NUMBER = 45;
      private volatile Object rubyPackage_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.FileOptions DEFAULT_INSTANCE = new DescriptorProtos.FileOptions();
      @Deprecated
      public static final Parser<DescriptorProtos.FileOptions> PARSER = new AbstractParser<DescriptorProtos.FileOptions>() {
         public DescriptorProtos.FileOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.FileOptions(input, extensionRegistry);
         }
      };

      private FileOptions(GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.FileOptions, ?> builder) {
         super(builder);
      }

      private FileOptions() {
         this.javaPackage_ = "";
         this.javaOuterClassname_ = "";
         this.optimizeFor_ = 1;
         this.goPackage_ = "";
         this.ccEnableArenas_ = true;
         this.objcClassPrefix_ = "";
         this.csharpNamespace_ = "";
         this.swiftPrefix_ = "";
         this.phpClassPrefix_ = "";
         this.phpNamespace_ = "";
         this.phpMetadataNamespace_ = "";
         this.rubyPackage_ = "";
         this.uninterpretedOption_ = Collections.emptyList();
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.FileOptions();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private FileOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 10: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.javaPackage_ = bs;
                        break;
                     }
                     case 66: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 2;
                        this.javaOuterClassname_ = bs;
                        break;
                     }
                     case 72:
                        int rawValue = input.readEnum();
                        DescriptorProtos.FileOptions.OptimizeMode value = DescriptorProtos.FileOptions.OptimizeMode.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(9, rawValue);
                        } else {
                           this.bitField0_ |= 32;
                           this.optimizeFor_ = rawValue;
                        }
                        break;
                     case 80:
                        this.bitField0_ |= 4;
                        this.javaMultipleFiles_ = input.readBool();
                        break;
                     case 90: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 64;
                        this.goPackage_ = bs;
                        break;
                     }
                     case 128:
                        this.bitField0_ |= 128;
                        this.ccGenericServices_ = input.readBool();
                        break;
                     case 136:
                        this.bitField0_ |= 256;
                        this.javaGenericServices_ = input.readBool();
                        break;
                     case 144:
                        this.bitField0_ |= 512;
                        this.pyGenericServices_ = input.readBool();
                        break;
                     case 160:
                        this.bitField0_ |= 8;
                        this.javaGenerateEqualsAndHash_ = input.readBool();
                        break;
                     case 184:
                        this.bitField0_ |= 2048;
                        this.deprecated_ = input.readBool();
                        break;
                     case 216:
                        this.bitField0_ |= 16;
                        this.javaStringCheckUtf8_ = input.readBool();
                        break;
                     case 248:
                        this.bitField0_ |= 4096;
                        this.ccEnableArenas_ = input.readBool();
                        break;
                     case 290: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 8192;
                        this.objcClassPrefix_ = bs;
                        break;
                     }
                     case 298: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 16384;
                        this.csharpNamespace_ = bs;
                        break;
                     }
                     case 314: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 32768;
                        this.swiftPrefix_ = bs;
                        break;
                     }
                     case 322: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 65536;
                        this.phpClassPrefix_ = bs;
                        break;
                     }
                     case 330: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 131072;
                        this.phpNamespace_ = bs;
                        break;
                     }
                     case 336:
                        this.bitField0_ |= 1024;
                        this.phpGenericServices_ = input.readBool();
                        break;
                     case 354: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 262144;
                        this.phpMetadataNamespace_ = bs;
                        break;
                     }
                     case 362: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 524288;
                        this.rubyPackage_ = bs;
                        break;
                     }
                     case 7994:
                        if ((mutable_bitField0_ & 1048576) == 0) {
                           this.uninterpretedOption_ = new ArrayList();
                           mutable_bitField0_ |= 1048576;
                        }

                        this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var14) {
               throw var14.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var15) {
               throw var15.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var16) {
               throw new InvalidProtocolBufferException(var16).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1048576) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_FileOptions_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_FileOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.FileOptions.class, DescriptorProtos.FileOptions.Builder.class);
      }

      @Override
      public boolean hasJavaPackage() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public String getJavaPackage() {
         Object ref = this.javaPackage_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.javaPackage_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getJavaPackageBytes() {
         Object ref = this.javaPackage_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.javaPackage_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasJavaOuterClassname() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public String getJavaOuterClassname() {
         Object ref = this.javaOuterClassname_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.javaOuterClassname_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getJavaOuterClassnameBytes() {
         Object ref = this.javaOuterClassname_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.javaOuterClassname_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasJavaMultipleFiles() {
         return (this.bitField0_ & 4) != 0;
      }

      @Override
      public boolean getJavaMultipleFiles() {
         return this.javaMultipleFiles_;
      }

      @Deprecated
      @Override
      public boolean hasJavaGenerateEqualsAndHash() {
         return (this.bitField0_ & 8) != 0;
      }

      @Deprecated
      @Override
      public boolean getJavaGenerateEqualsAndHash() {
         return this.javaGenerateEqualsAndHash_;
      }

      @Override
      public boolean hasJavaStringCheckUtf8() {
         return (this.bitField0_ & 16) != 0;
      }

      @Override
      public boolean getJavaStringCheckUtf8() {
         return this.javaStringCheckUtf8_;
      }

      @Override
      public boolean hasOptimizeFor() {
         return (this.bitField0_ & 32) != 0;
      }

      @Override
      public DescriptorProtos.FileOptions.OptimizeMode getOptimizeFor() {
         DescriptorProtos.FileOptions.OptimizeMode result = DescriptorProtos.FileOptions.OptimizeMode.valueOf(this.optimizeFor_);
         return result == null ? DescriptorProtos.FileOptions.OptimizeMode.SPEED : result;
      }

      @Override
      public boolean hasGoPackage() {
         return (this.bitField0_ & 64) != 0;
      }

      @Override
      public String getGoPackage() {
         Object ref = this.goPackage_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.goPackage_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getGoPackageBytes() {
         Object ref = this.goPackage_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.goPackage_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasCcGenericServices() {
         return (this.bitField0_ & 128) != 0;
      }

      @Override
      public boolean getCcGenericServices() {
         return this.ccGenericServices_;
      }

      @Override
      public boolean hasJavaGenericServices() {
         return (this.bitField0_ & 256) != 0;
      }

      @Override
      public boolean getJavaGenericServices() {
         return this.javaGenericServices_;
      }

      @Override
      public boolean hasPyGenericServices() {
         return (this.bitField0_ & 512) != 0;
      }

      @Override
      public boolean getPyGenericServices() {
         return this.pyGenericServices_;
      }

      @Override
      public boolean hasPhpGenericServices() {
         return (this.bitField0_ & 1024) != 0;
      }

      @Override
      public boolean getPhpGenericServices() {
         return this.phpGenericServices_;
      }

      @Override
      public boolean hasDeprecated() {
         return (this.bitField0_ & 2048) != 0;
      }

      @Override
      public boolean getDeprecated() {
         return this.deprecated_;
      }

      @Override
      public boolean hasCcEnableArenas() {
         return (this.bitField0_ & 4096) != 0;
      }

      @Override
      public boolean getCcEnableArenas() {
         return this.ccEnableArenas_;
      }

      @Override
      public boolean hasObjcClassPrefix() {
         return (this.bitField0_ & 8192) != 0;
      }

      @Override
      public String getObjcClassPrefix() {
         Object ref = this.objcClassPrefix_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.objcClassPrefix_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getObjcClassPrefixBytes() {
         Object ref = this.objcClassPrefix_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.objcClassPrefix_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasCsharpNamespace() {
         return (this.bitField0_ & 16384) != 0;
      }

      @Override
      public String getCsharpNamespace() {
         Object ref = this.csharpNamespace_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.csharpNamespace_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getCsharpNamespaceBytes() {
         Object ref = this.csharpNamespace_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.csharpNamespace_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasSwiftPrefix() {
         return (this.bitField0_ & 32768) != 0;
      }

      @Override
      public String getSwiftPrefix() {
         Object ref = this.swiftPrefix_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.swiftPrefix_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getSwiftPrefixBytes() {
         Object ref = this.swiftPrefix_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.swiftPrefix_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasPhpClassPrefix() {
         return (this.bitField0_ & 65536) != 0;
      }

      @Override
      public String getPhpClassPrefix() {
         Object ref = this.phpClassPrefix_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.phpClassPrefix_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getPhpClassPrefixBytes() {
         Object ref = this.phpClassPrefix_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.phpClassPrefix_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasPhpNamespace() {
         return (this.bitField0_ & 131072) != 0;
      }

      @Override
      public String getPhpNamespace() {
         Object ref = this.phpNamespace_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.phpNamespace_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getPhpNamespaceBytes() {
         Object ref = this.phpNamespace_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.phpNamespace_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasPhpMetadataNamespace() {
         return (this.bitField0_ & 262144) != 0;
      }

      @Override
      public String getPhpMetadataNamespace() {
         Object ref = this.phpMetadataNamespace_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.phpMetadataNamespace_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getPhpMetadataNamespaceBytes() {
         Object ref = this.phpMetadataNamespace_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.phpMetadataNamespace_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasRubyPackage() {
         return (this.bitField0_ & 524288) != 0;
      }

      @Override
      public String getRubyPackage() {
         Object ref = this.rubyPackage_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.rubyPackage_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getRubyPackageBytes() {
         Object ref = this.rubyPackage_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.rubyPackage_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      @Override
      public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      @Override
      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      @Override
      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index);
      }

      @Override
      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         GeneratedMessageV3.ExtendableMessage<DescriptorProtos.FileOptions>.ExtensionWriter extensionWriter = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.javaPackage_);
         }

         if ((this.bitField0_ & 2) != 0) {
            GeneratedMessageV3.writeString(output, 8, this.javaOuterClassname_);
         }

         if ((this.bitField0_ & 32) != 0) {
            output.writeEnum(9, this.optimizeFor_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeBool(10, this.javaMultipleFiles_);
         }

         if ((this.bitField0_ & 64) != 0) {
            GeneratedMessageV3.writeString(output, 11, this.goPackage_);
         }

         if ((this.bitField0_ & 128) != 0) {
            output.writeBool(16, this.ccGenericServices_);
         }

         if ((this.bitField0_ & 256) != 0) {
            output.writeBool(17, this.javaGenericServices_);
         }

         if ((this.bitField0_ & 512) != 0) {
            output.writeBool(18, this.pyGenericServices_);
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeBool(20, this.javaGenerateEqualsAndHash_);
         }

         if ((this.bitField0_ & 2048) != 0) {
            output.writeBool(23, this.deprecated_);
         }

         if ((this.bitField0_ & 16) != 0) {
            output.writeBool(27, this.javaStringCheckUtf8_);
         }

         if ((this.bitField0_ & 4096) != 0) {
            output.writeBool(31, this.ccEnableArenas_);
         }

         if ((this.bitField0_ & 8192) != 0) {
            GeneratedMessageV3.writeString(output, 36, this.objcClassPrefix_);
         }

         if ((this.bitField0_ & 16384) != 0) {
            GeneratedMessageV3.writeString(output, 37, this.csharpNamespace_);
         }

         if ((this.bitField0_ & 32768) != 0) {
            GeneratedMessageV3.writeString(output, 39, this.swiftPrefix_);
         }

         if ((this.bitField0_ & 65536) != 0) {
            GeneratedMessageV3.writeString(output, 40, this.phpClassPrefix_);
         }

         if ((this.bitField0_ & 131072) != 0) {
            GeneratedMessageV3.writeString(output, 41, this.phpNamespace_);
         }

         if ((this.bitField0_ & 1024) != 0) {
            output.writeBool(42, this.phpGenericServices_);
         }

         if ((this.bitField0_ & 262144) != 0) {
            GeneratedMessageV3.writeString(output, 44, this.phpMetadataNamespace_);
         }

         if ((this.bitField0_ & 524288) != 0) {
            GeneratedMessageV3.writeString(output, 45, this.rubyPackage_);
         }

         for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
            output.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(i));
         }

         extensionWriter.writeUntil(536870912, output);
         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.javaPackage_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += GeneratedMessageV3.computeStringSize(8, this.javaOuterClassname_);
            }

            if ((this.bitField0_ & 32) != 0) {
               size += CodedOutputStream.computeEnumSize(9, this.optimizeFor_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeBoolSize(10, this.javaMultipleFiles_);
            }

            if ((this.bitField0_ & 64) != 0) {
               size += GeneratedMessageV3.computeStringSize(11, this.goPackage_);
            }

            if ((this.bitField0_ & 128) != 0) {
               size += CodedOutputStream.computeBoolSize(16, this.ccGenericServices_);
            }

            if ((this.bitField0_ & 256) != 0) {
               size += CodedOutputStream.computeBoolSize(17, this.javaGenericServices_);
            }

            if ((this.bitField0_ & 512) != 0) {
               size += CodedOutputStream.computeBoolSize(18, this.pyGenericServices_);
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeBoolSize(20, this.javaGenerateEqualsAndHash_);
            }

            if ((this.bitField0_ & 2048) != 0) {
               size += CodedOutputStream.computeBoolSize(23, this.deprecated_);
            }

            if ((this.bitField0_ & 16) != 0) {
               size += CodedOutputStream.computeBoolSize(27, this.javaStringCheckUtf8_);
            }

            if ((this.bitField0_ & 4096) != 0) {
               size += CodedOutputStream.computeBoolSize(31, this.ccEnableArenas_);
            }

            if ((this.bitField0_ & 8192) != 0) {
               size += GeneratedMessageV3.computeStringSize(36, this.objcClassPrefix_);
            }

            if ((this.bitField0_ & 16384) != 0) {
               size += GeneratedMessageV3.computeStringSize(37, this.csharpNamespace_);
            }

            if ((this.bitField0_ & 32768) != 0) {
               size += GeneratedMessageV3.computeStringSize(39, this.swiftPrefix_);
            }

            if ((this.bitField0_ & 65536) != 0) {
               size += GeneratedMessageV3.computeStringSize(40, this.phpClassPrefix_);
            }

            if ((this.bitField0_ & 131072) != 0) {
               size += GeneratedMessageV3.computeStringSize(41, this.phpNamespace_);
            }

            if ((this.bitField0_ & 1024) != 0) {
               size += CodedOutputStream.computeBoolSize(42, this.phpGenericServices_);
            }

            if ((this.bitField0_ & 262144) != 0) {
               size += GeneratedMessageV3.computeStringSize(44, this.phpMetadataNamespace_);
            }

            if ((this.bitField0_ & 524288) != 0) {
               size += GeneratedMessageV3.computeStringSize(45, this.rubyPackage_);
            }

            for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(i));
            }

            size += this.extensionsSerializedSize();
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.FileOptions)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.FileOptions other = (DescriptorProtos.FileOptions)obj;
            if (this.hasJavaPackage() != other.hasJavaPackage()) {
               return false;
            } else if (this.hasJavaPackage() && !this.getJavaPackage().equals(other.getJavaPackage())) {
               return false;
            } else if (this.hasJavaOuterClassname() != other.hasJavaOuterClassname()) {
               return false;
            } else if (this.hasJavaOuterClassname() && !this.getJavaOuterClassname().equals(other.getJavaOuterClassname())) {
               return false;
            } else if (this.hasJavaMultipleFiles() != other.hasJavaMultipleFiles()) {
               return false;
            } else if (this.hasJavaMultipleFiles() && this.getJavaMultipleFiles() != other.getJavaMultipleFiles()) {
               return false;
            } else if (this.hasJavaGenerateEqualsAndHash() != other.hasJavaGenerateEqualsAndHash()) {
               return false;
            } else if (this.hasJavaGenerateEqualsAndHash() && this.getJavaGenerateEqualsAndHash() != other.getJavaGenerateEqualsAndHash()) {
               return false;
            } else if (this.hasJavaStringCheckUtf8() != other.hasJavaStringCheckUtf8()) {
               return false;
            } else if (this.hasJavaStringCheckUtf8() && this.getJavaStringCheckUtf8() != other.getJavaStringCheckUtf8()) {
               return false;
            } else if (this.hasOptimizeFor() != other.hasOptimizeFor()) {
               return false;
            } else if (this.hasOptimizeFor() && this.optimizeFor_ != other.optimizeFor_) {
               return false;
            } else if (this.hasGoPackage() != other.hasGoPackage()) {
               return false;
            } else if (this.hasGoPackage() && !this.getGoPackage().equals(other.getGoPackage())) {
               return false;
            } else if (this.hasCcGenericServices() != other.hasCcGenericServices()) {
               return false;
            } else if (this.hasCcGenericServices() && this.getCcGenericServices() != other.getCcGenericServices()) {
               return false;
            } else if (this.hasJavaGenericServices() != other.hasJavaGenericServices()) {
               return false;
            } else if (this.hasJavaGenericServices() && this.getJavaGenericServices() != other.getJavaGenericServices()) {
               return false;
            } else if (this.hasPyGenericServices() != other.hasPyGenericServices()) {
               return false;
            } else if (this.hasPyGenericServices() && this.getPyGenericServices() != other.getPyGenericServices()) {
               return false;
            } else if (this.hasPhpGenericServices() != other.hasPhpGenericServices()) {
               return false;
            } else if (this.hasPhpGenericServices() && this.getPhpGenericServices() != other.getPhpGenericServices()) {
               return false;
            } else if (this.hasDeprecated() != other.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != other.getDeprecated()) {
               return false;
            } else if (this.hasCcEnableArenas() != other.hasCcEnableArenas()) {
               return false;
            } else if (this.hasCcEnableArenas() && this.getCcEnableArenas() != other.getCcEnableArenas()) {
               return false;
            } else if (this.hasObjcClassPrefix() != other.hasObjcClassPrefix()) {
               return false;
            } else if (this.hasObjcClassPrefix() && !this.getObjcClassPrefix().equals(other.getObjcClassPrefix())) {
               return false;
            } else if (this.hasCsharpNamespace() != other.hasCsharpNamespace()) {
               return false;
            } else if (this.hasCsharpNamespace() && !this.getCsharpNamespace().equals(other.getCsharpNamespace())) {
               return false;
            } else if (this.hasSwiftPrefix() != other.hasSwiftPrefix()) {
               return false;
            } else if (this.hasSwiftPrefix() && !this.getSwiftPrefix().equals(other.getSwiftPrefix())) {
               return false;
            } else if (this.hasPhpClassPrefix() != other.hasPhpClassPrefix()) {
               return false;
            } else if (this.hasPhpClassPrefix() && !this.getPhpClassPrefix().equals(other.getPhpClassPrefix())) {
               return false;
            } else if (this.hasPhpNamespace() != other.hasPhpNamespace()) {
               return false;
            } else if (this.hasPhpNamespace() && !this.getPhpNamespace().equals(other.getPhpNamespace())) {
               return false;
            } else if (this.hasPhpMetadataNamespace() != other.hasPhpMetadataNamespace()) {
               return false;
            } else if (this.hasPhpMetadataNamespace() && !this.getPhpMetadataNamespace().equals(other.getPhpMetadataNamespace())) {
               return false;
            } else if (this.hasRubyPackage() != other.hasRubyPackage()) {
               return false;
            } else if (this.hasRubyPackage() && !this.getRubyPackage().equals(other.getRubyPackage())) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(other.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(other.getExtensionFields());
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasJavaPackage()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getJavaPackage().hashCode();
            }

            if (this.hasJavaOuterClassname()) {
               hash = 37 * hash + 8;
               hash = 53 * hash + this.getJavaOuterClassname().hashCode();
            }

            if (this.hasJavaMultipleFiles()) {
               hash = 37 * hash + 10;
               hash = 53 * hash + Internal.hashBoolean(this.getJavaMultipleFiles());
            }

            if (this.hasJavaGenerateEqualsAndHash()) {
               hash = 37 * hash + 20;
               hash = 53 * hash + Internal.hashBoolean(this.getJavaGenerateEqualsAndHash());
            }

            if (this.hasJavaStringCheckUtf8()) {
               hash = 37 * hash + 27;
               hash = 53 * hash + Internal.hashBoolean(this.getJavaStringCheckUtf8());
            }

            if (this.hasOptimizeFor()) {
               hash = 37 * hash + 9;
               hash = 53 * hash + this.optimizeFor_;
            }

            if (this.hasGoPackage()) {
               hash = 37 * hash + 11;
               hash = 53 * hash + this.getGoPackage().hashCode();
            }

            if (this.hasCcGenericServices()) {
               hash = 37 * hash + 16;
               hash = 53 * hash + Internal.hashBoolean(this.getCcGenericServices());
            }

            if (this.hasJavaGenericServices()) {
               hash = 37 * hash + 17;
               hash = 53 * hash + Internal.hashBoolean(this.getJavaGenericServices());
            }

            if (this.hasPyGenericServices()) {
               hash = 37 * hash + 18;
               hash = 53 * hash + Internal.hashBoolean(this.getPyGenericServices());
            }

            if (this.hasPhpGenericServices()) {
               hash = 37 * hash + 42;
               hash = 53 * hash + Internal.hashBoolean(this.getPhpGenericServices());
            }

            if (this.hasDeprecated()) {
               hash = 37 * hash + 23;
               hash = 53 * hash + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.hasCcEnableArenas()) {
               hash = 37 * hash + 31;
               hash = 53 * hash + Internal.hashBoolean(this.getCcEnableArenas());
            }

            if (this.hasObjcClassPrefix()) {
               hash = 37 * hash + 36;
               hash = 53 * hash + this.getObjcClassPrefix().hashCode();
            }

            if (this.hasCsharpNamespace()) {
               hash = 37 * hash + 37;
               hash = 53 * hash + this.getCsharpNamespace().hashCode();
            }

            if (this.hasSwiftPrefix()) {
               hash = 37 * hash + 39;
               hash = 53 * hash + this.getSwiftPrefix().hashCode();
            }

            if (this.hasPhpClassPrefix()) {
               hash = 37 * hash + 40;
               hash = 53 * hash + this.getPhpClassPrefix().hashCode();
            }

            if (this.hasPhpNamespace()) {
               hash = 37 * hash + 41;
               hash = 53 * hash + this.getPhpNamespace().hashCode();
            }

            if (this.hasPhpMetadataNamespace()) {
               hash = 37 * hash + 44;
               hash = 53 * hash + this.getPhpMetadataNamespace().hashCode();
            }

            if (this.hasRubyPackage()) {
               hash = 37 * hash + 45;
               hash = 53 * hash + this.getRubyPackage().hashCode();
            }

            if (this.getUninterpretedOptionCount() > 0) {
               hash = 37 * hash + 999;
               hash = 53 * hash + this.getUninterpretedOptionList().hashCode();
            }

            hash = hashFields(hash, this.getExtensionFields());
            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.FileOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FileOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FileOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FileOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FileOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.FileOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.FileOptions parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FileOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.FileOptions parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FileOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.FileOptions parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.FileOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.FileOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.FileOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.FileOptions.Builder newBuilder(DescriptorProtos.FileOptions prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.FileOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.FileOptions.Builder() : new DescriptorProtos.FileOptions.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.FileOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.FileOptions.Builder(parent);
      }

      public static DescriptorProtos.FileOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.FileOptions> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.FileOptions> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.FileOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.FileOptions, DescriptorProtos.FileOptions.Builder>
         implements DescriptorProtos.FileOptionsOrBuilder {
         private int bitField0_;
         private Object javaPackage_ = "";
         private Object javaOuterClassname_ = "";
         private boolean javaMultipleFiles_;
         private boolean javaGenerateEqualsAndHash_;
         private boolean javaStringCheckUtf8_;
         private int optimizeFor_ = 1;
         private Object goPackage_ = "";
         private boolean ccGenericServices_;
         private boolean javaGenericServices_;
         private boolean pyGenericServices_;
         private boolean phpGenericServices_;
         private boolean deprecated_;
         private boolean ccEnableArenas_ = true;
         private Object objcClassPrefix_ = "";
         private Object csharpNamespace_ = "";
         private Object swiftPrefix_ = "";
         private Object phpClassPrefix_ = "";
         private Object phpNamespace_ = "";
         private Object phpMetadataNamespace_ = "";
         private Object rubyPackage_ = "";
         private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_FileOptions_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_FileOptions_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.FileOptions.class, DescriptorProtos.FileOptions.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.FileOptions.Builder clear() {
            super.clear();
            this.javaPackage_ = "";
            this.bitField0_ &= -2;
            this.javaOuterClassname_ = "";
            this.bitField0_ &= -3;
            this.javaMultipleFiles_ = false;
            this.bitField0_ &= -5;
            this.javaGenerateEqualsAndHash_ = false;
            this.bitField0_ &= -9;
            this.javaStringCheckUtf8_ = false;
            this.bitField0_ &= -17;
            this.optimizeFor_ = 1;
            this.bitField0_ &= -33;
            this.goPackage_ = "";
            this.bitField0_ &= -65;
            this.ccGenericServices_ = false;
            this.bitField0_ &= -129;
            this.javaGenericServices_ = false;
            this.bitField0_ &= -257;
            this.pyGenericServices_ = false;
            this.bitField0_ &= -513;
            this.phpGenericServices_ = false;
            this.bitField0_ &= -1025;
            this.deprecated_ = false;
            this.bitField0_ &= -2049;
            this.ccEnableArenas_ = true;
            this.bitField0_ &= -4097;
            this.objcClassPrefix_ = "";
            this.bitField0_ &= -8193;
            this.csharpNamespace_ = "";
            this.bitField0_ &= -16385;
            this.swiftPrefix_ = "";
            this.bitField0_ &= -32769;
            this.phpClassPrefix_ = "";
            this.bitField0_ &= -65537;
            this.phpNamespace_ = "";
            this.bitField0_ &= -131073;
            this.phpMetadataNamespace_ = "";
            this.bitField0_ &= -262145;
            this.rubyPackage_ = "";
            this.bitField0_ &= -524289;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -1048577;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_FileOptions_descriptor;
         }

         public DescriptorProtos.FileOptions getDefaultInstanceForType() {
            return DescriptorProtos.FileOptions.getDefaultInstance();
         }

         public DescriptorProtos.FileOptions build() {
            DescriptorProtos.FileOptions result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.FileOptions buildPartial() {
            DescriptorProtos.FileOptions result = new DescriptorProtos.FileOptions(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.javaPackage_ = this.javaPackage_;
            if ((from_bitField0_ & 2) != 0) {
               to_bitField0_ |= 2;
            }

            result.javaOuterClassname_ = this.javaOuterClassname_;
            if ((from_bitField0_ & 4) != 0) {
               result.javaMultipleFiles_ = this.javaMultipleFiles_;
               to_bitField0_ |= 4;
            }

            if ((from_bitField0_ & 8) != 0) {
               result.javaGenerateEqualsAndHash_ = this.javaGenerateEqualsAndHash_;
               to_bitField0_ |= 8;
            }

            if ((from_bitField0_ & 16) != 0) {
               result.javaStringCheckUtf8_ = this.javaStringCheckUtf8_;
               to_bitField0_ |= 16;
            }

            if ((from_bitField0_ & 32) != 0) {
               to_bitField0_ |= 32;
            }

            result.optimizeFor_ = this.optimizeFor_;
            if ((from_bitField0_ & 64) != 0) {
               to_bitField0_ |= 64;
            }

            result.goPackage_ = this.goPackage_;
            if ((from_bitField0_ & 128) != 0) {
               result.ccGenericServices_ = this.ccGenericServices_;
               to_bitField0_ |= 128;
            }

            if ((from_bitField0_ & 256) != 0) {
               result.javaGenericServices_ = this.javaGenericServices_;
               to_bitField0_ |= 256;
            }

            if ((from_bitField0_ & 512) != 0) {
               result.pyGenericServices_ = this.pyGenericServices_;
               to_bitField0_ |= 512;
            }

            if ((from_bitField0_ & 1024) != 0) {
               result.phpGenericServices_ = this.phpGenericServices_;
               to_bitField0_ |= 1024;
            }

            if ((from_bitField0_ & 2048) != 0) {
               result.deprecated_ = this.deprecated_;
               to_bitField0_ |= 2048;
            }

            if ((from_bitField0_ & 4096) != 0) {
               to_bitField0_ |= 4096;
            }

            result.ccEnableArenas_ = this.ccEnableArenas_;
            if ((from_bitField0_ & 8192) != 0) {
               to_bitField0_ |= 8192;
            }

            result.objcClassPrefix_ = this.objcClassPrefix_;
            if ((from_bitField0_ & 16384) != 0) {
               to_bitField0_ |= 16384;
            }

            result.csharpNamespace_ = this.csharpNamespace_;
            if ((from_bitField0_ & 32768) != 0) {
               to_bitField0_ |= 32768;
            }

            result.swiftPrefix_ = this.swiftPrefix_;
            if ((from_bitField0_ & 65536) != 0) {
               to_bitField0_ |= 65536;
            }

            result.phpClassPrefix_ = this.phpClassPrefix_;
            if ((from_bitField0_ & 131072) != 0) {
               to_bitField0_ |= 131072;
            }

            result.phpNamespace_ = this.phpNamespace_;
            if ((from_bitField0_ & 262144) != 0) {
               to_bitField0_ |= 262144;
            }

            result.phpMetadataNamespace_ = this.phpMetadataNamespace_;
            if ((from_bitField0_ & 524288) != 0) {
               to_bitField0_ |= 524288;
            }

            result.rubyPackage_ = this.rubyPackage_;
            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 1048576) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -1048577;
               }

               result.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.FileOptions.Builder clone() {
            return (DescriptorProtos.FileOptions.Builder)super.clone();
         }

         public DescriptorProtos.FileOptions.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.FileOptions.Builder)super.setField(field, value);
         }

         public DescriptorProtos.FileOptions.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.FileOptions.Builder)super.clearField(field);
         }

         public DescriptorProtos.FileOptions.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.FileOptions.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.FileOptions.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.FileOptions.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.FileOptions.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.FileOptions.Builder)super.addRepeatedField(field, value);
         }

         public <Type> DescriptorProtos.FileOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.FileOptions, Type> extension, Type value
         ) {
            return (DescriptorProtos.FileOptions.Builder)super.setExtension(extension, value);
         }

         public <Type> DescriptorProtos.FileOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.FileOptions, List<Type>> extension, int index, Type value
         ) {
            return (DescriptorProtos.FileOptions.Builder)super.setExtension(extension, index, value);
         }

         public <Type> DescriptorProtos.FileOptions.Builder addExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.FileOptions, List<Type>> extension, Type value
         ) {
            return (DescriptorProtos.FileOptions.Builder)super.addExtension(extension, value);
         }

         public <Type> DescriptorProtos.FileOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.FileOptions, ?> extension) {
            return (DescriptorProtos.FileOptions.Builder)super.clearExtension(extension);
         }

         public DescriptorProtos.FileOptions.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.FileOptions) {
               return this.mergeFrom((DescriptorProtos.FileOptions)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder mergeFrom(DescriptorProtos.FileOptions other) {
            if (other == DescriptorProtos.FileOptions.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasJavaPackage()) {
                  this.bitField0_ |= 1;
                  this.javaPackage_ = other.javaPackage_;
                  this.onChanged();
               }

               if (other.hasJavaOuterClassname()) {
                  this.bitField0_ |= 2;
                  this.javaOuterClassname_ = other.javaOuterClassname_;
                  this.onChanged();
               }

               if (other.hasJavaMultipleFiles()) {
                  this.setJavaMultipleFiles(other.getJavaMultipleFiles());
               }

               if (other.hasJavaGenerateEqualsAndHash()) {
                  this.setJavaGenerateEqualsAndHash(other.getJavaGenerateEqualsAndHash());
               }

               if (other.hasJavaStringCheckUtf8()) {
                  this.setJavaStringCheckUtf8(other.getJavaStringCheckUtf8());
               }

               if (other.hasOptimizeFor()) {
                  this.setOptimizeFor(other.getOptimizeFor());
               }

               if (other.hasGoPackage()) {
                  this.bitField0_ |= 64;
                  this.goPackage_ = other.goPackage_;
                  this.onChanged();
               }

               if (other.hasCcGenericServices()) {
                  this.setCcGenericServices(other.getCcGenericServices());
               }

               if (other.hasJavaGenericServices()) {
                  this.setJavaGenericServices(other.getJavaGenericServices());
               }

               if (other.hasPyGenericServices()) {
                  this.setPyGenericServices(other.getPyGenericServices());
               }

               if (other.hasPhpGenericServices()) {
                  this.setPhpGenericServices(other.getPhpGenericServices());
               }

               if (other.hasDeprecated()) {
                  this.setDeprecated(other.getDeprecated());
               }

               if (other.hasCcEnableArenas()) {
                  this.setCcEnableArenas(other.getCcEnableArenas());
               }

               if (other.hasObjcClassPrefix()) {
                  this.bitField0_ |= 8192;
                  this.objcClassPrefix_ = other.objcClassPrefix_;
                  this.onChanged();
               }

               if (other.hasCsharpNamespace()) {
                  this.bitField0_ |= 16384;
                  this.csharpNamespace_ = other.csharpNamespace_;
                  this.onChanged();
               }

               if (other.hasSwiftPrefix()) {
                  this.bitField0_ |= 32768;
                  this.swiftPrefix_ = other.swiftPrefix_;
                  this.onChanged();
               }

               if (other.hasPhpClassPrefix()) {
                  this.bitField0_ |= 65536;
                  this.phpClassPrefix_ = other.phpClassPrefix_;
                  this.onChanged();
               }

               if (other.hasPhpNamespace()) {
                  this.bitField0_ |= 131072;
                  this.phpNamespace_ = other.phpNamespace_;
                  this.onChanged();
               }

               if (other.hasPhpMetadataNamespace()) {
                  this.bitField0_ |= 262144;
                  this.phpMetadataNamespace_ = other.phpMetadataNamespace_;
                  this.onChanged();
               }

               if (other.hasRubyPackage()) {
                  this.bitField0_ |= 524288;
                  this.rubyPackage_ = other.rubyPackage_;
                  this.onChanged();
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!other.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = other.uninterpretedOption_;
                        this.bitField0_ &= -1048577;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(other.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!other.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = other.uninterpretedOption_;
                     this.bitField0_ &= -1048577;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(other);
               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  return false;
               }
            }

            return this.extensionsAreInitialized();
         }

         public DescriptorProtos.FileOptions.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.FileOptions parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.FileOptions.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.FileOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasJavaPackage() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public String getJavaPackage() {
            Object ref = this.javaPackage_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.javaPackage_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getJavaPackageBytes() {
            Object ref = this.javaPackage_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.javaPackage_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FileOptions.Builder setJavaPackage(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.javaPackage_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearJavaPackage() {
            this.bitField0_ &= -2;
            this.javaPackage_ = DescriptorProtos.FileOptions.getDefaultInstance().getJavaPackage();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setJavaPackageBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.javaPackage_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasJavaOuterClassname() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public String getJavaOuterClassname() {
            Object ref = this.javaOuterClassname_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.javaOuterClassname_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getJavaOuterClassnameBytes() {
            Object ref = this.javaOuterClassname_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.javaOuterClassname_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FileOptions.Builder setJavaOuterClassname(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.javaOuterClassname_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearJavaOuterClassname() {
            this.bitField0_ &= -3;
            this.javaOuterClassname_ = DescriptorProtos.FileOptions.getDefaultInstance().getJavaOuterClassname();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setJavaOuterClassnameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.javaOuterClassname_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasJavaMultipleFiles() {
            return (this.bitField0_ & 4) != 0;
         }

         @Override
         public boolean getJavaMultipleFiles() {
            return this.javaMultipleFiles_;
         }

         public DescriptorProtos.FileOptions.Builder setJavaMultipleFiles(boolean value) {
            this.bitField0_ |= 4;
            this.javaMultipleFiles_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearJavaMultipleFiles() {
            this.bitField0_ &= -5;
            this.javaMultipleFiles_ = false;
            this.onChanged();
            return this;
         }

         @Deprecated
         @Override
         public boolean hasJavaGenerateEqualsAndHash() {
            return (this.bitField0_ & 8) != 0;
         }

         @Deprecated
         @Override
         public boolean getJavaGenerateEqualsAndHash() {
            return this.javaGenerateEqualsAndHash_;
         }

         @Deprecated
         public DescriptorProtos.FileOptions.Builder setJavaGenerateEqualsAndHash(boolean value) {
            this.bitField0_ |= 8;
            this.javaGenerateEqualsAndHash_ = value;
            this.onChanged();
            return this;
         }

         @Deprecated
         public DescriptorProtos.FileOptions.Builder clearJavaGenerateEqualsAndHash() {
            this.bitField0_ &= -9;
            this.javaGenerateEqualsAndHash_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasJavaStringCheckUtf8() {
            return (this.bitField0_ & 16) != 0;
         }

         @Override
         public boolean getJavaStringCheckUtf8() {
            return this.javaStringCheckUtf8_;
         }

         public DescriptorProtos.FileOptions.Builder setJavaStringCheckUtf8(boolean value) {
            this.bitField0_ |= 16;
            this.javaStringCheckUtf8_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearJavaStringCheckUtf8() {
            this.bitField0_ &= -17;
            this.javaStringCheckUtf8_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasOptimizeFor() {
            return (this.bitField0_ & 32) != 0;
         }

         @Override
         public DescriptorProtos.FileOptions.OptimizeMode getOptimizeFor() {
            DescriptorProtos.FileOptions.OptimizeMode result = DescriptorProtos.FileOptions.OptimizeMode.valueOf(this.optimizeFor_);
            return result == null ? DescriptorProtos.FileOptions.OptimizeMode.SPEED : result;
         }

         public DescriptorProtos.FileOptions.Builder setOptimizeFor(DescriptorProtos.FileOptions.OptimizeMode value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 32;
               this.optimizeFor_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearOptimizeFor() {
            this.bitField0_ &= -33;
            this.optimizeFor_ = 1;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasGoPackage() {
            return (this.bitField0_ & 64) != 0;
         }

         @Override
         public String getGoPackage() {
            Object ref = this.goPackage_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.goPackage_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getGoPackageBytes() {
            Object ref = this.goPackage_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.goPackage_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FileOptions.Builder setGoPackage(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 64;
               this.goPackage_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearGoPackage() {
            this.bitField0_ &= -65;
            this.goPackage_ = DescriptorProtos.FileOptions.getDefaultInstance().getGoPackage();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setGoPackageBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 64;
               this.goPackage_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasCcGenericServices() {
            return (this.bitField0_ & 128) != 0;
         }

         @Override
         public boolean getCcGenericServices() {
            return this.ccGenericServices_;
         }

         public DescriptorProtos.FileOptions.Builder setCcGenericServices(boolean value) {
            this.bitField0_ |= 128;
            this.ccGenericServices_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearCcGenericServices() {
            this.bitField0_ &= -129;
            this.ccGenericServices_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasJavaGenericServices() {
            return (this.bitField0_ & 256) != 0;
         }

         @Override
         public boolean getJavaGenericServices() {
            return this.javaGenericServices_;
         }

         public DescriptorProtos.FileOptions.Builder setJavaGenericServices(boolean value) {
            this.bitField0_ |= 256;
            this.javaGenericServices_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearJavaGenericServices() {
            this.bitField0_ &= -257;
            this.javaGenericServices_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasPyGenericServices() {
            return (this.bitField0_ & 512) != 0;
         }

         @Override
         public boolean getPyGenericServices() {
            return this.pyGenericServices_;
         }

         public DescriptorProtos.FileOptions.Builder setPyGenericServices(boolean value) {
            this.bitField0_ |= 512;
            this.pyGenericServices_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearPyGenericServices() {
            this.bitField0_ &= -513;
            this.pyGenericServices_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasPhpGenericServices() {
            return (this.bitField0_ & 1024) != 0;
         }

         @Override
         public boolean getPhpGenericServices() {
            return this.phpGenericServices_;
         }

         public DescriptorProtos.FileOptions.Builder setPhpGenericServices(boolean value) {
            this.bitField0_ |= 1024;
            this.phpGenericServices_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearPhpGenericServices() {
            this.bitField0_ &= -1025;
            this.phpGenericServices_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasDeprecated() {
            return (this.bitField0_ & 2048) != 0;
         }

         @Override
         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.FileOptions.Builder setDeprecated(boolean value) {
            this.bitField0_ |= 2048;
            this.deprecated_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearDeprecated() {
            this.bitField0_ &= -2049;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasCcEnableArenas() {
            return (this.bitField0_ & 4096) != 0;
         }

         @Override
         public boolean getCcEnableArenas() {
            return this.ccEnableArenas_;
         }

         public DescriptorProtos.FileOptions.Builder setCcEnableArenas(boolean value) {
            this.bitField0_ |= 4096;
            this.ccEnableArenas_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearCcEnableArenas() {
            this.bitField0_ &= -4097;
            this.ccEnableArenas_ = true;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasObjcClassPrefix() {
            return (this.bitField0_ & 8192) != 0;
         }

         @Override
         public String getObjcClassPrefix() {
            Object ref = this.objcClassPrefix_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.objcClassPrefix_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getObjcClassPrefixBytes() {
            Object ref = this.objcClassPrefix_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.objcClassPrefix_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FileOptions.Builder setObjcClassPrefix(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8192;
               this.objcClassPrefix_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearObjcClassPrefix() {
            this.bitField0_ &= -8193;
            this.objcClassPrefix_ = DescriptorProtos.FileOptions.getDefaultInstance().getObjcClassPrefix();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setObjcClassPrefixBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8192;
               this.objcClassPrefix_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasCsharpNamespace() {
            return (this.bitField0_ & 16384) != 0;
         }

         @Override
         public String getCsharpNamespace() {
            Object ref = this.csharpNamespace_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.csharpNamespace_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getCsharpNamespaceBytes() {
            Object ref = this.csharpNamespace_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.csharpNamespace_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FileOptions.Builder setCsharpNamespace(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16384;
               this.csharpNamespace_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearCsharpNamespace() {
            this.bitField0_ &= -16385;
            this.csharpNamespace_ = DescriptorProtos.FileOptions.getDefaultInstance().getCsharpNamespace();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setCsharpNamespaceBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16384;
               this.csharpNamespace_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasSwiftPrefix() {
            return (this.bitField0_ & 32768) != 0;
         }

         @Override
         public String getSwiftPrefix() {
            Object ref = this.swiftPrefix_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.swiftPrefix_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getSwiftPrefixBytes() {
            Object ref = this.swiftPrefix_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.swiftPrefix_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FileOptions.Builder setSwiftPrefix(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 32768;
               this.swiftPrefix_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearSwiftPrefix() {
            this.bitField0_ &= -32769;
            this.swiftPrefix_ = DescriptorProtos.FileOptions.getDefaultInstance().getSwiftPrefix();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setSwiftPrefixBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 32768;
               this.swiftPrefix_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasPhpClassPrefix() {
            return (this.bitField0_ & 65536) != 0;
         }

         @Override
         public String getPhpClassPrefix() {
            Object ref = this.phpClassPrefix_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.phpClassPrefix_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getPhpClassPrefixBytes() {
            Object ref = this.phpClassPrefix_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.phpClassPrefix_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FileOptions.Builder setPhpClassPrefix(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 65536;
               this.phpClassPrefix_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearPhpClassPrefix() {
            this.bitField0_ &= -65537;
            this.phpClassPrefix_ = DescriptorProtos.FileOptions.getDefaultInstance().getPhpClassPrefix();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setPhpClassPrefixBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 65536;
               this.phpClassPrefix_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasPhpNamespace() {
            return (this.bitField0_ & 131072) != 0;
         }

         @Override
         public String getPhpNamespace() {
            Object ref = this.phpNamespace_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.phpNamespace_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getPhpNamespaceBytes() {
            Object ref = this.phpNamespace_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.phpNamespace_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FileOptions.Builder setPhpNamespace(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 131072;
               this.phpNamespace_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearPhpNamespace() {
            this.bitField0_ &= -131073;
            this.phpNamespace_ = DescriptorProtos.FileOptions.getDefaultInstance().getPhpNamespace();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setPhpNamespaceBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 131072;
               this.phpNamespace_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasPhpMetadataNamespace() {
            return (this.bitField0_ & 262144) != 0;
         }

         @Override
         public String getPhpMetadataNamespace() {
            Object ref = this.phpMetadataNamespace_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.phpMetadataNamespace_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getPhpMetadataNamespaceBytes() {
            Object ref = this.phpMetadataNamespace_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.phpMetadataNamespace_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FileOptions.Builder setPhpMetadataNamespace(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 262144;
               this.phpMetadataNamespace_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearPhpMetadataNamespace() {
            this.bitField0_ &= -262145;
            this.phpMetadataNamespace_ = DescriptorProtos.FileOptions.getDefaultInstance().getPhpMetadataNamespace();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setPhpMetadataNamespaceBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 262144;
               this.phpMetadataNamespace_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasRubyPackage() {
            return (this.bitField0_ & 524288) != 0;
         }

         @Override
         public String getRubyPackage() {
            Object ref = this.rubyPackage_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.rubyPackage_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getRubyPackageBytes() {
            Object ref = this.rubyPackage_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.rubyPackage_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.FileOptions.Builder setRubyPackage(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 524288;
               this.rubyPackage_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearRubyPackage() {
            this.bitField0_ &= -524289;
            this.rubyPackage_ = DescriptorProtos.FileOptions.getDefaultInstance().getRubyPackage();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setRubyPackageBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 524288;
               this.rubyPackage_ = value;
               this.onChanged();
               return this;
            }
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 1048576) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 1048576;
            }

         }

         @Override
         public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null
               ? Collections.unmodifiableList(this.uninterpretedOption_)
               : this.uninterpretedOptionBuilder_.getMessageList();
         }

         @Override
         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessage(index);
         }

         public DescriptorProtos.FileOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -1048577;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder removeUninterpretedOption(int index) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(index);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null
               ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList()
               : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(index, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(
                  this.uninterpretedOption_, (this.bitField0_ & 1048576) != 0, this.getParentForChildren(), this.isClean()
               );
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.FileOptions.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.FileOptions.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.FileOptions.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.FileOptions.Builder)super.mergeUnknownFields(unknownFields);
         }
      }

      public static enum OptimizeMode implements ProtocolMessageEnum {
         SPEED(1),
         CODE_SIZE(2),
         LITE_RUNTIME(3);

         public static final int SPEED_VALUE = 1;
         public static final int CODE_SIZE_VALUE = 2;
         public static final int LITE_RUNTIME_VALUE = 3;
         private static final Internal.EnumLiteMap<DescriptorProtos.FileOptions.OptimizeMode> internalValueMap = new Internal.EnumLiteMap<DescriptorProtos.FileOptions.OptimizeMode>(
            
         ) {
            public DescriptorProtos.FileOptions.OptimizeMode findValueByNumber(int number) {
               return DescriptorProtos.FileOptions.OptimizeMode.forNumber(number);
            }
         };
         private static final DescriptorProtos.FileOptions.OptimizeMode[] VALUES = values();
         private final int value;

         @Override
         public final int getNumber() {
            return this.value;
         }

         @Deprecated
         public static DescriptorProtos.FileOptions.OptimizeMode valueOf(int value) {
            return forNumber(value);
         }

         public static DescriptorProtos.FileOptions.OptimizeMode forNumber(int value) {
            switch(value) {
               case 1:
                  return SPEED;
               case 2:
                  return CODE_SIZE;
               case 3:
                  return LITE_RUNTIME;
               default:
                  return null;
            }
         }

         public static Internal.EnumLiteMap<DescriptorProtos.FileOptions.OptimizeMode> internalGetValueMap() {
            return internalValueMap;
         }

         @Override
         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         @Override
         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)DescriptorProtos.FileOptions.getDescriptor().getEnumTypes().get(0);
         }

         public static DescriptorProtos.FileOptions.OptimizeMode valueOf(Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[desc.getIndex()];
            }
         }

         private OptimizeMode(int value) {
            this.value = value;
         }
      }
   }

   public interface FileOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder<DescriptorProtos.FileOptions> {
      boolean hasJavaPackage();

      String getJavaPackage();

      ByteString getJavaPackageBytes();

      boolean hasJavaOuterClassname();

      String getJavaOuterClassname();

      ByteString getJavaOuterClassnameBytes();

      boolean hasJavaMultipleFiles();

      boolean getJavaMultipleFiles();

      @Deprecated
      boolean hasJavaGenerateEqualsAndHash();

      @Deprecated
      boolean getJavaGenerateEqualsAndHash();

      boolean hasJavaStringCheckUtf8();

      boolean getJavaStringCheckUtf8();

      boolean hasOptimizeFor();

      DescriptorProtos.FileOptions.OptimizeMode getOptimizeFor();

      boolean hasGoPackage();

      String getGoPackage();

      ByteString getGoPackageBytes();

      boolean hasCcGenericServices();

      boolean getCcGenericServices();

      boolean hasJavaGenericServices();

      boolean getJavaGenericServices();

      boolean hasPyGenericServices();

      boolean getPyGenericServices();

      boolean hasPhpGenericServices();

      boolean getPhpGenericServices();

      boolean hasDeprecated();

      boolean getDeprecated();

      boolean hasCcEnableArenas();

      boolean getCcEnableArenas();

      boolean hasObjcClassPrefix();

      String getObjcClassPrefix();

      ByteString getObjcClassPrefixBytes();

      boolean hasCsharpNamespace();

      String getCsharpNamespace();

      ByteString getCsharpNamespaceBytes();

      boolean hasSwiftPrefix();

      String getSwiftPrefix();

      ByteString getSwiftPrefixBytes();

      boolean hasPhpClassPrefix();

      String getPhpClassPrefix();

      ByteString getPhpClassPrefixBytes();

      boolean hasPhpNamespace();

      String getPhpNamespace();

      ByteString getPhpNamespaceBytes();

      boolean hasPhpMetadataNamespace();

      String getPhpMetadataNamespace();

      ByteString getPhpMetadataNamespaceBytes();

      boolean hasRubyPackage();

      String getRubyPackage();

      ByteString getRubyPackageBytes();

      List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class GeneratedCodeInfo extends GeneratedMessageV3 implements DescriptorProtos.GeneratedCodeInfoOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int ANNOTATION_FIELD_NUMBER = 1;
      private List<DescriptorProtos.GeneratedCodeInfo.Annotation> annotation_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.GeneratedCodeInfo DEFAULT_INSTANCE = new DescriptorProtos.GeneratedCodeInfo();
      @Deprecated
      public static final Parser<DescriptorProtos.GeneratedCodeInfo> PARSER = new AbstractParser<DescriptorProtos.GeneratedCodeInfo>() {
         public DescriptorProtos.GeneratedCodeInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.GeneratedCodeInfo(input, extensionRegistry);
         }
      };

      private GeneratedCodeInfo(GeneratedMessageV3.Builder<?> builder) {
         super(builder);
      }

      private GeneratedCodeInfo() {
         this.annotation_ = Collections.emptyList();
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.GeneratedCodeInfo();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private GeneratedCodeInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.annotation_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.annotation_.add(input.readMessage(DescriptorProtos.GeneratedCodeInfo.Annotation.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var13) {
               throw var13.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw new InvalidProtocolBufferException(var14).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.annotation_ = Collections.unmodifiableList(this.annotation_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.GeneratedCodeInfo.class, DescriptorProtos.GeneratedCodeInfo.Builder.class);
      }

      @Override
      public List<DescriptorProtos.GeneratedCodeInfo.Annotation> getAnnotationList() {
         return this.annotation_;
      }

      @Override
      public List<? extends DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder> getAnnotationOrBuilderList() {
         return this.annotation_;
      }

      @Override
      public int getAnnotationCount() {
         return this.annotation_.size();
      }

      @Override
      public DescriptorProtos.GeneratedCodeInfo.Annotation getAnnotation(int index) {
         return (DescriptorProtos.GeneratedCodeInfo.Annotation)this.annotation_.get(index);
      }

      @Override
      public DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder getAnnotationOrBuilder(int index) {
         return (DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder)this.annotation_.get(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         for(int i = 0; i < this.annotation_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.annotation_.get(i));
         }

         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.annotation_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.annotation_.get(i));
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.GeneratedCodeInfo)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.GeneratedCodeInfo other = (DescriptorProtos.GeneratedCodeInfo)obj;
            if (!this.getAnnotationList().equals(other.getAnnotationList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getAnnotationCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getAnnotationList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.GeneratedCodeInfo.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.GeneratedCodeInfo.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.GeneratedCodeInfo.Builder newBuilder(DescriptorProtos.GeneratedCodeInfo prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.GeneratedCodeInfo.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.GeneratedCodeInfo.Builder() : new DescriptorProtos.GeneratedCodeInfo.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.GeneratedCodeInfo.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.GeneratedCodeInfo.Builder(parent);
      }

      public static DescriptorProtos.GeneratedCodeInfo getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.GeneratedCodeInfo> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.GeneratedCodeInfo> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.GeneratedCodeInfo getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Annotation extends GeneratedMessageV3 implements DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder {
         private static final long serialVersionUID = 0L;
         private int bitField0_;
         public static final int PATH_FIELD_NUMBER = 1;
         private Internal.IntList path_;
         private int pathMemoizedSerializedSize = -1;
         public static final int SOURCE_FILE_FIELD_NUMBER = 2;
         private volatile Object sourceFile_;
         public static final int BEGIN_FIELD_NUMBER = 3;
         private int begin_;
         public static final int END_FIELD_NUMBER = 4;
         private int end_;
         private byte memoizedIsInitialized = -1;
         private static final DescriptorProtos.GeneratedCodeInfo.Annotation DEFAULT_INSTANCE = new DescriptorProtos.GeneratedCodeInfo.Annotation();
         @Deprecated
         public static final Parser<DescriptorProtos.GeneratedCodeInfo.Annotation> PARSER = new AbstractParser<DescriptorProtos.GeneratedCodeInfo.Annotation>() {
            public DescriptorProtos.GeneratedCodeInfo.Annotation parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new DescriptorProtos.GeneratedCodeInfo.Annotation(input, extensionRegistry);
            }
         };

         private Annotation(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
         }

         private Annotation() {
            this.path_ = emptyIntList();
            this.sourceFile_ = "";
         }

         @Override
         protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
            return new DescriptorProtos.GeneratedCodeInfo.Annotation();
         }

         @Override
         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private Annotation(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
               throw new NullPointerException();
            } else {
               int mutable_bitField0_ = 0;
               UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

               try {
                  boolean done = false;

                  while(!done) {
                     int tag = input.readTag();
                     int limit;
                     switch(tag) {
                        case 0:
                           done = true;
                           continue;
                        case 8:
                           if ((mutable_bitField0_ & 1) == 0) {
                              this.path_ = newIntList();
                              mutable_bitField0_ |= 1;
                           }

                           this.path_.addInt(input.readInt32());
                           continue;
                        case 10:
                           int length = input.readRawVarint32();
                           limit = input.pushLimit(length);
                           if ((mutable_bitField0_ & 1) == 0 && input.getBytesUntilLimit() > 0) {
                              this.path_ = newIntList();
                              mutable_bitField0_ |= 1;
                           }
                           break;
                        case 18:
                           ByteString bs = input.readBytes();
                           this.bitField0_ |= 1;
                           this.sourceFile_ = bs;
                           continue;
                        case 24:
                           this.bitField0_ |= 2;
                           this.begin_ = input.readInt32();
                           continue;
                        case 32:
                           this.bitField0_ |= 4;
                           this.end_ = input.readInt32();
                           continue;
                        default:
                           if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                              done = true;
                           }
                           continue;
                     }

                     while(input.getBytesUntilLimit() > 0) {
                        this.path_.addInt(input.readInt32());
                     }

                     input.popLimit(limit);
                  }
               } catch (InvalidProtocolBufferException var14) {
                  throw var14.setUnfinishedMessage(this);
               } catch (UninitializedMessageException var15) {
                  throw var15.asInvalidProtocolBufferException().setUnfinishedMessage(this);
               } catch (IOException var16) {
                  throw new InvalidProtocolBufferException(var16).setUnfinishedMessage(this);
               } finally {
                  if ((mutable_bitField0_ & 1) != 0) {
                     this.path_.makeImmutable();
                  }

                  this.unknownFields = unknownFields.build();
                  this.makeExtensionsImmutable();
               }

            }
         }

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable
               .ensureFieldAccessorsInitialized(
                  DescriptorProtos.GeneratedCodeInfo.Annotation.class, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder.class
               );
         }

         @Override
         public List<Integer> getPathList() {
            return this.path_;
         }

         @Override
         public int getPathCount() {
            return this.path_.size();
         }

         @Override
         public int getPath(int index) {
            return this.path_.getInt(index);
         }

         @Override
         public boolean hasSourceFile() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public String getSourceFile() {
            Object ref = this.sourceFile_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.sourceFile_ = s;
               }

               return s;
            }
         }

         @Override
         public ByteString getSourceFileBytes() {
            Object ref = this.sourceFile_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.sourceFile_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         @Override
         public boolean hasBegin() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public int getBegin() {
            return this.begin_;
         }

         @Override
         public boolean hasEnd() {
            return (this.bitField0_ & 4) != 0;
         }

         @Override
         public int getEnd() {
            return this.end_;
         }

         @Override
         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
               return true;
            } else if (isInitialized == 0) {
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         @Override
         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if (this.getPathList().size() > 0) {
               output.writeUInt32NoTag(10);
               output.writeUInt32NoTag(this.pathMemoizedSerializedSize);
            }

            for(int i = 0; i < this.path_.size(); ++i) {
               output.writeInt32NoTag(this.path_.getInt(i));
            }

            if ((this.bitField0_ & 1) != 0) {
               GeneratedMessageV3.writeString(output, 2, this.sourceFile_);
            }

            if ((this.bitField0_ & 2) != 0) {
               output.writeInt32(3, this.begin_);
            }

            if ((this.bitField0_ & 4) != 0) {
               output.writeInt32(4, this.end_);
            }

            this.unknownFields.writeTo(output);
         }

         @Override
         public int getSerializedSize() {
            int size = this.memoizedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               int dataSize = 0;

               for(int i = 0; i < this.path_.size(); ++i) {
                  dataSize += CodedOutputStream.computeInt32SizeNoTag(this.path_.getInt(i));
               }

               size += dataSize;
               if (!this.getPathList().isEmpty()) {
                  size = ++size + CodedOutputStream.computeInt32SizeNoTag(dataSize);
               }

               this.pathMemoizedSerializedSize = dataSize;
               if ((this.bitField0_ & 1) != 0) {
                  size += GeneratedMessageV3.computeStringSize(2, this.sourceFile_);
               }

               if ((this.bitField0_ & 2) != 0) {
                  size += CodedOutputStream.computeInt32Size(3, this.begin_);
               }

               if ((this.bitField0_ & 4) != 0) {
                  size += CodedOutputStream.computeInt32Size(4, this.end_);
               }

               size += this.unknownFields.getSerializedSize();
               this.memoizedSize = size;
               return size;
            }
         }

         @Override
         public boolean equals(Object obj) {
            if (obj == this) {
               return true;
            } else if (!(obj instanceof DescriptorProtos.GeneratedCodeInfo.Annotation)) {
               return super.equals(obj);
            } else {
               DescriptorProtos.GeneratedCodeInfo.Annotation other = (DescriptorProtos.GeneratedCodeInfo.Annotation)obj;
               if (!this.getPathList().equals(other.getPathList())) {
                  return false;
               } else if (this.hasSourceFile() != other.hasSourceFile()) {
                  return false;
               } else if (this.hasSourceFile() && !this.getSourceFile().equals(other.getSourceFile())) {
                  return false;
               } else if (this.hasBegin() != other.hasBegin()) {
                  return false;
               } else if (this.hasBegin() && this.getBegin() != other.getBegin()) {
                  return false;
               } else if (this.hasEnd() != other.hasEnd()) {
                  return false;
               } else if (this.hasEnd() && this.getEnd() != other.getEnd()) {
                  return false;
               } else {
                  return this.unknownFields.equals(other.unknownFields);
               }
            }
         }

         @Override
         public int hashCode() {
            if (this.memoizedHashCode != 0) {
               return this.memoizedHashCode;
            } else {
               int hash = 41;
               hash = 19 * hash + getDescriptor().hashCode();
               if (this.getPathCount() > 0) {
                  hash = 37 * hash + 1;
                  hash = 53 * hash + this.getPathList().hashCode();
               }

               if (this.hasSourceFile()) {
                  hash = 37 * hash + 2;
                  hash = 53 * hash + this.getSourceFile().hashCode();
               }

               if (this.hasBegin()) {
                  hash = 37 * hash + 3;
                  hash = 53 * hash + this.getBegin();
               }

               if (this.hasEnd()) {
                  hash = 37 * hash + 4;
                  hash = 53 * hash + this.getEnd();
               }

               hash = 29 * hash + this.unknownFields.hashCode();
               this.memoizedHashCode = hash;
               return hash;
            }
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(InputStream input) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseDelimitedFrom(InputStream input) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(CodedInputStream input) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
         }

         public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder newBuilderForType() {
            return newBuilder();
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation.Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation.Builder newBuilder(DescriptorProtos.GeneratedCodeInfo.Annotation prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
         }

         public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder toBuilder() {
            return this == DEFAULT_INSTANCE
               ? new DescriptorProtos.GeneratedCodeInfo.Annotation.Builder()
               : new DescriptorProtos.GeneratedCodeInfo.Annotation.Builder().mergeFrom(this);
         }

         protected DescriptorProtos.GeneratedCodeInfo.Annotation.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
            return new DescriptorProtos.GeneratedCodeInfo.Annotation.Builder(parent);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation getDefaultInstance() {
            return DEFAULT_INSTANCE;
         }

         public static Parser<DescriptorProtos.GeneratedCodeInfo.Annotation> parser() {
            return PARSER;
         }

         @Override
         public Parser<DescriptorProtos.GeneratedCodeInfo.Annotation> getParserForType() {
            return PARSER;
         }

         public DescriptorProtos.GeneratedCodeInfo.Annotation getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
         }

         public static final class Builder
            extends GeneratedMessageV3.Builder<DescriptorProtos.GeneratedCodeInfo.Annotation.Builder>
            implements DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder {
            private int bitField0_;
            private Internal.IntList path_ = GeneratedMessageV3.emptyIntList();
            private Object sourceFile_ = "";
            private int begin_;
            private int end_;

            public static final Descriptors.Descriptor getDescriptor() {
               return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor;
            }

            @Override
            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
               return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                     DescriptorProtos.GeneratedCodeInfo.Annotation.class, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder.class
                  );
            }

            private Builder() {
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
               super(parent);
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               }

            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clear() {
               super.clear();
               this.path_ = GeneratedMessageV3.emptyIntList();
               this.bitField0_ &= -2;
               this.sourceFile_ = "";
               this.bitField0_ &= -3;
               this.begin_ = 0;
               this.bitField0_ &= -5;
               this.end_ = 0;
               this.bitField0_ &= -9;
               return this;
            }

            @Override
            public Descriptors.Descriptor getDescriptorForType() {
               return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation getDefaultInstanceForType() {
               return DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance();
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation build() {
               DescriptorProtos.GeneratedCodeInfo.Annotation result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation buildPartial() {
               DescriptorProtos.GeneratedCodeInfo.Annotation result = new DescriptorProtos.GeneratedCodeInfo.Annotation(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((this.bitField0_ & 1) != 0) {
                  this.path_.makeImmutable();
                  this.bitField0_ &= -2;
               }

               result.path_ = this.path_;
               if ((from_bitField0_ & 2) != 0) {
                  to_bitField0_ |= 1;
               }

               result.sourceFile_ = this.sourceFile_;
               if ((from_bitField0_ & 4) != 0) {
                  result.begin_ = this.begin_;
                  to_bitField0_ |= 2;
               }

               if ((from_bitField0_ & 8) != 0) {
                  result.end_ = this.end_;
                  to_bitField0_ |= 4;
               }

               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clone() {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.clone();
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setField(Descriptors.FieldDescriptor field, Object value) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.setField(field, value);
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clearField(Descriptors.FieldDescriptor field) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.clearField(field);
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.clearOneof(oneof);
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.setRepeatedField(field, index, value);
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.addRepeatedField(field, value);
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder mergeFrom(Message other) {
               if (other instanceof DescriptorProtos.GeneratedCodeInfo.Annotation) {
                  return this.mergeFrom((DescriptorProtos.GeneratedCodeInfo.Annotation)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder mergeFrom(DescriptorProtos.GeneratedCodeInfo.Annotation other) {
               if (other == DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance()) {
                  return this;
               } else {
                  if (!other.path_.isEmpty()) {
                     if (this.path_.isEmpty()) {
                        this.path_ = other.path_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensurePathIsMutable();
                        this.path_.addAll(other.path_);
                     }

                     this.onChanged();
                  }

                  if (other.hasSourceFile()) {
                     this.bitField0_ |= 2;
                     this.sourceFile_ = other.sourceFile_;
                     this.onChanged();
                  }

                  if (other.hasBegin()) {
                     this.setBegin(other.getBegin());
                  }

                  if (other.hasEnd()) {
                     this.setEnd(other.getEnd());
                  }

                  this.mergeUnknownFields(other.unknownFields);
                  this.onChanged();
                  return this;
               }
            }

            @Override
            public final boolean isInitialized() {
               return true;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               DescriptorProtos.GeneratedCodeInfo.Annotation parsedMessage = null;

               try {
                  parsedMessage = DescriptorProtos.GeneratedCodeInfo.Annotation.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException var8) {
                  parsedMessage = (DescriptorProtos.GeneratedCodeInfo.Annotation)var8.getUnfinishedMessage();
                  throw var8.unwrapIOException();
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            private void ensurePathIsMutable() {
               if ((this.bitField0_ & 1) == 0) {
                  this.path_ = GeneratedMessageV3.mutableCopy(this.path_);
                  this.bitField0_ |= 1;
               }

            }

            @Override
            public List<Integer> getPathList() {
               return (List<Integer>)((this.bitField0_ & 1) != 0 ? Collections.unmodifiableList(this.path_) : this.path_);
            }

            @Override
            public int getPathCount() {
               return this.path_.size();
            }

            @Override
            public int getPath(int index) {
               return this.path_.getInt(index);
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setPath(int index, int value) {
               this.ensurePathIsMutable();
               this.path_.setInt(index, value);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder addPath(int value) {
               this.ensurePathIsMutable();
               this.path_.addInt(value);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder addAllPath(Iterable<? extends Integer> values) {
               this.ensurePathIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.path_);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clearPath() {
               this.path_ = GeneratedMessageV3.emptyIntList();
               this.bitField0_ &= -2;
               this.onChanged();
               return this;
            }

            @Override
            public boolean hasSourceFile() {
               return (this.bitField0_ & 2) != 0;
            }

            @Override
            public String getSourceFile() {
               Object ref = this.sourceFile_;
               if (!(ref instanceof String)) {
                  ByteString bs = (ByteString)ref;
                  String s = bs.toStringUtf8();
                  if (bs.isValidUtf8()) {
                     this.sourceFile_ = s;
                  }

                  return s;
               } else {
                  return (String)ref;
               }
            }

            @Override
            public ByteString getSourceFileBytes() {
               Object ref = this.sourceFile_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.sourceFile_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setSourceFile(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 2;
                  this.sourceFile_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clearSourceFile() {
               this.bitField0_ &= -3;
               this.sourceFile_ = DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance().getSourceFile();
               this.onChanged();
               return this;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setSourceFileBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 2;
                  this.sourceFile_ = value;
                  this.onChanged();
                  return this;
               }
            }

            @Override
            public boolean hasBegin() {
               return (this.bitField0_ & 4) != 0;
            }

            @Override
            public int getBegin() {
               return this.begin_;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setBegin(int value) {
               this.bitField0_ |= 4;
               this.begin_ = value;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clearBegin() {
               this.bitField0_ &= -5;
               this.begin_ = 0;
               this.onChanged();
               return this;
            }

            @Override
            public boolean hasEnd() {
               return (this.bitField0_ & 8) != 0;
            }

            @Override
            public int getEnd() {
               return this.end_;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setEnd(int value) {
               this.bitField0_ |= 8;
               this.end_ = value;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clearEnd() {
               this.bitField0_ &= -9;
               this.end_ = 0;
               this.onChanged();
               return this;
            }

            public final DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setUnknownFields(UnknownFieldSet unknownFields) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.setUnknownFields(unknownFields);
            }

            public final DescriptorProtos.GeneratedCodeInfo.Annotation.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.mergeUnknownFields(unknownFields);
            }
         }
      }

      public interface AnnotationOrBuilder extends MessageOrBuilder {
         List<Integer> getPathList();

         int getPathCount();

         int getPath(int var1);

         boolean hasSourceFile();

         String getSourceFile();

         ByteString getSourceFileBytes();

         boolean hasBegin();

         int getBegin();

         boolean hasEnd();

         int getEnd();
      }

      public static final class Builder
         extends GeneratedMessageV3.Builder<DescriptorProtos.GeneratedCodeInfo.Builder>
         implements DescriptorProtos.GeneratedCodeInfoOrBuilder {
         private int bitField0_;
         private List<DescriptorProtos.GeneratedCodeInfo.Annotation> annotation_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.GeneratedCodeInfo.Annotation, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder, DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder> annotationBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.GeneratedCodeInfo.class, DescriptorProtos.GeneratedCodeInfo.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getAnnotationFieldBuilder();
            }

         }

         public DescriptorProtos.GeneratedCodeInfo.Builder clear() {
            super.clear();
            if (this.annotationBuilder_ == null) {
               this.annotation_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.annotationBuilder_.clear();
            }

            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_descriptor;
         }

         public DescriptorProtos.GeneratedCodeInfo getDefaultInstanceForType() {
            return DescriptorProtos.GeneratedCodeInfo.getDefaultInstance();
         }

         public DescriptorProtos.GeneratedCodeInfo build() {
            DescriptorProtos.GeneratedCodeInfo result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.GeneratedCodeInfo buildPartial() {
            DescriptorProtos.GeneratedCodeInfo result = new DescriptorProtos.GeneratedCodeInfo(this);
            int from_bitField0_ = this.bitField0_;
            if (this.annotationBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.annotation_ = Collections.unmodifiableList(this.annotation_);
                  this.bitField0_ &= -2;
               }

               result.annotation_ = this.annotation_;
            } else {
               result.annotation_ = this.annotationBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder clone() {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.clone();
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.setField(field, value);
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.clearField(field);
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.addRepeatedField(field, value);
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.GeneratedCodeInfo) {
               return this.mergeFrom((DescriptorProtos.GeneratedCodeInfo)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder mergeFrom(DescriptorProtos.GeneratedCodeInfo other) {
            if (other == DescriptorProtos.GeneratedCodeInfo.getDefaultInstance()) {
               return this;
            } else {
               if (this.annotationBuilder_ == null) {
                  if (!other.annotation_.isEmpty()) {
                     if (this.annotation_.isEmpty()) {
                        this.annotation_ = other.annotation_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureAnnotationIsMutable();
                        this.annotation_.addAll(other.annotation_);
                     }

                     this.onChanged();
                  }
               } else if (!other.annotation_.isEmpty()) {
                  if (this.annotationBuilder_.isEmpty()) {
                     this.annotationBuilder_.dispose();
                     this.annotationBuilder_ = null;
                     this.annotation_ = other.annotation_;
                     this.bitField0_ &= -2;
                     this.annotationBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getAnnotationFieldBuilder() : null;
                  } else {
                     this.annotationBuilder_.addAllMessages(other.annotation_);
                  }
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            return true;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.GeneratedCodeInfo parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.GeneratedCodeInfo.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.GeneratedCodeInfo)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureAnnotationIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.annotation_ = new ArrayList(this.annotation_);
               this.bitField0_ |= 1;
            }

         }

         @Override
         public List<DescriptorProtos.GeneratedCodeInfo.Annotation> getAnnotationList() {
            return this.annotationBuilder_ == null ? Collections.unmodifiableList(this.annotation_) : this.annotationBuilder_.getMessageList();
         }

         @Override
         public int getAnnotationCount() {
            return this.annotationBuilder_ == null ? this.annotation_.size() : this.annotationBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.GeneratedCodeInfo.Annotation getAnnotation(int index) {
            return this.annotationBuilder_ == null
               ? (DescriptorProtos.GeneratedCodeInfo.Annotation)this.annotation_.get(index)
               : this.annotationBuilder_.getMessage(index);
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder setAnnotation(int index, DescriptorProtos.GeneratedCodeInfo.Annotation value) {
            if (this.annotationBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureAnnotationIsMutable();
               this.annotation_.set(index, value);
               this.onChanged();
            } else {
               this.annotationBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder setAnnotation(int index, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder builderForValue) {
            if (this.annotationBuilder_ == null) {
               this.ensureAnnotationIsMutable();
               this.annotation_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.annotationBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder addAnnotation(DescriptorProtos.GeneratedCodeInfo.Annotation value) {
            if (this.annotationBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureAnnotationIsMutable();
               this.annotation_.add(value);
               this.onChanged();
            } else {
               this.annotationBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder addAnnotation(int index, DescriptorProtos.GeneratedCodeInfo.Annotation value) {
            if (this.annotationBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureAnnotationIsMutable();
               this.annotation_.add(index, value);
               this.onChanged();
            } else {
               this.annotationBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder addAnnotation(DescriptorProtos.GeneratedCodeInfo.Annotation.Builder builderForValue) {
            if (this.annotationBuilder_ == null) {
               this.ensureAnnotationIsMutable();
               this.annotation_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.annotationBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder addAnnotation(int index, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder builderForValue) {
            if (this.annotationBuilder_ == null) {
               this.ensureAnnotationIsMutable();
               this.annotation_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.annotationBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder addAllAnnotation(Iterable<? extends DescriptorProtos.GeneratedCodeInfo.Annotation> values) {
            if (this.annotationBuilder_ == null) {
               this.ensureAnnotationIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.annotation_);
               this.onChanged();
            } else {
               this.annotationBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder clearAnnotation() {
            if (this.annotationBuilder_ == null) {
               this.annotation_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.annotationBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder removeAnnotation(int index) {
            if (this.annotationBuilder_ == null) {
               this.ensureAnnotationIsMutable();
               this.annotation_.remove(index);
               this.onChanged();
            } else {
               this.annotationBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder getAnnotationBuilder(int index) {
            return this.getAnnotationFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder getAnnotationOrBuilder(int index) {
            return this.annotationBuilder_ == null
               ? (DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder)this.annotation_.get(index)
               : this.annotationBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder> getAnnotationOrBuilderList() {
            return this.annotationBuilder_ != null ? this.annotationBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.annotation_);
         }

         public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder addAnnotationBuilder() {
            return this.getAnnotationFieldBuilder().addBuilder(DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance());
         }

         public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder addAnnotationBuilder(int index) {
            return this.getAnnotationFieldBuilder().addBuilder(index, DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance());
         }

         public List<DescriptorProtos.GeneratedCodeInfo.Annotation.Builder> getAnnotationBuilderList() {
            return this.getAnnotationFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.GeneratedCodeInfo.Annotation, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder, DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder> getAnnotationFieldBuilder() {
            if (this.annotationBuilder_ == null) {
               this.annotationBuilder_ = new RepeatedFieldBuilderV3<>(this.annotation_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.annotation_ = null;
            }

            return this.annotationBuilder_;
         }

         public final DescriptorProtos.GeneratedCodeInfo.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.GeneratedCodeInfo.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface GeneratedCodeInfoOrBuilder extends MessageOrBuilder {
      List<DescriptorProtos.GeneratedCodeInfo.Annotation> getAnnotationList();

      DescriptorProtos.GeneratedCodeInfo.Annotation getAnnotation(int var1);

      int getAnnotationCount();

      List<? extends DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder> getAnnotationOrBuilderList();

      DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder getAnnotationOrBuilder(int var1);
   }

   public static final class MessageOptions
      extends GeneratedMessageV3.ExtendableMessage<DescriptorProtos.MessageOptions>
      implements DescriptorProtos.MessageOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int MESSAGE_SET_WIRE_FORMAT_FIELD_NUMBER = 1;
      private boolean messageSetWireFormat_;
      public static final int NO_STANDARD_DESCRIPTOR_ACCESSOR_FIELD_NUMBER = 2;
      private boolean noStandardDescriptorAccessor_;
      public static final int DEPRECATED_FIELD_NUMBER = 3;
      private boolean deprecated_;
      public static final int MAP_ENTRY_FIELD_NUMBER = 7;
      private boolean mapEntry_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.MessageOptions DEFAULT_INSTANCE = new DescriptorProtos.MessageOptions();
      @Deprecated
      public static final Parser<DescriptorProtos.MessageOptions> PARSER = new AbstractParser<DescriptorProtos.MessageOptions>() {
         public DescriptorProtos.MessageOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.MessageOptions(input, extensionRegistry);
         }
      };

      private MessageOptions(GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.MessageOptions, ?> builder) {
         super(builder);
      }

      private MessageOptions() {
         this.uninterpretedOption_ = Collections.emptyList();
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.MessageOptions();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private MessageOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.messageSetWireFormat_ = input.readBool();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.noStandardDescriptorAccessor_ = input.readBool();
                        break;
                     case 24:
                        this.bitField0_ |= 4;
                        this.deprecated_ = input.readBool();
                        break;
                     case 56:
                        this.bitField0_ |= 8;
                        this.mapEntry_ = input.readBool();
                        break;
                     case 7994:
                        if ((mutable_bitField0_ & 16) == 0) {
                           this.uninterpretedOption_ = new ArrayList();
                           mutable_bitField0_ |= 16;
                        }

                        this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var13) {
               throw var13.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw new InvalidProtocolBufferException(var14).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 16) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_MessageOptions_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_MessageOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.MessageOptions.class, DescriptorProtos.MessageOptions.Builder.class);
      }

      @Override
      public boolean hasMessageSetWireFormat() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public boolean getMessageSetWireFormat() {
         return this.messageSetWireFormat_;
      }

      @Override
      public boolean hasNoStandardDescriptorAccessor() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public boolean getNoStandardDescriptorAccessor() {
         return this.noStandardDescriptorAccessor_;
      }

      @Override
      public boolean hasDeprecated() {
         return (this.bitField0_ & 4) != 0;
      }

      @Override
      public boolean getDeprecated() {
         return this.deprecated_;
      }

      @Override
      public boolean hasMapEntry() {
         return (this.bitField0_ & 8) != 0;
      }

      @Override
      public boolean getMapEntry() {
         return this.mapEntry_;
      }

      @Override
      public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      @Override
      public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      @Override
      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      @Override
      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index);
      }

      @Override
      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         GeneratedMessageV3.ExtendableMessage<DescriptorProtos.MessageOptions>.ExtensionWriter extensionWriter = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            output.writeBool(1, this.messageSetWireFormat_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeBool(2, this.noStandardDescriptorAccessor_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeBool(3, this.deprecated_);
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeBool(7, this.mapEntry_);
         }

         for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
            output.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(i));
         }

         extensionWriter.writeUntil(536870912, output);
         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeBoolSize(1, this.messageSetWireFormat_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeBoolSize(2, this.noStandardDescriptorAccessor_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeBoolSize(3, this.deprecated_);
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeBoolSize(7, this.mapEntry_);
            }

            for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(i));
            }

            size += this.extensionsSerializedSize();
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.MessageOptions)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.MessageOptions other = (DescriptorProtos.MessageOptions)obj;
            if (this.hasMessageSetWireFormat() != other.hasMessageSetWireFormat()) {
               return false;
            } else if (this.hasMessageSetWireFormat() && this.getMessageSetWireFormat() != other.getMessageSetWireFormat()) {
               return false;
            } else if (this.hasNoStandardDescriptorAccessor() != other.hasNoStandardDescriptorAccessor()) {
               return false;
            } else if (this.hasNoStandardDescriptorAccessor() && this.getNoStandardDescriptorAccessor() != other.getNoStandardDescriptorAccessor()) {
               return false;
            } else if (this.hasDeprecated() != other.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != other.getDeprecated()) {
               return false;
            } else if (this.hasMapEntry() != other.hasMapEntry()) {
               return false;
            } else if (this.hasMapEntry() && this.getMapEntry() != other.getMapEntry()) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(other.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(other.getExtensionFields());
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasMessageSetWireFormat()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + Internal.hashBoolean(this.getMessageSetWireFormat());
            }

            if (this.hasNoStandardDescriptorAccessor()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + Internal.hashBoolean(this.getNoStandardDescriptorAccessor());
            }

            if (this.hasDeprecated()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.hasMapEntry()) {
               hash = 37 * hash + 7;
               hash = 53 * hash + Internal.hashBoolean(this.getMapEntry());
            }

            if (this.getUninterpretedOptionCount() > 0) {
               hash = 37 * hash + 999;
               hash = 53 * hash + this.getUninterpretedOptionList().hashCode();
            }

            hash = hashFields(hash, this.getExtensionFields());
            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.MessageOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.MessageOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.MessageOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.MessageOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.MessageOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.MessageOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.MessageOptions parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.MessageOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.MessageOptions parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.MessageOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.MessageOptions parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.MessageOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.MessageOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.MessageOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.MessageOptions.Builder newBuilder(DescriptorProtos.MessageOptions prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.MessageOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.MessageOptions.Builder() : new DescriptorProtos.MessageOptions.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.MessageOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.MessageOptions.Builder(parent);
      }

      public static DescriptorProtos.MessageOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.MessageOptions> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.MessageOptions> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.MessageOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.MessageOptions, DescriptorProtos.MessageOptions.Builder>
         implements DescriptorProtos.MessageOptionsOrBuilder {
         private int bitField0_;
         private boolean messageSetWireFormat_;
         private boolean noStandardDescriptorAccessor_;
         private boolean deprecated_;
         private boolean mapEntry_;
         private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_MessageOptions_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_MessageOptions_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.MessageOptions.class, DescriptorProtos.MessageOptions.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.MessageOptions.Builder clear() {
            super.clear();
            this.messageSetWireFormat_ = false;
            this.bitField0_ &= -2;
            this.noStandardDescriptorAccessor_ = false;
            this.bitField0_ &= -3;
            this.deprecated_ = false;
            this.bitField0_ &= -5;
            this.mapEntry_ = false;
            this.bitField0_ &= -9;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -17;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_MessageOptions_descriptor;
         }

         public DescriptorProtos.MessageOptions getDefaultInstanceForType() {
            return DescriptorProtos.MessageOptions.getDefaultInstance();
         }

         public DescriptorProtos.MessageOptions build() {
            DescriptorProtos.MessageOptions result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.MessageOptions buildPartial() {
            DescriptorProtos.MessageOptions result = new DescriptorProtos.MessageOptions(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.messageSetWireFormat_ = this.messageSetWireFormat_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               result.noStandardDescriptorAccessor_ = this.noStandardDescriptorAccessor_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               result.deprecated_ = this.deprecated_;
               to_bitField0_ |= 4;
            }

            if ((from_bitField0_ & 8) != 0) {
               result.mapEntry_ = this.mapEntry_;
               to_bitField0_ |= 8;
            }

            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 16) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -17;
               }

               result.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.MessageOptions.Builder clone() {
            return (DescriptorProtos.MessageOptions.Builder)super.clone();
         }

         public DescriptorProtos.MessageOptions.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.MessageOptions.Builder)super.setField(field, value);
         }

         public DescriptorProtos.MessageOptions.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.MessageOptions.Builder)super.clearField(field);
         }

         public DescriptorProtos.MessageOptions.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.MessageOptions.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.MessageOptions.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.MessageOptions.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.MessageOptions.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.MessageOptions.Builder)super.addRepeatedField(field, value);
         }

         public <Type> DescriptorProtos.MessageOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.MessageOptions, Type> extension, Type value
         ) {
            return (DescriptorProtos.MessageOptions.Builder)super.setExtension(extension, value);
         }

         public <Type> DescriptorProtos.MessageOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.MessageOptions, List<Type>> extension, int index, Type value
         ) {
            return (DescriptorProtos.MessageOptions.Builder)super.setExtension(extension, index, value);
         }

         public <Type> DescriptorProtos.MessageOptions.Builder addExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.MessageOptions, List<Type>> extension, Type value
         ) {
            return (DescriptorProtos.MessageOptions.Builder)super.addExtension(extension, value);
         }

         public <Type> DescriptorProtos.MessageOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.MessageOptions, ?> extension) {
            return (DescriptorProtos.MessageOptions.Builder)super.clearExtension(extension);
         }

         public DescriptorProtos.MessageOptions.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.MessageOptions) {
               return this.mergeFrom((DescriptorProtos.MessageOptions)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.MessageOptions.Builder mergeFrom(DescriptorProtos.MessageOptions other) {
            if (other == DescriptorProtos.MessageOptions.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasMessageSetWireFormat()) {
                  this.setMessageSetWireFormat(other.getMessageSetWireFormat());
               }

               if (other.hasNoStandardDescriptorAccessor()) {
                  this.setNoStandardDescriptorAccessor(other.getNoStandardDescriptorAccessor());
               }

               if (other.hasDeprecated()) {
                  this.setDeprecated(other.getDeprecated());
               }

               if (other.hasMapEntry()) {
                  this.setMapEntry(other.getMapEntry());
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!other.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = other.uninterpretedOption_;
                        this.bitField0_ &= -17;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(other.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!other.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = other.uninterpretedOption_;
                     this.bitField0_ &= -17;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(other);
               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  return false;
               }
            }

            return this.extensionsAreInitialized();
         }

         public DescriptorProtos.MessageOptions.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.MessageOptions parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.MessageOptions.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.MessageOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasMessageSetWireFormat() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public boolean getMessageSetWireFormat() {
            return this.messageSetWireFormat_;
         }

         public DescriptorProtos.MessageOptions.Builder setMessageSetWireFormat(boolean value) {
            this.bitField0_ |= 1;
            this.messageSetWireFormat_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MessageOptions.Builder clearMessageSetWireFormat() {
            this.bitField0_ &= -2;
            this.messageSetWireFormat_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasNoStandardDescriptorAccessor() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public boolean getNoStandardDescriptorAccessor() {
            return this.noStandardDescriptorAccessor_;
         }

         public DescriptorProtos.MessageOptions.Builder setNoStandardDescriptorAccessor(boolean value) {
            this.bitField0_ |= 2;
            this.noStandardDescriptorAccessor_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MessageOptions.Builder clearNoStandardDescriptorAccessor() {
            this.bitField0_ &= -3;
            this.noStandardDescriptorAccessor_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasDeprecated() {
            return (this.bitField0_ & 4) != 0;
         }

         @Override
         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.MessageOptions.Builder setDeprecated(boolean value) {
            this.bitField0_ |= 4;
            this.deprecated_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MessageOptions.Builder clearDeprecated() {
            this.bitField0_ &= -5;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasMapEntry() {
            return (this.bitField0_ & 8) != 0;
         }

         @Override
         public boolean getMapEntry() {
            return this.mapEntry_;
         }

         public DescriptorProtos.MessageOptions.Builder setMapEntry(boolean value) {
            this.bitField0_ |= 8;
            this.mapEntry_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MessageOptions.Builder clearMapEntry() {
            this.bitField0_ &= -9;
            this.mapEntry_ = false;
            this.onChanged();
            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 16) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 16;
            }

         }

         @Override
         public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null
               ? Collections.unmodifiableList(this.uninterpretedOption_)
               : this.uninterpretedOptionBuilder_.getMessageList();
         }

         @Override
         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessage(index);
         }

         public DescriptorProtos.MessageOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -17;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder removeUninterpretedOption(int index) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(index);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null
               ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList()
               : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(index, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(
                  this.uninterpretedOption_, (this.bitField0_ & 16) != 0, this.getParentForChildren(), this.isClean()
               );
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.MessageOptions.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.MessageOptions.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.MessageOptions.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.MessageOptions.Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface MessageOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder<DescriptorProtos.MessageOptions> {
      boolean hasMessageSetWireFormat();

      boolean getMessageSetWireFormat();

      boolean hasNoStandardDescriptorAccessor();

      boolean getNoStandardDescriptorAccessor();

      boolean hasDeprecated();

      boolean getDeprecated();

      boolean hasMapEntry();

      boolean getMapEntry();

      List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class MethodDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.MethodDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int INPUT_TYPE_FIELD_NUMBER = 2;
      private volatile Object inputType_;
      public static final int OUTPUT_TYPE_FIELD_NUMBER = 3;
      private volatile Object outputType_;
      public static final int OPTIONS_FIELD_NUMBER = 4;
      private DescriptorProtos.MethodOptions options_;
      public static final int CLIENT_STREAMING_FIELD_NUMBER = 5;
      private boolean clientStreaming_;
      public static final int SERVER_STREAMING_FIELD_NUMBER = 6;
      private boolean serverStreaming_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.MethodDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.MethodDescriptorProto();
      @Deprecated
      public static final Parser<DescriptorProtos.MethodDescriptorProto> PARSER = new AbstractParser<DescriptorProtos.MethodDescriptorProto>() {
         public DescriptorProtos.MethodDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.MethodDescriptorProto(input, extensionRegistry);
         }
      };

      private MethodDescriptorProto(GeneratedMessageV3.Builder<?> builder) {
         super(builder);
      }

      private MethodDescriptorProto() {
         this.name_ = "";
         this.inputType_ = "";
         this.outputType_ = "";
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.MethodDescriptorProto();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private MethodDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 10: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.name_ = bs;
                        break;
                     }
                     case 18: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 2;
                        this.inputType_ = bs;
                        break;
                     }
                     case 26: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 4;
                        this.outputType_ = bs;
                        break;
                     }
                     case 34:
                        DescriptorProtos.MethodOptions.Builder subBuilder = null;
                        if ((this.bitField0_ & 8) != 0) {
                           subBuilder = this.options_.toBuilder();
                        }

                        this.options_ = input.readMessage(DescriptorProtos.MethodOptions.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.options_);
                           this.options_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 8;
                        break;
                     case 40:
                        this.bitField0_ |= 16;
                        this.clientStreaming_ = input.readBool();
                        break;
                     case 48:
                        this.bitField0_ |= 32;
                        this.serverStreaming_ = input.readBool();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var13) {
               throw var13.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var14) {
               throw var14.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var15) {
               throw new InvalidProtocolBufferException(var15).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.MethodDescriptorProto.class, DescriptorProtos.MethodDescriptorProto.Builder.class);
      }

      @Override
      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public String getName() {
         Object ref = this.name_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.name_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getNameBytes() {
         Object ref = this.name_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.name_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasInputType() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public String getInputType() {
         Object ref = this.inputType_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.inputType_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getInputTypeBytes() {
         Object ref = this.inputType_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.inputType_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasOutputType() {
         return (this.bitField0_ & 4) != 0;
      }

      @Override
      public String getOutputType() {
         Object ref = this.outputType_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.outputType_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getOutputTypeBytes() {
         Object ref = this.outputType_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.outputType_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasOptions() {
         return (this.bitField0_ & 8) != 0;
      }

      @Override
      public DescriptorProtos.MethodOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.MethodOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public DescriptorProtos.MethodOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.MethodOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public boolean hasClientStreaming() {
         return (this.bitField0_ & 16) != 0;
      }

      @Override
      public boolean getClientStreaming() {
         return this.clientStreaming_;
      }

      @Override
      public boolean hasServerStreaming() {
         return (this.bitField0_ & 32) != 0;
      }

      @Override
      public boolean getServerStreaming() {
         return this.serverStreaming_;
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else if (this.hasOptions() && !this.getOptions().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.name_);
         }

         if ((this.bitField0_ & 2) != 0) {
            GeneratedMessageV3.writeString(output, 2, this.inputType_);
         }

         if ((this.bitField0_ & 4) != 0) {
            GeneratedMessageV3.writeString(output, 3, this.outputType_);
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeMessage(4, this.getOptions());
         }

         if ((this.bitField0_ & 16) != 0) {
            output.writeBool(5, this.clientStreaming_);
         }

         if ((this.bitField0_ & 32) != 0) {
            output.writeBool(6, this.serverStreaming_);
         }

         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += GeneratedMessageV3.computeStringSize(2, this.inputType_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += GeneratedMessageV3.computeStringSize(3, this.outputType_);
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeMessageSize(4, this.getOptions());
            }

            if ((this.bitField0_ & 16) != 0) {
               size += CodedOutputStream.computeBoolSize(5, this.clientStreaming_);
            }

            if ((this.bitField0_ & 32) != 0) {
               size += CodedOutputStream.computeBoolSize(6, this.serverStreaming_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.MethodDescriptorProto)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.MethodDescriptorProto other = (DescriptorProtos.MethodDescriptorProto)obj;
            if (this.hasName() != other.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(other.getName())) {
               return false;
            } else if (this.hasInputType() != other.hasInputType()) {
               return false;
            } else if (this.hasInputType() && !this.getInputType().equals(other.getInputType())) {
               return false;
            } else if (this.hasOutputType() != other.hasOutputType()) {
               return false;
            } else if (this.hasOutputType() && !this.getOutputType().equals(other.getOutputType())) {
               return false;
            } else if (this.hasOptions() != other.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(other.getOptions())) {
               return false;
            } else if (this.hasClientStreaming() != other.hasClientStreaming()) {
               return false;
            } else if (this.hasClientStreaming() && this.getClientStreaming() != other.getClientStreaming()) {
               return false;
            } else if (this.hasServerStreaming() != other.hasServerStreaming()) {
               return false;
            } else if (this.hasServerStreaming() && this.getServerStreaming() != other.getServerStreaming()) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasName()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getName().hashCode();
            }

            if (this.hasInputType()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getInputType().hashCode();
            }

            if (this.hasOutputType()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getOutputType().hashCode();
            }

            if (this.hasOptions()) {
               hash = 37 * hash + 4;
               hash = 53 * hash + this.getOptions().hashCode();
            }

            if (this.hasClientStreaming()) {
               hash = 37 * hash + 5;
               hash = 53 * hash + Internal.hashBoolean(this.getClientStreaming());
            }

            if (this.hasServerStreaming()) {
               hash = 37 * hash + 6;
               hash = 53 * hash + Internal.hashBoolean(this.getServerStreaming());
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.MethodDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.MethodDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.MethodDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.MethodDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.MethodDescriptorProto.Builder newBuilder(DescriptorProtos.MethodDescriptorProto prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.MethodDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE
            ? new DescriptorProtos.MethodDescriptorProto.Builder()
            : new DescriptorProtos.MethodDescriptorProto.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.MethodDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.MethodDescriptorProto.Builder(parent);
      }

      public static DescriptorProtos.MethodDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.MethodDescriptorProto> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.MethodDescriptorProto> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.MethodDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.Builder<DescriptorProtos.MethodDescriptorProto.Builder>
         implements DescriptorProtos.MethodDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_ = "";
         private Object inputType_ = "";
         private Object outputType_ = "";
         private DescriptorProtos.MethodOptions options_;
         private SingleFieldBuilderV3<DescriptorProtos.MethodOptions, DescriptorProtos.MethodOptions.Builder, DescriptorProtos.MethodOptionsOrBuilder> optionsBuilder_;
         private boolean clientStreaming_;
         private boolean serverStreaming_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.MethodDescriptorProto.class, DescriptorProtos.MethodDescriptorProto.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getOptionsFieldBuilder();
            }

         }

         public DescriptorProtos.MethodDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            this.inputType_ = "";
            this.bitField0_ &= -3;
            this.outputType_ = "";
            this.bitField0_ &= -5;
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -9;
            this.clientStreaming_ = false;
            this.bitField0_ &= -17;
            this.serverStreaming_ = false;
            this.bitField0_ &= -33;
            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_descriptor;
         }

         public DescriptorProtos.MethodDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.MethodDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.MethodDescriptorProto build() {
            DescriptorProtos.MethodDescriptorProto result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.MethodDescriptorProto buildPartial() {
            DescriptorProtos.MethodDescriptorProto result = new DescriptorProtos.MethodDescriptorProto(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.name_ = this.name_;
            if ((from_bitField0_ & 2) != 0) {
               to_bitField0_ |= 2;
            }

            result.inputType_ = this.inputType_;
            if ((from_bitField0_ & 4) != 0) {
               to_bitField0_ |= 4;
            }

            result.outputType_ = this.outputType_;
            if ((from_bitField0_ & 8) != 0) {
               if (this.optionsBuilder_ == null) {
                  result.options_ = this.options_;
               } else {
                  result.options_ = this.optionsBuilder_.build();
               }

               to_bitField0_ |= 8;
            }

            if ((from_bitField0_ & 16) != 0) {
               result.clientStreaming_ = this.clientStreaming_;
               to_bitField0_ |= 16;
            }

            if ((from_bitField0_ & 32) != 0) {
               result.serverStreaming_ = this.serverStreaming_;
               to_bitField0_ |= 32;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clone() {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.setField(field, value);
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.clearField(field);
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.MethodDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.addRepeatedField(field, value);
         }

         public DescriptorProtos.MethodDescriptorProto.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.MethodDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.MethodDescriptorProto)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder mergeFrom(DescriptorProtos.MethodDescriptorProto other) {
            if (other == DescriptorProtos.MethodDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = other.name_;
                  this.onChanged();
               }

               if (other.hasInputType()) {
                  this.bitField0_ |= 2;
                  this.inputType_ = other.inputType_;
                  this.onChanged();
               }

               if (other.hasOutputType()) {
                  this.bitField0_ |= 4;
                  this.outputType_ = other.outputType_;
                  this.onChanged();
               }

               if (other.hasOptions()) {
                  this.mergeOptions(other.getOptions());
               }

               if (other.hasClientStreaming()) {
                  this.setClientStreaming(other.getClientStreaming());
               }

               if (other.hasServerStreaming()) {
                  this.setServerStreaming(other.getServerStreaming());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            return !this.hasOptions() || this.getOptions().isInitialized();
         }

         public DescriptorProtos.MethodDescriptorProto.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.MethodDescriptorProto parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.MethodDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.MethodDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public String getName() {
            Object ref = this.name_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.name_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.name_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.MethodDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasInputType() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public String getInputType() {
            Object ref = this.inputType_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.inputType_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getInputTypeBytes() {
            Object ref = this.inputType_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.inputType_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setInputType(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.inputType_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearInputType() {
            this.bitField0_ &= -3;
            this.inputType_ = DescriptorProtos.MethodDescriptorProto.getDefaultInstance().getInputType();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setInputTypeBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.inputType_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasOutputType() {
            return (this.bitField0_ & 4) != 0;
         }

         @Override
         public String getOutputType() {
            Object ref = this.outputType_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.outputType_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getOutputTypeBytes() {
            Object ref = this.outputType_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.outputType_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setOutputType(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.outputType_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearOutputType() {
            this.bitField0_ &= -5;
            this.outputType_ = DescriptorProtos.MethodDescriptorProto.getDefaultInstance().getOutputType();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setOutputTypeBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.outputType_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasOptions() {
            return (this.bitField0_ & 8) != 0;
         }

         @Override
         public DescriptorProtos.MethodOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.MethodOptions.getDefaultInstance() : this.options_;
            } else {
               return this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setOptions(DescriptorProtos.MethodOptions value) {
            if (this.optionsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.options_ = value;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 8;
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setOptions(DescriptorProtos.MethodOptions.Builder builderForValue) {
            if (this.optionsBuilder_ == null) {
               this.options_ = builderForValue.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 8;
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder mergeOptions(DescriptorProtos.MethodOptions value) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 8) != 0 && this.options_ != null && this.options_ != DescriptorProtos.MethodOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.MethodOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
               } else {
                  this.options_ = value;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 8;
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -9;
            return this;
         }

         public DescriptorProtos.MethodOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 8;
            this.onChanged();
            return this.getOptionsFieldBuilder().getBuilder();
         }

         @Override
         public DescriptorProtos.MethodOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.MethodOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3<DescriptorProtos.MethodOptions, DescriptorProtos.MethodOptions.Builder, DescriptorProtos.MethodOptionsOrBuilder> getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3<>(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         @Override
         public boolean hasClientStreaming() {
            return (this.bitField0_ & 16) != 0;
         }

         @Override
         public boolean getClientStreaming() {
            return this.clientStreaming_;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setClientStreaming(boolean value) {
            this.bitField0_ |= 16;
            this.clientStreaming_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearClientStreaming() {
            this.bitField0_ &= -17;
            this.clientStreaming_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasServerStreaming() {
            return (this.bitField0_ & 32) != 0;
         }

         @Override
         public boolean getServerStreaming() {
            return this.serverStreaming_;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setServerStreaming(boolean value) {
            this.bitField0_ |= 32;
            this.serverStreaming_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearServerStreaming() {
            this.bitField0_ &= -33;
            this.serverStreaming_ = false;
            this.onChanged();
            return this;
         }

         public final DescriptorProtos.MethodDescriptorProto.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.MethodDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface MethodDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      boolean hasInputType();

      String getInputType();

      ByteString getInputTypeBytes();

      boolean hasOutputType();

      String getOutputType();

      ByteString getOutputTypeBytes();

      boolean hasOptions();

      DescriptorProtos.MethodOptions getOptions();

      DescriptorProtos.MethodOptionsOrBuilder getOptionsOrBuilder();

      boolean hasClientStreaming();

      boolean getClientStreaming();

      boolean hasServerStreaming();

      boolean getServerStreaming();
   }

   public static final class MethodOptions
      extends GeneratedMessageV3.ExtendableMessage<DescriptorProtos.MethodOptions>
      implements DescriptorProtos.MethodOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int DEPRECATED_FIELD_NUMBER = 33;
      private boolean deprecated_;
      public static final int IDEMPOTENCY_LEVEL_FIELD_NUMBER = 34;
      private int idempotencyLevel_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.MethodOptions DEFAULT_INSTANCE = new DescriptorProtos.MethodOptions();
      @Deprecated
      public static final Parser<DescriptorProtos.MethodOptions> PARSER = new AbstractParser<DescriptorProtos.MethodOptions>() {
         public DescriptorProtos.MethodOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.MethodOptions(input, extensionRegistry);
         }
      };

      private MethodOptions(GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.MethodOptions, ?> builder) {
         super(builder);
      }

      private MethodOptions() {
         this.idempotencyLevel_ = 0;
         this.uninterpretedOption_ = Collections.emptyList();
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.MethodOptions();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private MethodOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 264:
                        this.bitField0_ |= 1;
                        this.deprecated_ = input.readBool();
                        break;
                     case 272:
                        int rawValue = input.readEnum();
                        DescriptorProtos.MethodOptions.IdempotencyLevel value = DescriptorProtos.MethodOptions.IdempotencyLevel.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(34, rawValue);
                        } else {
                           this.bitField0_ |= 2;
                           this.idempotencyLevel_ = rawValue;
                        }
                        break;
                     case 7994:
                        if ((mutable_bitField0_ & 4) == 0) {
                           this.uninterpretedOption_ = new ArrayList();
                           mutable_bitField0_ |= 4;
                        }

                        this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var14) {
               throw var14.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var15) {
               throw var15.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var16) {
               throw new InvalidProtocolBufferException(var16).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 4) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_MethodOptions_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_MethodOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.MethodOptions.class, DescriptorProtos.MethodOptions.Builder.class);
      }

      @Override
      public boolean hasDeprecated() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public boolean getDeprecated() {
         return this.deprecated_;
      }

      @Override
      public boolean hasIdempotencyLevel() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public DescriptorProtos.MethodOptions.IdempotencyLevel getIdempotencyLevel() {
         DescriptorProtos.MethodOptions.IdempotencyLevel result = DescriptorProtos.MethodOptions.IdempotencyLevel.valueOf(this.idempotencyLevel_);
         return result == null ? DescriptorProtos.MethodOptions.IdempotencyLevel.IDEMPOTENCY_UNKNOWN : result;
      }

      @Override
      public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      @Override
      public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      @Override
      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      @Override
      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index);
      }

      @Override
      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         GeneratedMessageV3.ExtendableMessage<DescriptorProtos.MethodOptions>.ExtensionWriter extensionWriter = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            output.writeBool(33, this.deprecated_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeEnum(34, this.idempotencyLevel_);
         }

         for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
            output.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(i));
         }

         extensionWriter.writeUntil(536870912, output);
         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeBoolSize(33, this.deprecated_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeEnumSize(34, this.idempotencyLevel_);
            }

            for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(i));
            }

            size += this.extensionsSerializedSize();
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.MethodOptions)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.MethodOptions other = (DescriptorProtos.MethodOptions)obj;
            if (this.hasDeprecated() != other.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != other.getDeprecated()) {
               return false;
            } else if (this.hasIdempotencyLevel() != other.hasIdempotencyLevel()) {
               return false;
            } else if (this.hasIdempotencyLevel() && this.idempotencyLevel_ != other.idempotencyLevel_) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(other.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(other.getExtensionFields());
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasDeprecated()) {
               hash = 37 * hash + 33;
               hash = 53 * hash + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.hasIdempotencyLevel()) {
               hash = 37 * hash + 34;
               hash = 53 * hash + this.idempotencyLevel_;
            }

            if (this.getUninterpretedOptionCount() > 0) {
               hash = 37 * hash + 999;
               hash = 53 * hash + this.getUninterpretedOptionList().hashCode();
            }

            hash = hashFields(hash, this.getExtensionFields());
            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.MethodOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.MethodOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.MethodOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.MethodOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.MethodOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.MethodOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.MethodOptions parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.MethodOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.MethodOptions parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.MethodOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.MethodOptions parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.MethodOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.MethodOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.MethodOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.MethodOptions.Builder newBuilder(DescriptorProtos.MethodOptions prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.MethodOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.MethodOptions.Builder() : new DescriptorProtos.MethodOptions.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.MethodOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.MethodOptions.Builder(parent);
      }

      public static DescriptorProtos.MethodOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.MethodOptions> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.MethodOptions> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.MethodOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.MethodOptions, DescriptorProtos.MethodOptions.Builder>
         implements DescriptorProtos.MethodOptionsOrBuilder {
         private int bitField0_;
         private boolean deprecated_;
         private int idempotencyLevel_ = 0;
         private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_MethodOptions_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_MethodOptions_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.MethodOptions.class, DescriptorProtos.MethodOptions.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.MethodOptions.Builder clear() {
            super.clear();
            this.deprecated_ = false;
            this.bitField0_ &= -2;
            this.idempotencyLevel_ = 0;
            this.bitField0_ &= -3;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -5;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_MethodOptions_descriptor;
         }

         public DescriptorProtos.MethodOptions getDefaultInstanceForType() {
            return DescriptorProtos.MethodOptions.getDefaultInstance();
         }

         public DescriptorProtos.MethodOptions build() {
            DescriptorProtos.MethodOptions result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.MethodOptions buildPartial() {
            DescriptorProtos.MethodOptions result = new DescriptorProtos.MethodOptions(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.deprecated_ = this.deprecated_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               to_bitField0_ |= 2;
            }

            result.idempotencyLevel_ = this.idempotencyLevel_;
            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -5;
               }

               result.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.MethodOptions.Builder clone() {
            return (DescriptorProtos.MethodOptions.Builder)super.clone();
         }

         public DescriptorProtos.MethodOptions.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.MethodOptions.Builder)super.setField(field, value);
         }

         public DescriptorProtos.MethodOptions.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.MethodOptions.Builder)super.clearField(field);
         }

         public DescriptorProtos.MethodOptions.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.MethodOptions.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.MethodOptions.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.MethodOptions.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.MethodOptions.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.MethodOptions.Builder)super.addRepeatedField(field, value);
         }

         public <Type> DescriptorProtos.MethodOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.MethodOptions, Type> extension, Type value
         ) {
            return (DescriptorProtos.MethodOptions.Builder)super.setExtension(extension, value);
         }

         public <Type> DescriptorProtos.MethodOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.MethodOptions, List<Type>> extension, int index, Type value
         ) {
            return (DescriptorProtos.MethodOptions.Builder)super.setExtension(extension, index, value);
         }

         public <Type> DescriptorProtos.MethodOptions.Builder addExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.MethodOptions, List<Type>> extension, Type value
         ) {
            return (DescriptorProtos.MethodOptions.Builder)super.addExtension(extension, value);
         }

         public <Type> DescriptorProtos.MethodOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.MethodOptions, ?> extension) {
            return (DescriptorProtos.MethodOptions.Builder)super.clearExtension(extension);
         }

         public DescriptorProtos.MethodOptions.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.MethodOptions) {
               return this.mergeFrom((DescriptorProtos.MethodOptions)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.MethodOptions.Builder mergeFrom(DescriptorProtos.MethodOptions other) {
            if (other == DescriptorProtos.MethodOptions.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasDeprecated()) {
                  this.setDeprecated(other.getDeprecated());
               }

               if (other.hasIdempotencyLevel()) {
                  this.setIdempotencyLevel(other.getIdempotencyLevel());
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!other.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = other.uninterpretedOption_;
                        this.bitField0_ &= -5;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(other.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!other.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = other.uninterpretedOption_;
                     this.bitField0_ &= -5;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(other);
               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  return false;
               }
            }

            return this.extensionsAreInitialized();
         }

         public DescriptorProtos.MethodOptions.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.MethodOptions parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.MethodOptions.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.MethodOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasDeprecated() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.MethodOptions.Builder setDeprecated(boolean value) {
            this.bitField0_ |= 1;
            this.deprecated_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MethodOptions.Builder clearDeprecated() {
            this.bitField0_ &= -2;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasIdempotencyLevel() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public DescriptorProtos.MethodOptions.IdempotencyLevel getIdempotencyLevel() {
            DescriptorProtos.MethodOptions.IdempotencyLevel result = DescriptorProtos.MethodOptions.IdempotencyLevel.valueOf(this.idempotencyLevel_);
            return result == null ? DescriptorProtos.MethodOptions.IdempotencyLevel.IDEMPOTENCY_UNKNOWN : result;
         }

         public DescriptorProtos.MethodOptions.Builder setIdempotencyLevel(DescriptorProtos.MethodOptions.IdempotencyLevel value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.idempotencyLevel_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.MethodOptions.Builder clearIdempotencyLevel() {
            this.bitField0_ &= -3;
            this.idempotencyLevel_ = 0;
            this.onChanged();
            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 4) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 4;
            }

         }

         @Override
         public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null
               ? Collections.unmodifiableList(this.uninterpretedOption_)
               : this.uninterpretedOptionBuilder_.getMessageList();
         }

         @Override
         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessage(index);
         }

         public DescriptorProtos.MethodOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -5;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder removeUninterpretedOption(int index) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(index);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null
               ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList()
               : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(index, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(
                  this.uninterpretedOption_, (this.bitField0_ & 4) != 0, this.getParentForChildren(), this.isClean()
               );
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.MethodOptions.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.MethodOptions.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.MethodOptions.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.MethodOptions.Builder)super.mergeUnknownFields(unknownFields);
         }
      }

      public static enum IdempotencyLevel implements ProtocolMessageEnum {
         IDEMPOTENCY_UNKNOWN(0),
         NO_SIDE_EFFECTS(1),
         IDEMPOTENT(2);

         public static final int IDEMPOTENCY_UNKNOWN_VALUE = 0;
         public static final int NO_SIDE_EFFECTS_VALUE = 1;
         public static final int IDEMPOTENT_VALUE = 2;
         private static final Internal.EnumLiteMap<DescriptorProtos.MethodOptions.IdempotencyLevel> internalValueMap = new Internal.EnumLiteMap<DescriptorProtos.MethodOptions.IdempotencyLevel>(
            
         ) {
            public DescriptorProtos.MethodOptions.IdempotencyLevel findValueByNumber(int number) {
               return DescriptorProtos.MethodOptions.IdempotencyLevel.forNumber(number);
            }
         };
         private static final DescriptorProtos.MethodOptions.IdempotencyLevel[] VALUES = values();
         private final int value;

         @Override
         public final int getNumber() {
            return this.value;
         }

         @Deprecated
         public static DescriptorProtos.MethodOptions.IdempotencyLevel valueOf(int value) {
            return forNumber(value);
         }

         public static DescriptorProtos.MethodOptions.IdempotencyLevel forNumber(int value) {
            switch(value) {
               case 0:
                  return IDEMPOTENCY_UNKNOWN;
               case 1:
                  return NO_SIDE_EFFECTS;
               case 2:
                  return IDEMPOTENT;
               default:
                  return null;
            }
         }

         public static Internal.EnumLiteMap<DescriptorProtos.MethodOptions.IdempotencyLevel> internalGetValueMap() {
            return internalValueMap;
         }

         @Override
         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         @Override
         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)DescriptorProtos.MethodOptions.getDescriptor().getEnumTypes().get(0);
         }

         public static DescriptorProtos.MethodOptions.IdempotencyLevel valueOf(Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[desc.getIndex()];
            }
         }

         private IdempotencyLevel(int value) {
            this.value = value;
         }
      }
   }

   public interface MethodOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder<DescriptorProtos.MethodOptions> {
      boolean hasDeprecated();

      boolean getDeprecated();

      boolean hasIdempotencyLevel();

      DescriptorProtos.MethodOptions.IdempotencyLevel getIdempotencyLevel();

      List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class OneofDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.OneofDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int OPTIONS_FIELD_NUMBER = 2;
      private DescriptorProtos.OneofOptions options_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.OneofDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.OneofDescriptorProto();
      @Deprecated
      public static final Parser<DescriptorProtos.OneofDescriptorProto> PARSER = new AbstractParser<DescriptorProtos.OneofDescriptorProto>() {
         public DescriptorProtos.OneofDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.OneofDescriptorProto(input, extensionRegistry);
         }
      };

      private OneofDescriptorProto(GeneratedMessageV3.Builder<?> builder) {
         super(builder);
      }

      private OneofDescriptorProto() {
         this.name_ = "";
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.OneofDescriptorProto();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private OneofDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.name_ = bs;
                        break;
                     case 18:
                        DescriptorProtos.OneofOptions.Builder subBuilder = null;
                        if ((this.bitField0_ & 2) != 0) {
                           subBuilder = this.options_.toBuilder();
                        }

                        this.options_ = input.readMessage(DescriptorProtos.OneofOptions.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.options_);
                           this.options_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 2;
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var13) {
               throw var13.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var14) {
               throw var14.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var15) {
               throw new InvalidProtocolBufferException(var15).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.OneofDescriptorProto.class, DescriptorProtos.OneofDescriptorProto.Builder.class);
      }

      @Override
      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public String getName() {
         Object ref = this.name_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.name_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getNameBytes() {
         Object ref = this.name_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.name_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasOptions() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public DescriptorProtos.OneofOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.OneofOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public DescriptorProtos.OneofOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.OneofOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else if (this.hasOptions() && !this.getOptions().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.name_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeMessage(2, this.getOptions());
         }

         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeMessageSize(2, this.getOptions());
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.OneofDescriptorProto)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.OneofDescriptorProto other = (DescriptorProtos.OneofDescriptorProto)obj;
            if (this.hasName() != other.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(other.getName())) {
               return false;
            } else if (this.hasOptions() != other.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(other.getOptions())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasName()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getName().hashCode();
            }

            if (this.hasOptions()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getOptions().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.OneofDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.OneofDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.OneofDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.OneofDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.OneofDescriptorProto.Builder newBuilder(DescriptorProtos.OneofDescriptorProto prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.OneofDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE
            ? new DescriptorProtos.OneofDescriptorProto.Builder()
            : new DescriptorProtos.OneofDescriptorProto.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.OneofDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.OneofDescriptorProto.Builder(parent);
      }

      public static DescriptorProtos.OneofDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.OneofDescriptorProto> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.OneofDescriptorProto> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.OneofDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.Builder<DescriptorProtos.OneofDescriptorProto.Builder>
         implements DescriptorProtos.OneofDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_ = "";
         private DescriptorProtos.OneofOptions options_;
         private SingleFieldBuilderV3<DescriptorProtos.OneofOptions, DescriptorProtos.OneofOptions.Builder, DescriptorProtos.OneofOptionsOrBuilder> optionsBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.OneofDescriptorProto.class, DescriptorProtos.OneofDescriptorProto.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getOptionsFieldBuilder();
            }

         }

         public DescriptorProtos.OneofDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -3;
            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_descriptor;
         }

         public DescriptorProtos.OneofDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.OneofDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.OneofDescriptorProto build() {
            DescriptorProtos.OneofDescriptorProto result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.OneofDescriptorProto buildPartial() {
            DescriptorProtos.OneofDescriptorProto result = new DescriptorProtos.OneofDescriptorProto(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.name_ = this.name_;
            if ((from_bitField0_ & 2) != 0) {
               if (this.optionsBuilder_ == null) {
                  result.options_ = this.options_;
               } else {
                  result.options_ = this.optionsBuilder_.build();
               }

               to_bitField0_ |= 2;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.OneofDescriptorProto.Builder clone() {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.OneofDescriptorProto.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.setField(field, value);
         }

         public DescriptorProtos.OneofDescriptorProto.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.clearField(field);
         }

         public DescriptorProtos.OneofDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.OneofDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.OneofDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.addRepeatedField(field, value);
         }

         public DescriptorProtos.OneofDescriptorProto.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.OneofDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.OneofDescriptorProto)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.OneofDescriptorProto.Builder mergeFrom(DescriptorProtos.OneofDescriptorProto other) {
            if (other == DescriptorProtos.OneofDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = other.name_;
                  this.onChanged();
               }

               if (other.hasOptions()) {
                  this.mergeOptions(other.getOptions());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            return !this.hasOptions() || this.getOptions().isInitialized();
         }

         public DescriptorProtos.OneofDescriptorProto.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.OneofDescriptorProto parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.OneofDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.OneofDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public String getName() {
            Object ref = this.name_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.name_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.name_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.OneofDescriptorProto.Builder setName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.OneofDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.OneofDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.OneofDescriptorProto.Builder setNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasOptions() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public DescriptorProtos.OneofOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.OneofOptions.getDefaultInstance() : this.options_;
            } else {
               return this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.OneofDescriptorProto.Builder setOptions(DescriptorProtos.OneofOptions value) {
            if (this.optionsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.options_ = value;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 2;
            return this;
         }

         public DescriptorProtos.OneofDescriptorProto.Builder setOptions(DescriptorProtos.OneofOptions.Builder builderForValue) {
            if (this.optionsBuilder_ == null) {
               this.options_ = builderForValue.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 2;
            return this;
         }

         public DescriptorProtos.OneofDescriptorProto.Builder mergeOptions(DescriptorProtos.OneofOptions value) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0 && this.options_ != null && this.options_ != DescriptorProtos.OneofOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.OneofOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
               } else {
                  this.options_ = value;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 2;
            return this;
         }

         public DescriptorProtos.OneofDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -3;
            return this;
         }

         public DescriptorProtos.OneofOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 2;
            this.onChanged();
            return this.getOptionsFieldBuilder().getBuilder();
         }

         @Override
         public DescriptorProtos.OneofOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.OneofOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3<DescriptorProtos.OneofOptions, DescriptorProtos.OneofOptions.Builder, DescriptorProtos.OneofOptionsOrBuilder> getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3<>(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         public final DescriptorProtos.OneofDescriptorProto.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.OneofDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface OneofDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      boolean hasOptions();

      DescriptorProtos.OneofOptions getOptions();

      DescriptorProtos.OneofOptionsOrBuilder getOptionsOrBuilder();
   }

   public static final class OneofOptions
      extends GeneratedMessageV3.ExtendableMessage<DescriptorProtos.OneofOptions>
      implements DescriptorProtos.OneofOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.OneofOptions DEFAULT_INSTANCE = new DescriptorProtos.OneofOptions();
      @Deprecated
      public static final Parser<DescriptorProtos.OneofOptions> PARSER = new AbstractParser<DescriptorProtos.OneofOptions>() {
         public DescriptorProtos.OneofOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.OneofOptions(input, extensionRegistry);
         }
      };

      private OneofOptions(GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.OneofOptions, ?> builder) {
         super(builder);
      }

      private OneofOptions() {
         this.uninterpretedOption_ = Collections.emptyList();
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.OneofOptions();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private OneofOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 7994:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.uninterpretedOption_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var13) {
               throw var13.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw new InvalidProtocolBufferException(var14).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_OneofOptions_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_OneofOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.OneofOptions.class, DescriptorProtos.OneofOptions.Builder.class);
      }

      @Override
      public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      @Override
      public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      @Override
      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      @Override
      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index);
      }

      @Override
      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         GeneratedMessageV3.ExtendableMessage<DescriptorProtos.OneofOptions>.ExtensionWriter extensionWriter = this.newExtensionWriter();

         for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
            output.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(i));
         }

         extensionWriter.writeUntil(536870912, output);
         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(i));
            }

            size += this.extensionsSerializedSize();
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.OneofOptions)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.OneofOptions other = (DescriptorProtos.OneofOptions)obj;
            if (!this.getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(other.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(other.getExtensionFields());
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getUninterpretedOptionCount() > 0) {
               hash = 37 * hash + 999;
               hash = 53 * hash + this.getUninterpretedOptionList().hashCode();
            }

            hash = hashFields(hash, this.getExtensionFields());
            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.OneofOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.OneofOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.OneofOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.OneofOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.OneofOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.OneofOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.OneofOptions parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.OneofOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.OneofOptions parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.OneofOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.OneofOptions parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.OneofOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.OneofOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.OneofOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.OneofOptions.Builder newBuilder(DescriptorProtos.OneofOptions prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.OneofOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.OneofOptions.Builder() : new DescriptorProtos.OneofOptions.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.OneofOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.OneofOptions.Builder(parent);
      }

      public static DescriptorProtos.OneofOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.OneofOptions> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.OneofOptions> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.OneofOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.OneofOptions, DescriptorProtos.OneofOptions.Builder>
         implements DescriptorProtos.OneofOptionsOrBuilder {
         private int bitField0_;
         private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_OneofOptions_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_OneofOptions_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.OneofOptions.class, DescriptorProtos.OneofOptions.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.OneofOptions.Builder clear() {
            super.clear();
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_OneofOptions_descriptor;
         }

         public DescriptorProtos.OneofOptions getDefaultInstanceForType() {
            return DescriptorProtos.OneofOptions.getDefaultInstance();
         }

         public DescriptorProtos.OneofOptions build() {
            DescriptorProtos.OneofOptions result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.OneofOptions buildPartial() {
            DescriptorProtos.OneofOptions result = new DescriptorProtos.OneofOptions(this);
            int from_bitField0_ = this.bitField0_;
            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -2;
               }

               result.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public DescriptorProtos.OneofOptions.Builder clone() {
            return (DescriptorProtos.OneofOptions.Builder)super.clone();
         }

         public DescriptorProtos.OneofOptions.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.OneofOptions.Builder)super.setField(field, value);
         }

         public DescriptorProtos.OneofOptions.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.OneofOptions.Builder)super.clearField(field);
         }

         public DescriptorProtos.OneofOptions.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.OneofOptions.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.OneofOptions.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.OneofOptions.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.OneofOptions.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.OneofOptions.Builder)super.addRepeatedField(field, value);
         }

         public <Type> DescriptorProtos.OneofOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.OneofOptions, Type> extension, Type value
         ) {
            return (DescriptorProtos.OneofOptions.Builder)super.setExtension(extension, value);
         }

         public <Type> DescriptorProtos.OneofOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.OneofOptions, List<Type>> extension, int index, Type value
         ) {
            return (DescriptorProtos.OneofOptions.Builder)super.setExtension(extension, index, value);
         }

         public <Type> DescriptorProtos.OneofOptions.Builder addExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.OneofOptions, List<Type>> extension, Type value
         ) {
            return (DescriptorProtos.OneofOptions.Builder)super.addExtension(extension, value);
         }

         public <Type> DescriptorProtos.OneofOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.OneofOptions, ?> extension) {
            return (DescriptorProtos.OneofOptions.Builder)super.clearExtension(extension);
         }

         public DescriptorProtos.OneofOptions.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.OneofOptions) {
               return this.mergeFrom((DescriptorProtos.OneofOptions)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.OneofOptions.Builder mergeFrom(DescriptorProtos.OneofOptions other) {
            if (other == DescriptorProtos.OneofOptions.getDefaultInstance()) {
               return this;
            } else {
               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!other.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = other.uninterpretedOption_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(other.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!other.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = other.uninterpretedOption_;
                     this.bitField0_ &= -2;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(other);
               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  return false;
               }
            }

            return this.extensionsAreInitialized();
         }

         public DescriptorProtos.OneofOptions.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.OneofOptions parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.OneofOptions.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.OneofOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 1;
            }

         }

         @Override
         public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null
               ? Collections.unmodifiableList(this.uninterpretedOption_)
               : this.uninterpretedOptionBuilder_.getMessageList();
         }

         @Override
         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessage(index);
         }

         public DescriptorProtos.OneofOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder removeUninterpretedOption(int index) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(index);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null
               ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList()
               : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(index, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(
                  this.uninterpretedOption_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean()
               );
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.OneofOptions.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.OneofOptions.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.OneofOptions.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.OneofOptions.Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface OneofOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder<DescriptorProtos.OneofOptions> {
      List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class ServiceDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.ServiceDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int METHOD_FIELD_NUMBER = 2;
      private List<DescriptorProtos.MethodDescriptorProto> method_;
      public static final int OPTIONS_FIELD_NUMBER = 3;
      private DescriptorProtos.ServiceOptions options_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.ServiceDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.ServiceDescriptorProto();
      @Deprecated
      public static final Parser<DescriptorProtos.ServiceDescriptorProto> PARSER = new AbstractParser<DescriptorProtos.ServiceDescriptorProto>() {
         public DescriptorProtos.ServiceDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.ServiceDescriptorProto(input, extensionRegistry);
         }
      };

      private ServiceDescriptorProto(GeneratedMessageV3.Builder<?> builder) {
         super(builder);
      }

      private ServiceDescriptorProto() {
         this.name_ = "";
         this.method_ = Collections.emptyList();
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.ServiceDescriptorProto();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private ServiceDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.name_ = bs;
                        break;
                     case 18:
                        if ((mutable_bitField0_ & 2) == 0) {
                           this.method_ = new ArrayList();
                           mutable_bitField0_ |= 2;
                        }

                        this.method_.add(input.readMessage(DescriptorProtos.MethodDescriptorProto.PARSER, extensionRegistry));
                        break;
                     case 26:
                        DescriptorProtos.ServiceOptions.Builder subBuilder = null;
                        if ((this.bitField0_ & 2) != 0) {
                           subBuilder = this.options_.toBuilder();
                        }

                        this.options_ = input.readMessage(DescriptorProtos.ServiceOptions.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.options_);
                           this.options_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 2;
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var13) {
               throw var13.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var14) {
               throw var14.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var15) {
               throw new InvalidProtocolBufferException(var15).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 2) != 0) {
                  this.method_ = Collections.unmodifiableList(this.method_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.ServiceDescriptorProto.class, DescriptorProtos.ServiceDescriptorProto.Builder.class);
      }

      @Override
      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public String getName() {
         Object ref = this.name_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.name_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getNameBytes() {
         Object ref = this.name_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.name_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public List<DescriptorProtos.MethodDescriptorProto> getMethodList() {
         return this.method_;
      }

      @Override
      public List<? extends DescriptorProtos.MethodDescriptorProtoOrBuilder> getMethodOrBuilderList() {
         return this.method_;
      }

      @Override
      public int getMethodCount() {
         return this.method_.size();
      }

      @Override
      public DescriptorProtos.MethodDescriptorProto getMethod(int index) {
         return (DescriptorProtos.MethodDescriptorProto)this.method_.get(index);
      }

      @Override
      public DescriptorProtos.MethodDescriptorProtoOrBuilder getMethodOrBuilder(int index) {
         return (DescriptorProtos.MethodDescriptorProtoOrBuilder)this.method_.get(index);
      }

      @Override
      public boolean hasOptions() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public DescriptorProtos.ServiceOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.ServiceOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public DescriptorProtos.ServiceOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.ServiceOptions.getDefaultInstance() : this.options_;
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getMethodCount(); ++i) {
               if (!this.getMethod(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (this.hasOptions() && !this.getOptions().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.name_);
         }

         for(int i = 0; i < this.method_.size(); ++i) {
            output.writeMessage(2, (MessageLite)this.method_.get(i));
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeMessage(3, this.getOptions());
         }

         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            for(int i = 0; i < this.method_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.method_.get(i));
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeMessageSize(3, this.getOptions());
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.ServiceDescriptorProto)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.ServiceDescriptorProto other = (DescriptorProtos.ServiceDescriptorProto)obj;
            if (this.hasName() != other.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(other.getName())) {
               return false;
            } else if (!this.getMethodList().equals(other.getMethodList())) {
               return false;
            } else if (this.hasOptions() != other.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(other.getOptions())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasName()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getName().hashCode();
            }

            if (this.getMethodCount() > 0) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getMethodList().hashCode();
            }

            if (this.hasOptions()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getOptions().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.ServiceDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.ServiceDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.ServiceDescriptorProto.Builder newBuilder(DescriptorProtos.ServiceDescriptorProto prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.ServiceDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE
            ? new DescriptorProtos.ServiceDescriptorProto.Builder()
            : new DescriptorProtos.ServiceDescriptorProto.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.ServiceDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.ServiceDescriptorProto.Builder(parent);
      }

      public static DescriptorProtos.ServiceDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.ServiceDescriptorProto> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.ServiceDescriptorProto> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.ServiceDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.Builder<DescriptorProtos.ServiceDescriptorProto.Builder>
         implements DescriptorProtos.ServiceDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_ = "";
         private List<DescriptorProtos.MethodDescriptorProto> method_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.MethodDescriptorProto, DescriptorProtos.MethodDescriptorProto.Builder, DescriptorProtos.MethodDescriptorProtoOrBuilder> methodBuilder_;
         private DescriptorProtos.ServiceOptions options_;
         private SingleFieldBuilderV3<DescriptorProtos.ServiceOptions, DescriptorProtos.ServiceOptions.Builder, DescriptorProtos.ServiceOptionsOrBuilder> optionsBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.ServiceDescriptorProto.class, DescriptorProtos.ServiceDescriptorProto.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getMethodFieldBuilder();
               this.getOptionsFieldBuilder();
            }

         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            if (this.methodBuilder_ == null) {
               this.method_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.methodBuilder_.clear();
            }

            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_descriptor;
         }

         public DescriptorProtos.ServiceDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.ServiceDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.ServiceDescriptorProto build() {
            DescriptorProtos.ServiceDescriptorProto result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.ServiceDescriptorProto buildPartial() {
            DescriptorProtos.ServiceDescriptorProto result = new DescriptorProtos.ServiceDescriptorProto(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.name_ = this.name_;
            if (this.methodBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0) {
                  this.method_ = Collections.unmodifiableList(this.method_);
                  this.bitField0_ &= -3;
               }

               result.method_ = this.method_;
            } else {
               result.method_ = this.methodBuilder_.build();
            }

            if ((from_bitField0_ & 4) != 0) {
               if (this.optionsBuilder_ == null) {
                  result.options_ = this.options_;
               } else {
                  result.options_ = this.optionsBuilder_.build();
               }

               to_bitField0_ |= 2;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clone() {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.setField(field, value);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.clearField(field);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.addRepeatedField(field, value);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.ServiceDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.ServiceDescriptorProto)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder mergeFrom(DescriptorProtos.ServiceDescriptorProto other) {
            if (other == DescriptorProtos.ServiceDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = other.name_;
                  this.onChanged();
               }

               if (this.methodBuilder_ == null) {
                  if (!other.method_.isEmpty()) {
                     if (this.method_.isEmpty()) {
                        this.method_ = other.method_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureMethodIsMutable();
                        this.method_.addAll(other.method_);
                     }

                     this.onChanged();
                  }
               } else if (!other.method_.isEmpty()) {
                  if (this.methodBuilder_.isEmpty()) {
                     this.methodBuilder_.dispose();
                     this.methodBuilder_ = null;
                     this.method_ = other.method_;
                     this.bitField0_ &= -3;
                     this.methodBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getMethodFieldBuilder() : null;
                  } else {
                     this.methodBuilder_.addAllMessages(other.method_);
                  }
               }

               if (other.hasOptions()) {
                  this.mergeOptions(other.getOptions());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getMethodCount(); ++i) {
               if (!this.getMethod(i).isInitialized()) {
                  return false;
               }
            }

            return !this.hasOptions() || this.getOptions().isInitialized();
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.ServiceDescriptorProto parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.ServiceDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.ServiceDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public String getName() {
            Object ref = this.name_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.name_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.name_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.ServiceDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         private void ensureMethodIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.method_ = new ArrayList(this.method_);
               this.bitField0_ |= 2;
            }

         }

         @Override
         public List<DescriptorProtos.MethodDescriptorProto> getMethodList() {
            return this.methodBuilder_ == null ? Collections.unmodifiableList(this.method_) : this.methodBuilder_.getMessageList();
         }

         @Override
         public int getMethodCount() {
            return this.methodBuilder_ == null ? this.method_.size() : this.methodBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.MethodDescriptorProto getMethod(int index) {
            return this.methodBuilder_ == null ? (DescriptorProtos.MethodDescriptorProto)this.method_.get(index) : this.methodBuilder_.getMessage(index);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setMethod(int index, DescriptorProtos.MethodDescriptorProto value) {
            if (this.methodBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureMethodIsMutable();
               this.method_.set(index, value);
               this.onChanged();
            } else {
               this.methodBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setMethod(int index, DescriptorProtos.MethodDescriptorProto.Builder builderForValue) {
            if (this.methodBuilder_ == null) {
               this.ensureMethodIsMutable();
               this.method_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.methodBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addMethod(DescriptorProtos.MethodDescriptorProto value) {
            if (this.methodBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureMethodIsMutable();
               this.method_.add(value);
               this.onChanged();
            } else {
               this.methodBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addMethod(int index, DescriptorProtos.MethodDescriptorProto value) {
            if (this.methodBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureMethodIsMutable();
               this.method_.add(index, value);
               this.onChanged();
            } else {
               this.methodBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addMethod(DescriptorProtos.MethodDescriptorProto.Builder builderForValue) {
            if (this.methodBuilder_ == null) {
               this.ensureMethodIsMutable();
               this.method_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.methodBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addMethod(int index, DescriptorProtos.MethodDescriptorProto.Builder builderForValue) {
            if (this.methodBuilder_ == null) {
               this.ensureMethodIsMutable();
               this.method_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.methodBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addAllMethod(Iterable<? extends DescriptorProtos.MethodDescriptorProto> values) {
            if (this.methodBuilder_ == null) {
               this.ensureMethodIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.method_);
               this.onChanged();
            } else {
               this.methodBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clearMethod() {
            if (this.methodBuilder_ == null) {
               this.method_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.methodBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder removeMethod(int index) {
            if (this.methodBuilder_ == null) {
               this.ensureMethodIsMutable();
               this.method_.remove(index);
               this.onChanged();
            } else {
               this.methodBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder getMethodBuilder(int index) {
            return this.getMethodFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.MethodDescriptorProtoOrBuilder getMethodOrBuilder(int index) {
            return this.methodBuilder_ == null
               ? (DescriptorProtos.MethodDescriptorProtoOrBuilder)this.method_.get(index)
               : this.methodBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.MethodDescriptorProtoOrBuilder> getMethodOrBuilderList() {
            return this.methodBuilder_ != null ? this.methodBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.method_);
         }

         public DescriptorProtos.MethodDescriptorProto.Builder addMethodBuilder() {
            return this.getMethodFieldBuilder().addBuilder(DescriptorProtos.MethodDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.MethodDescriptorProto.Builder addMethodBuilder(int index) {
            return this.getMethodFieldBuilder().addBuilder(index, DescriptorProtos.MethodDescriptorProto.getDefaultInstance());
         }

         public List<DescriptorProtos.MethodDescriptorProto.Builder> getMethodBuilderList() {
            return this.getMethodFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.MethodDescriptorProto, DescriptorProtos.MethodDescriptorProto.Builder, DescriptorProtos.MethodDescriptorProtoOrBuilder> getMethodFieldBuilder() {
            if (this.methodBuilder_ == null) {
               this.methodBuilder_ = new RepeatedFieldBuilderV3<>(this.method_, (this.bitField0_ & 2) != 0, this.getParentForChildren(), this.isClean());
               this.method_ = null;
            }

            return this.methodBuilder_;
         }

         @Override
         public boolean hasOptions() {
            return (this.bitField0_ & 4) != 0;
         }

         @Override
         public DescriptorProtos.ServiceOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.ServiceOptions.getDefaultInstance() : this.options_;
            } else {
               return this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setOptions(DescriptorProtos.ServiceOptions value) {
            if (this.optionsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.options_ = value;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setOptions(DescriptorProtos.ServiceOptions.Builder builderForValue) {
            if (this.optionsBuilder_ == null) {
               this.options_ = builderForValue.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder mergeOptions(DescriptorProtos.ServiceOptions value) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0 && this.options_ != null && this.options_ != DescriptorProtos.ServiceOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.ServiceOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
               } else {
                  this.options_ = value;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 4;
            this.onChanged();
            return this.getOptionsFieldBuilder().getBuilder();
         }

         @Override
         public DescriptorProtos.ServiceOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.ServiceOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3<DescriptorProtos.ServiceOptions, DescriptorProtos.ServiceOptions.Builder, DescriptorProtos.ServiceOptionsOrBuilder> getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3<>(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         public final DescriptorProtos.ServiceDescriptorProto.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.ServiceDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface ServiceDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      List<DescriptorProtos.MethodDescriptorProto> getMethodList();

      DescriptorProtos.MethodDescriptorProto getMethod(int var1);

      int getMethodCount();

      List<? extends DescriptorProtos.MethodDescriptorProtoOrBuilder> getMethodOrBuilderList();

      DescriptorProtos.MethodDescriptorProtoOrBuilder getMethodOrBuilder(int var1);

      boolean hasOptions();

      DescriptorProtos.ServiceOptions getOptions();

      DescriptorProtos.ServiceOptionsOrBuilder getOptionsOrBuilder();
   }

   public static final class ServiceOptions
      extends GeneratedMessageV3.ExtendableMessage<DescriptorProtos.ServiceOptions>
      implements DescriptorProtos.ServiceOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int DEPRECATED_FIELD_NUMBER = 33;
      private boolean deprecated_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.ServiceOptions DEFAULT_INSTANCE = new DescriptorProtos.ServiceOptions();
      @Deprecated
      public static final Parser<DescriptorProtos.ServiceOptions> PARSER = new AbstractParser<DescriptorProtos.ServiceOptions>() {
         public DescriptorProtos.ServiceOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.ServiceOptions(input, extensionRegistry);
         }
      };

      private ServiceOptions(GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.ServiceOptions, ?> builder) {
         super(builder);
      }

      private ServiceOptions() {
         this.uninterpretedOption_ = Collections.emptyList();
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.ServiceOptions();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private ServiceOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 264:
                        this.bitField0_ |= 1;
                        this.deprecated_ = input.readBool();
                        break;
                     case 7994:
                        if ((mutable_bitField0_ & 2) == 0) {
                           this.uninterpretedOption_ = new ArrayList();
                           mutable_bitField0_ |= 2;
                        }

                        this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var13) {
               throw var13.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw new InvalidProtocolBufferException(var14).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 2) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.ServiceOptions.class, DescriptorProtos.ServiceOptions.Builder.class);
      }

      @Override
      public boolean hasDeprecated() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public boolean getDeprecated() {
         return this.deprecated_;
      }

      @Override
      public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      @Override
      public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      @Override
      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      @Override
      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index);
      }

      @Override
      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         GeneratedMessageV3.ExtendableMessage<DescriptorProtos.ServiceOptions>.ExtensionWriter extensionWriter = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            output.writeBool(33, this.deprecated_);
         }

         for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
            output.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(i));
         }

         extensionWriter.writeUntil(536870912, output);
         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeBoolSize(33, this.deprecated_);
            }

            for(int i = 0; i < this.uninterpretedOption_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(i));
            }

            size += this.extensionsSerializedSize();
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.ServiceOptions)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.ServiceOptions other = (DescriptorProtos.ServiceOptions)obj;
            if (this.hasDeprecated() != other.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != other.getDeprecated()) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(other.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(other.getExtensionFields());
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasDeprecated()) {
               hash = 37 * hash + 33;
               hash = 53 * hash + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.getUninterpretedOptionCount() > 0) {
               hash = 37 * hash + 999;
               hash = 53 * hash + this.getUninterpretedOptionList().hashCode();
            }

            hash = hashFields(hash, this.getExtensionFields());
            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.ServiceOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.ServiceOptions parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.ServiceOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.ServiceOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.ServiceOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.ServiceOptions.Builder newBuilder(DescriptorProtos.ServiceOptions prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.ServiceOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.ServiceOptions.Builder() : new DescriptorProtos.ServiceOptions.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.ServiceOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.ServiceOptions.Builder(parent);
      }

      public static DescriptorProtos.ServiceOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.ServiceOptions> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.ServiceOptions> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.ServiceOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.ExtendableBuilder<DescriptorProtos.ServiceOptions, DescriptorProtos.ServiceOptions.Builder>
         implements DescriptorProtos.ServiceOptionsOrBuilder {
         private int bitField0_;
         private boolean deprecated_;
         private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.ServiceOptions.class, DescriptorProtos.ServiceOptions.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.ServiceOptions.Builder clear() {
            super.clear();
            this.deprecated_ = false;
            this.bitField0_ &= -2;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_descriptor;
         }

         public DescriptorProtos.ServiceOptions getDefaultInstanceForType() {
            return DescriptorProtos.ServiceOptions.getDefaultInstance();
         }

         public DescriptorProtos.ServiceOptions build() {
            DescriptorProtos.ServiceOptions result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.ServiceOptions buildPartial() {
            DescriptorProtos.ServiceOptions result = new DescriptorProtos.ServiceOptions(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.deprecated_ = this.deprecated_;
               to_bitField0_ |= 1;
            }

            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -3;
               }

               result.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.ServiceOptions.Builder clone() {
            return (DescriptorProtos.ServiceOptions.Builder)super.clone();
         }

         public DescriptorProtos.ServiceOptions.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.ServiceOptions.Builder)super.setField(field, value);
         }

         public DescriptorProtos.ServiceOptions.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.ServiceOptions.Builder)super.clearField(field);
         }

         public DescriptorProtos.ServiceOptions.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.ServiceOptions.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.ServiceOptions.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.ServiceOptions.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.ServiceOptions.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.ServiceOptions.Builder)super.addRepeatedField(field, value);
         }

         public <Type> DescriptorProtos.ServiceOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.ServiceOptions, Type> extension, Type value
         ) {
            return (DescriptorProtos.ServiceOptions.Builder)super.setExtension(extension, value);
         }

         public <Type> DescriptorProtos.ServiceOptions.Builder setExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.ServiceOptions, List<Type>> extension, int index, Type value
         ) {
            return (DescriptorProtos.ServiceOptions.Builder)super.setExtension(extension, index, value);
         }

         public <Type> DescriptorProtos.ServiceOptions.Builder addExtension(
            GeneratedMessage.GeneratedExtension<DescriptorProtos.ServiceOptions, List<Type>> extension, Type value
         ) {
            return (DescriptorProtos.ServiceOptions.Builder)super.addExtension(extension, value);
         }

         public <Type> DescriptorProtos.ServiceOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.ServiceOptions, ?> extension) {
            return (DescriptorProtos.ServiceOptions.Builder)super.clearExtension(extension);
         }

         public DescriptorProtos.ServiceOptions.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.ServiceOptions) {
               return this.mergeFrom((DescriptorProtos.ServiceOptions)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.ServiceOptions.Builder mergeFrom(DescriptorProtos.ServiceOptions other) {
            if (other == DescriptorProtos.ServiceOptions.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasDeprecated()) {
                  this.setDeprecated(other.getDeprecated());
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!other.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = other.uninterpretedOption_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(other.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!other.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = other.uninterpretedOption_;
                     this.bitField0_ &= -3;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(other);
               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getUninterpretedOptionCount(); ++i) {
               if (!this.getUninterpretedOption(i).isInitialized()) {
                  return false;
               }
            }

            return this.extensionsAreInitialized();
         }

         public DescriptorProtos.ServiceOptions.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.ServiceOptions parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.ServiceOptions.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.ServiceOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         @Override
         public boolean hasDeprecated() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.ServiceOptions.Builder setDeprecated(boolean value) {
            this.bitField0_ |= 1;
            this.deprecated_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder clearDeprecated() {
            this.bitField0_ &= -2;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 2;
            }

         }

         @Override
         public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null
               ? Collections.unmodifiableList(this.uninterpretedOption_)
               : this.uninterpretedOptionBuilder_.getMessageList();
         }

         @Override
         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessage(index);
         }

         public DescriptorProtos.ServiceOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, value);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder removeUninterpretedOption(int index) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(index);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
            return this.uninterpretedOptionBuilder_ == null
               ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(index)
               : this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null
               ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList()
               : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
            return this.getUninterpretedOptionFieldBuilder().addBuilder(index, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(
                  this.uninterpretedOption_, (this.bitField0_ & 2) != 0, this.getParentForChildren(), this.isClean()
               );
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.ServiceOptions.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.ServiceOptions.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.ServiceOptions.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.ServiceOptions.Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface ServiceOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder<DescriptorProtos.ServiceOptions> {
      boolean hasDeprecated();

      boolean getDeprecated();

      List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class SourceCodeInfo extends GeneratedMessageV3 implements DescriptorProtos.SourceCodeInfoOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int LOCATION_FIELD_NUMBER = 1;
      private List<DescriptorProtos.SourceCodeInfo.Location> location_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.SourceCodeInfo DEFAULT_INSTANCE = new DescriptorProtos.SourceCodeInfo();
      @Deprecated
      public static final Parser<DescriptorProtos.SourceCodeInfo> PARSER = new AbstractParser<DescriptorProtos.SourceCodeInfo>() {
         public DescriptorProtos.SourceCodeInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.SourceCodeInfo(input, extensionRegistry);
         }
      };

      private SourceCodeInfo(GeneratedMessageV3.Builder<?> builder) {
         super(builder);
      }

      private SourceCodeInfo() {
         this.location_ = Collections.emptyList();
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.SourceCodeInfo();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private SourceCodeInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.location_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.location_.add(input.readMessage(DescriptorProtos.SourceCodeInfo.Location.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var13) {
               throw var13.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw new InvalidProtocolBufferException(var14).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.location_ = Collections.unmodifiableList(this.location_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.SourceCodeInfo.class, DescriptorProtos.SourceCodeInfo.Builder.class);
      }

      @Override
      public List<DescriptorProtos.SourceCodeInfo.Location> getLocationList() {
         return this.location_;
      }

      @Override
      public List<? extends DescriptorProtos.SourceCodeInfo.LocationOrBuilder> getLocationOrBuilderList() {
         return this.location_;
      }

      @Override
      public int getLocationCount() {
         return this.location_.size();
      }

      @Override
      public DescriptorProtos.SourceCodeInfo.Location getLocation(int index) {
         return (DescriptorProtos.SourceCodeInfo.Location)this.location_.get(index);
      }

      @Override
      public DescriptorProtos.SourceCodeInfo.LocationOrBuilder getLocationOrBuilder(int index) {
         return (DescriptorProtos.SourceCodeInfo.LocationOrBuilder)this.location_.get(index);
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         for(int i = 0; i < this.location_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.location_.get(i));
         }

         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.location_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.location_.get(i));
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.SourceCodeInfo)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.SourceCodeInfo other = (DescriptorProtos.SourceCodeInfo)obj;
            if (!this.getLocationList().equals(other.getLocationList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getLocationCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getLocationList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.SourceCodeInfo parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.SourceCodeInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.SourceCodeInfo.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.SourceCodeInfo.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.SourceCodeInfo.Builder newBuilder(DescriptorProtos.SourceCodeInfo prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.SourceCodeInfo.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.SourceCodeInfo.Builder() : new DescriptorProtos.SourceCodeInfo.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.SourceCodeInfo.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.SourceCodeInfo.Builder(parent);
      }

      public static DescriptorProtos.SourceCodeInfo getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.SourceCodeInfo> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.SourceCodeInfo> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.SourceCodeInfo getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.Builder<DescriptorProtos.SourceCodeInfo.Builder>
         implements DescriptorProtos.SourceCodeInfoOrBuilder {
         private int bitField0_;
         private List<DescriptorProtos.SourceCodeInfo.Location> location_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.SourceCodeInfo.Location, DescriptorProtos.SourceCodeInfo.Location.Builder, DescriptorProtos.SourceCodeInfo.LocationOrBuilder> locationBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.SourceCodeInfo.class, DescriptorProtos.SourceCodeInfo.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getLocationFieldBuilder();
            }

         }

         public DescriptorProtos.SourceCodeInfo.Builder clear() {
            super.clear();
            if (this.locationBuilder_ == null) {
               this.location_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.locationBuilder_.clear();
            }

            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_descriptor;
         }

         public DescriptorProtos.SourceCodeInfo getDefaultInstanceForType() {
            return DescriptorProtos.SourceCodeInfo.getDefaultInstance();
         }

         public DescriptorProtos.SourceCodeInfo build() {
            DescriptorProtos.SourceCodeInfo result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.SourceCodeInfo buildPartial() {
            DescriptorProtos.SourceCodeInfo result = new DescriptorProtos.SourceCodeInfo(this);
            int from_bitField0_ = this.bitField0_;
            if (this.locationBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.location_ = Collections.unmodifiableList(this.location_);
                  this.bitField0_ &= -2;
               }

               result.location_ = this.location_;
            } else {
               result.location_ = this.locationBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public DescriptorProtos.SourceCodeInfo.Builder clone() {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.clone();
         }

         public DescriptorProtos.SourceCodeInfo.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.setField(field, value);
         }

         public DescriptorProtos.SourceCodeInfo.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.clearField(field);
         }

         public DescriptorProtos.SourceCodeInfo.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.SourceCodeInfo.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.SourceCodeInfo.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.addRepeatedField(field, value);
         }

         public DescriptorProtos.SourceCodeInfo.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.SourceCodeInfo) {
               return this.mergeFrom((DescriptorProtos.SourceCodeInfo)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.SourceCodeInfo.Builder mergeFrom(DescriptorProtos.SourceCodeInfo other) {
            if (other == DescriptorProtos.SourceCodeInfo.getDefaultInstance()) {
               return this;
            } else {
               if (this.locationBuilder_ == null) {
                  if (!other.location_.isEmpty()) {
                     if (this.location_.isEmpty()) {
                        this.location_ = other.location_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureLocationIsMutable();
                        this.location_.addAll(other.location_);
                     }

                     this.onChanged();
                  }
               } else if (!other.location_.isEmpty()) {
                  if (this.locationBuilder_.isEmpty()) {
                     this.locationBuilder_.dispose();
                     this.locationBuilder_ = null;
                     this.location_ = other.location_;
                     this.bitField0_ &= -2;
                     this.locationBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getLocationFieldBuilder() : null;
                  } else {
                     this.locationBuilder_.addAllMessages(other.location_);
                  }
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            return true;
         }

         public DescriptorProtos.SourceCodeInfo.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.SourceCodeInfo parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.SourceCodeInfo.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.SourceCodeInfo)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureLocationIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.location_ = new ArrayList(this.location_);
               this.bitField0_ |= 1;
            }

         }

         @Override
         public List<DescriptorProtos.SourceCodeInfo.Location> getLocationList() {
            return this.locationBuilder_ == null ? Collections.unmodifiableList(this.location_) : this.locationBuilder_.getMessageList();
         }

         @Override
         public int getLocationCount() {
            return this.locationBuilder_ == null ? this.location_.size() : this.locationBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.SourceCodeInfo.Location getLocation(int index) {
            return this.locationBuilder_ == null
               ? (DescriptorProtos.SourceCodeInfo.Location)this.location_.get(index)
               : this.locationBuilder_.getMessage(index);
         }

         public DescriptorProtos.SourceCodeInfo.Builder setLocation(int index, DescriptorProtos.SourceCodeInfo.Location value) {
            if (this.locationBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureLocationIsMutable();
               this.location_.set(index, value);
               this.onChanged();
            } else {
               this.locationBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder setLocation(int index, DescriptorProtos.SourceCodeInfo.Location.Builder builderForValue) {
            if (this.locationBuilder_ == null) {
               this.ensureLocationIsMutable();
               this.location_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.locationBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder addLocation(DescriptorProtos.SourceCodeInfo.Location value) {
            if (this.locationBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureLocationIsMutable();
               this.location_.add(value);
               this.onChanged();
            } else {
               this.locationBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder addLocation(int index, DescriptorProtos.SourceCodeInfo.Location value) {
            if (this.locationBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureLocationIsMutable();
               this.location_.add(index, value);
               this.onChanged();
            } else {
               this.locationBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder addLocation(DescriptorProtos.SourceCodeInfo.Location.Builder builderForValue) {
            if (this.locationBuilder_ == null) {
               this.ensureLocationIsMutable();
               this.location_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.locationBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder addLocation(int index, DescriptorProtos.SourceCodeInfo.Location.Builder builderForValue) {
            if (this.locationBuilder_ == null) {
               this.ensureLocationIsMutable();
               this.location_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.locationBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder addAllLocation(Iterable<? extends DescriptorProtos.SourceCodeInfo.Location> values) {
            if (this.locationBuilder_ == null) {
               this.ensureLocationIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.location_);
               this.onChanged();
            } else {
               this.locationBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder clearLocation() {
            if (this.locationBuilder_ == null) {
               this.location_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.locationBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder removeLocation(int index) {
            if (this.locationBuilder_ == null) {
               this.ensureLocationIsMutable();
               this.location_.remove(index);
               this.onChanged();
            } else {
               this.locationBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Location.Builder getLocationBuilder(int index) {
            return this.getLocationFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.SourceCodeInfo.LocationOrBuilder getLocationOrBuilder(int index) {
            return this.locationBuilder_ == null
               ? (DescriptorProtos.SourceCodeInfo.LocationOrBuilder)this.location_.get(index)
               : this.locationBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.SourceCodeInfo.LocationOrBuilder> getLocationOrBuilderList() {
            return this.locationBuilder_ != null ? this.locationBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.location_);
         }

         public DescriptorProtos.SourceCodeInfo.Location.Builder addLocationBuilder() {
            return this.getLocationFieldBuilder().addBuilder(DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance());
         }

         public DescriptorProtos.SourceCodeInfo.Location.Builder addLocationBuilder(int index) {
            return this.getLocationFieldBuilder().addBuilder(index, DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance());
         }

         public List<DescriptorProtos.SourceCodeInfo.Location.Builder> getLocationBuilderList() {
            return this.getLocationFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.SourceCodeInfo.Location, DescriptorProtos.SourceCodeInfo.Location.Builder, DescriptorProtos.SourceCodeInfo.LocationOrBuilder> getLocationFieldBuilder() {
            if (this.locationBuilder_ == null) {
               this.locationBuilder_ = new RepeatedFieldBuilderV3<>(this.location_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.location_ = null;
            }

            return this.locationBuilder_;
         }

         public final DescriptorProtos.SourceCodeInfo.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.SourceCodeInfo.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.mergeUnknownFields(unknownFields);
         }
      }

      public static final class Location extends GeneratedMessageV3 implements DescriptorProtos.SourceCodeInfo.LocationOrBuilder {
         private static final long serialVersionUID = 0L;
         private int bitField0_;
         public static final int PATH_FIELD_NUMBER = 1;
         private Internal.IntList path_;
         private int pathMemoizedSerializedSize = -1;
         public static final int SPAN_FIELD_NUMBER = 2;
         private Internal.IntList span_;
         private int spanMemoizedSerializedSize = -1;
         public static final int LEADING_COMMENTS_FIELD_NUMBER = 3;
         private volatile Object leadingComments_;
         public static final int TRAILING_COMMENTS_FIELD_NUMBER = 4;
         private volatile Object trailingComments_;
         public static final int LEADING_DETACHED_COMMENTS_FIELD_NUMBER = 6;
         private LazyStringList leadingDetachedComments_;
         private byte memoizedIsInitialized = -1;
         private static final DescriptorProtos.SourceCodeInfo.Location DEFAULT_INSTANCE = new DescriptorProtos.SourceCodeInfo.Location();
         @Deprecated
         public static final Parser<DescriptorProtos.SourceCodeInfo.Location> PARSER = new AbstractParser<DescriptorProtos.SourceCodeInfo.Location>() {
            public DescriptorProtos.SourceCodeInfo.Location parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new DescriptorProtos.SourceCodeInfo.Location(input, extensionRegistry);
            }
         };

         private Location(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
         }

         private Location() {
            this.path_ = emptyIntList();
            this.span_ = emptyIntList();
            this.leadingComments_ = "";
            this.trailingComments_ = "";
            this.leadingDetachedComments_ = LazyStringArrayList.EMPTY;
         }

         @Override
         protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
            return new DescriptorProtos.SourceCodeInfo.Location();
         }

         @Override
         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private Location(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
               throw new NullPointerException();
            } else {
               int mutable_bitField0_ = 0;
               UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

               try {
                  boolean done = false;

                  while(!done) {
                     int tag = input.readTag();
                     int limit;
                     switch(tag) {
                        case 0:
                           done = true;
                           continue;
                        case 8:
                           if ((mutable_bitField0_ & 1) == 0) {
                              this.path_ = newIntList();
                              mutable_bitField0_ |= 1;
                           }

                           this.path_.addInt(input.readInt32());
                           continue;
                        case 10:
                           int length = input.readRawVarint32();
                           limit = input.pushLimit(length);
                           if ((mutable_bitField0_ & 1) == 0 && input.getBytesUntilLimit() > 0) {
                              this.path_ = newIntList();
                              mutable_bitField0_ |= 1;
                           }
                           break;
                        case 16:
                           if ((mutable_bitField0_ & 2) == 0) {
                              this.span_ = newIntList();
                              mutable_bitField0_ |= 2;
                           }

                           this.span_.addInt(input.readInt32());
                           continue;
                        case 18:
                           int length = input.readRawVarint32();
                           limit = input.pushLimit(length);
                           if ((mutable_bitField0_ & 2) == 0 && input.getBytesUntilLimit() > 0) {
                              this.span_ = newIntList();
                              mutable_bitField0_ |= 2;
                           }

                           while(input.getBytesUntilLimit() > 0) {
                              this.span_.addInt(input.readInt32());
                           }

                           input.popLimit(limit);
                           continue;
                        case 26: {
                           ByteString bs = input.readBytes();
                           this.bitField0_ |= 1;
                           this.leadingComments_ = bs;
                           continue;
                        }
                        case 34: {
                           ByteString bs = input.readBytes();
                           this.bitField0_ |= 2;
                           this.trailingComments_ = bs;
                           continue;
                        }
                        case 50: {
                           ByteString bs = input.readBytes();
                           if ((mutable_bitField0_ & 16) == 0) {
                              this.leadingDetachedComments_ = new LazyStringArrayList();
                              mutable_bitField0_ |= 16;
                           }

                           this.leadingDetachedComments_.add(bs);
                           continue;
                        }
                        default:
                           if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                              done = true;
                           }
                           continue;
                     }

                     while(input.getBytesUntilLimit() > 0) {
                        this.path_.addInt(input.readInt32());
                     }

                     input.popLimit(limit);
                  }
               } catch (InvalidProtocolBufferException var14) {
                  throw var14.setUnfinishedMessage(this);
               } catch (UninitializedMessageException var15) {
                  throw var15.asInvalidProtocolBufferException().setUnfinishedMessage(this);
               } catch (IOException var16) {
                  throw new InvalidProtocolBufferException(var16).setUnfinishedMessage(this);
               } finally {
                  if ((mutable_bitField0_ & 1) != 0) {
                     this.path_.makeImmutable();
                  }

                  if ((mutable_bitField0_ & 2) != 0) {
                     this.span_.makeImmutable();
                  }

                  if ((mutable_bitField0_ & 16) != 0) {
                     this.leadingDetachedComments_ = this.leadingDetachedComments_.getUnmodifiableView();
                  }

                  this.unknownFields = unknownFields.build();
                  this.makeExtensionsImmutable();
               }

            }
         }

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.SourceCodeInfo.Location.class, DescriptorProtos.SourceCodeInfo.Location.Builder.class);
         }

         @Override
         public List<Integer> getPathList() {
            return this.path_;
         }

         @Override
         public int getPathCount() {
            return this.path_.size();
         }

         @Override
         public int getPath(int index) {
            return this.path_.getInt(index);
         }

         @Override
         public List<Integer> getSpanList() {
            return this.span_;
         }

         @Override
         public int getSpanCount() {
            return this.span_.size();
         }

         @Override
         public int getSpan(int index) {
            return this.span_.getInt(index);
         }

         @Override
         public boolean hasLeadingComments() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public String getLeadingComments() {
            Object ref = this.leadingComments_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.leadingComments_ = s;
               }

               return s;
            }
         }

         @Override
         public ByteString getLeadingCommentsBytes() {
            Object ref = this.leadingComments_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.leadingComments_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         @Override
         public boolean hasTrailingComments() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public String getTrailingComments() {
            Object ref = this.trailingComments_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.trailingComments_ = s;
               }

               return s;
            }
         }

         @Override
         public ByteString getTrailingCommentsBytes() {
            Object ref = this.trailingComments_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.trailingComments_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public ProtocolStringList getLeadingDetachedCommentsList() {
            return this.leadingDetachedComments_;
         }

         @Override
         public int getLeadingDetachedCommentsCount() {
            return this.leadingDetachedComments_.size();
         }

         @Override
         public String getLeadingDetachedComments(int index) {
            return (String)this.leadingDetachedComments_.get(index);
         }

         @Override
         public ByteString getLeadingDetachedCommentsBytes(int index) {
            return this.leadingDetachedComments_.getByteString(index);
         }

         @Override
         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
               return true;
            } else if (isInitialized == 0) {
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         @Override
         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if (this.getPathList().size() > 0) {
               output.writeUInt32NoTag(10);
               output.writeUInt32NoTag(this.pathMemoizedSerializedSize);
            }

            for(int i = 0; i < this.path_.size(); ++i) {
               output.writeInt32NoTag(this.path_.getInt(i));
            }

            if (this.getSpanList().size() > 0) {
               output.writeUInt32NoTag(18);
               output.writeUInt32NoTag(this.spanMemoizedSerializedSize);
            }

            for(int i = 0; i < this.span_.size(); ++i) {
               output.writeInt32NoTag(this.span_.getInt(i));
            }

            if ((this.bitField0_ & 1) != 0) {
               GeneratedMessageV3.writeString(output, 3, this.leadingComments_);
            }

            if ((this.bitField0_ & 2) != 0) {
               GeneratedMessageV3.writeString(output, 4, this.trailingComments_);
            }

            for(int i = 0; i < this.leadingDetachedComments_.size(); ++i) {
               GeneratedMessageV3.writeString(output, 6, this.leadingDetachedComments_.getRaw(i));
            }

            this.unknownFields.writeTo(output);
         }

         @Override
         public int getSerializedSize() {
            int size = this.memoizedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               int dataSize = 0;

               for(int i = 0; i < this.path_.size(); ++i) {
                  dataSize += CodedOutputStream.computeInt32SizeNoTag(this.path_.getInt(i));
               }

               size += dataSize;
               if (!this.getPathList().isEmpty()) {
                  size = ++size + CodedOutputStream.computeInt32SizeNoTag(dataSize);
               }

               this.pathMemoizedSerializedSize = dataSize;
               dataSize = 0;

               for(int i = 0; i < this.span_.size(); ++i) {
                  dataSize += CodedOutputStream.computeInt32SizeNoTag(this.span_.getInt(i));
               }

               size += dataSize;
               if (!this.getSpanList().isEmpty()) {
                  size = ++size + CodedOutputStream.computeInt32SizeNoTag(dataSize);
               }

               this.spanMemoizedSerializedSize = dataSize;
               if ((this.bitField0_ & 1) != 0) {
                  size += GeneratedMessageV3.computeStringSize(3, this.leadingComments_);
               }

               if ((this.bitField0_ & 2) != 0) {
                  size += GeneratedMessageV3.computeStringSize(4, this.trailingComments_);
               }

               dataSize = 0;

               for(int i = 0; i < this.leadingDetachedComments_.size(); ++i) {
                  dataSize += computeStringSizeNoTag(this.leadingDetachedComments_.getRaw(i));
               }

               size += dataSize;
               size += 1 * this.getLeadingDetachedCommentsList().size();
               size += this.unknownFields.getSerializedSize();
               this.memoizedSize = size;
               return size;
            }
         }

         @Override
         public boolean equals(Object obj) {
            if (obj == this) {
               return true;
            } else if (!(obj instanceof DescriptorProtos.SourceCodeInfo.Location)) {
               return super.equals(obj);
            } else {
               DescriptorProtos.SourceCodeInfo.Location other = (DescriptorProtos.SourceCodeInfo.Location)obj;
               if (!this.getPathList().equals(other.getPathList())) {
                  return false;
               } else if (!this.getSpanList().equals(other.getSpanList())) {
                  return false;
               } else if (this.hasLeadingComments() != other.hasLeadingComments()) {
                  return false;
               } else if (this.hasLeadingComments() && !this.getLeadingComments().equals(other.getLeadingComments())) {
                  return false;
               } else if (this.hasTrailingComments() != other.hasTrailingComments()) {
                  return false;
               } else if (this.hasTrailingComments() && !this.getTrailingComments().equals(other.getTrailingComments())) {
                  return false;
               } else if (!this.getLeadingDetachedCommentsList().equals(other.getLeadingDetachedCommentsList())) {
                  return false;
               } else {
                  return this.unknownFields.equals(other.unknownFields);
               }
            }
         }

         @Override
         public int hashCode() {
            if (this.memoizedHashCode != 0) {
               return this.memoizedHashCode;
            } else {
               int hash = 41;
               hash = 19 * hash + getDescriptor().hashCode();
               if (this.getPathCount() > 0) {
                  hash = 37 * hash + 1;
                  hash = 53 * hash + this.getPathList().hashCode();
               }

               if (this.getSpanCount() > 0) {
                  hash = 37 * hash + 2;
                  hash = 53 * hash + this.getSpanList().hashCode();
               }

               if (this.hasLeadingComments()) {
                  hash = 37 * hash + 3;
                  hash = 53 * hash + this.getLeadingComments().hashCode();
               }

               if (this.hasTrailingComments()) {
                  hash = 37 * hash + 4;
                  hash = 53 * hash + this.getTrailingComments().hashCode();
               }

               if (this.getLeadingDetachedCommentsCount() > 0) {
                  hash = 37 * hash + 6;
                  hash = 53 * hash + this.getLeadingDetachedCommentsList().hashCode();
               }

               hash = 29 * hash + this.unknownFields.hashCode();
               this.memoizedHashCode = hash;
               return hash;
            }
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(InputStream input) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseDelimitedFrom(InputStream input) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(CodedInputStream input) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
         }

         public DescriptorProtos.SourceCodeInfo.Location.Builder newBuilderForType() {
            return newBuilder();
         }

         public static DescriptorProtos.SourceCodeInfo.Location.Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
         }

         public static DescriptorProtos.SourceCodeInfo.Location.Builder newBuilder(DescriptorProtos.SourceCodeInfo.Location prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
         }

         public DescriptorProtos.SourceCodeInfo.Location.Builder toBuilder() {
            return this == DEFAULT_INSTANCE
               ? new DescriptorProtos.SourceCodeInfo.Location.Builder()
               : new DescriptorProtos.SourceCodeInfo.Location.Builder().mergeFrom(this);
         }

         protected DescriptorProtos.SourceCodeInfo.Location.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
            return new DescriptorProtos.SourceCodeInfo.Location.Builder(parent);
         }

         public static DescriptorProtos.SourceCodeInfo.Location getDefaultInstance() {
            return DEFAULT_INSTANCE;
         }

         public static Parser<DescriptorProtos.SourceCodeInfo.Location> parser() {
            return PARSER;
         }

         @Override
         public Parser<DescriptorProtos.SourceCodeInfo.Location> getParserForType() {
            return PARSER;
         }

         public DescriptorProtos.SourceCodeInfo.Location getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
         }

         public static final class Builder
            extends GeneratedMessageV3.Builder<DescriptorProtos.SourceCodeInfo.Location.Builder>
            implements DescriptorProtos.SourceCodeInfo.LocationOrBuilder {
            private int bitField0_;
            private Internal.IntList path_ = GeneratedMessageV3.emptyIntList();
            private Internal.IntList span_ = GeneratedMessageV3.emptyIntList();
            private Object leadingComments_ = "";
            private Object trailingComments_ = "";
            private LazyStringList leadingDetachedComments_ = LazyStringArrayList.EMPTY;

            public static final Descriptors.Descriptor getDescriptor() {
               return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_descriptor;
            }

            @Override
            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
               return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(DescriptorProtos.SourceCodeInfo.Location.class, DescriptorProtos.SourceCodeInfo.Location.Builder.class);
            }

            private Builder() {
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
               super(parent);
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               }

            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clear() {
               super.clear();
               this.path_ = GeneratedMessageV3.emptyIntList();
               this.bitField0_ &= -2;
               this.span_ = GeneratedMessageV3.emptyIntList();
               this.bitField0_ &= -3;
               this.leadingComments_ = "";
               this.bitField0_ &= -5;
               this.trailingComments_ = "";
               this.bitField0_ &= -9;
               this.leadingDetachedComments_ = LazyStringArrayList.EMPTY;
               this.bitField0_ &= -17;
               return this;
            }

            @Override
            public Descriptors.Descriptor getDescriptorForType() {
               return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_descriptor;
            }

            public DescriptorProtos.SourceCodeInfo.Location getDefaultInstanceForType() {
               return DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance();
            }

            public DescriptorProtos.SourceCodeInfo.Location build() {
               DescriptorProtos.SourceCodeInfo.Location result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location buildPartial() {
               DescriptorProtos.SourceCodeInfo.Location result = new DescriptorProtos.SourceCodeInfo.Location(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((this.bitField0_ & 1) != 0) {
                  this.path_.makeImmutable();
                  this.bitField0_ &= -2;
               }

               result.path_ = this.path_;
               if ((this.bitField0_ & 2) != 0) {
                  this.span_.makeImmutable();
                  this.bitField0_ &= -3;
               }

               result.span_ = this.span_;
               if ((from_bitField0_ & 4) != 0) {
                  to_bitField0_ |= 1;
               }

               result.leadingComments_ = this.leadingComments_;
               if ((from_bitField0_ & 8) != 0) {
                  to_bitField0_ |= 2;
               }

               result.trailingComments_ = this.trailingComments_;
               if ((this.bitField0_ & 16) != 0) {
                  this.leadingDetachedComments_ = this.leadingDetachedComments_.getUnmodifiableView();
                  this.bitField0_ &= -17;
               }

               result.leadingDetachedComments_ = this.leadingDetachedComments_;
               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clone() {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.clone();
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setField(Descriptors.FieldDescriptor field, Object value) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.setField(field, value);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearField(Descriptors.FieldDescriptor field) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.clearField(field);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.clearOneof(oneof);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.setRepeatedField(field, index, value);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.addRepeatedField(field, value);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder mergeFrom(Message other) {
               if (other instanceof DescriptorProtos.SourceCodeInfo.Location) {
                  return this.mergeFrom((DescriptorProtos.SourceCodeInfo.Location)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder mergeFrom(DescriptorProtos.SourceCodeInfo.Location other) {
               if (other == DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance()) {
                  return this;
               } else {
                  if (!other.path_.isEmpty()) {
                     if (this.path_.isEmpty()) {
                        this.path_ = other.path_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensurePathIsMutable();
                        this.path_.addAll(other.path_);
                     }

                     this.onChanged();
                  }

                  if (!other.span_.isEmpty()) {
                     if (this.span_.isEmpty()) {
                        this.span_ = other.span_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureSpanIsMutable();
                        this.span_.addAll(other.span_);
                     }

                     this.onChanged();
                  }

                  if (other.hasLeadingComments()) {
                     this.bitField0_ |= 4;
                     this.leadingComments_ = other.leadingComments_;
                     this.onChanged();
                  }

                  if (other.hasTrailingComments()) {
                     this.bitField0_ |= 8;
                     this.trailingComments_ = other.trailingComments_;
                     this.onChanged();
                  }

                  if (!other.leadingDetachedComments_.isEmpty()) {
                     if (this.leadingDetachedComments_.isEmpty()) {
                        this.leadingDetachedComments_ = other.leadingDetachedComments_;
                        this.bitField0_ &= -17;
                     } else {
                        this.ensureLeadingDetachedCommentsIsMutable();
                        this.leadingDetachedComments_.addAll(other.leadingDetachedComments_);
                     }

                     this.onChanged();
                  }

                  this.mergeUnknownFields(other.unknownFields);
                  this.onChanged();
                  return this;
               }
            }

            @Override
            public final boolean isInitialized() {
               return true;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               DescriptorProtos.SourceCodeInfo.Location parsedMessage = null;

               try {
                  parsedMessage = DescriptorProtos.SourceCodeInfo.Location.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException var8) {
                  parsedMessage = (DescriptorProtos.SourceCodeInfo.Location)var8.getUnfinishedMessage();
                  throw var8.unwrapIOException();
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            private void ensurePathIsMutable() {
               if ((this.bitField0_ & 1) == 0) {
                  this.path_ = GeneratedMessageV3.mutableCopy(this.path_);
                  this.bitField0_ |= 1;
               }

            }

            @Override
            public List<Integer> getPathList() {
               return (List<Integer>)((this.bitField0_ & 1) != 0 ? Collections.unmodifiableList(this.path_) : this.path_);
            }

            @Override
            public int getPathCount() {
               return this.path_.size();
            }

            @Override
            public int getPath(int index) {
               return this.path_.getInt(index);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setPath(int index, int value) {
               this.ensurePathIsMutable();
               this.path_.setInt(index, value);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addPath(int value) {
               this.ensurePathIsMutable();
               this.path_.addInt(value);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addAllPath(Iterable<? extends Integer> values) {
               this.ensurePathIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.path_);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearPath() {
               this.path_ = GeneratedMessageV3.emptyIntList();
               this.bitField0_ &= -2;
               this.onChanged();
               return this;
            }

            private void ensureSpanIsMutable() {
               if ((this.bitField0_ & 2) == 0) {
                  this.span_ = GeneratedMessageV3.mutableCopy(this.span_);
                  this.bitField0_ |= 2;
               }

            }

            @Override
            public List<Integer> getSpanList() {
               return (List<Integer>)((this.bitField0_ & 2) != 0 ? Collections.unmodifiableList(this.span_) : this.span_);
            }

            @Override
            public int getSpanCount() {
               return this.span_.size();
            }

            @Override
            public int getSpan(int index) {
               return this.span_.getInt(index);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setSpan(int index, int value) {
               this.ensureSpanIsMutable();
               this.span_.setInt(index, value);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addSpan(int value) {
               this.ensureSpanIsMutable();
               this.span_.addInt(value);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addAllSpan(Iterable<? extends Integer> values) {
               this.ensureSpanIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.span_);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearSpan() {
               this.span_ = GeneratedMessageV3.emptyIntList();
               this.bitField0_ &= -3;
               this.onChanged();
               return this;
            }

            @Override
            public boolean hasLeadingComments() {
               return (this.bitField0_ & 4) != 0;
            }

            @Override
            public String getLeadingComments() {
               Object ref = this.leadingComments_;
               if (!(ref instanceof String)) {
                  ByteString bs = (ByteString)ref;
                  String s = bs.toStringUtf8();
                  if (bs.isValidUtf8()) {
                     this.leadingComments_ = s;
                  }

                  return s;
               } else {
                  return (String)ref;
               }
            }

            @Override
            public ByteString getLeadingCommentsBytes() {
               Object ref = this.leadingComments_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.leadingComments_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setLeadingComments(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 4;
                  this.leadingComments_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearLeadingComments() {
               this.bitField0_ &= -5;
               this.leadingComments_ = DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance().getLeadingComments();
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setLeadingCommentsBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 4;
                  this.leadingComments_ = value;
                  this.onChanged();
                  return this;
               }
            }

            @Override
            public boolean hasTrailingComments() {
               return (this.bitField0_ & 8) != 0;
            }

            @Override
            public String getTrailingComments() {
               Object ref = this.trailingComments_;
               if (!(ref instanceof String)) {
                  ByteString bs = (ByteString)ref;
                  String s = bs.toStringUtf8();
                  if (bs.isValidUtf8()) {
                     this.trailingComments_ = s;
                  }

                  return s;
               } else {
                  return (String)ref;
               }
            }

            @Override
            public ByteString getTrailingCommentsBytes() {
               Object ref = this.trailingComments_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.trailingComments_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setTrailingComments(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 8;
                  this.trailingComments_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearTrailingComments() {
               this.bitField0_ &= -9;
               this.trailingComments_ = DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance().getTrailingComments();
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setTrailingCommentsBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 8;
                  this.trailingComments_ = value;
                  this.onChanged();
                  return this;
               }
            }

            private void ensureLeadingDetachedCommentsIsMutable() {
               if ((this.bitField0_ & 16) == 0) {
                  this.leadingDetachedComments_ = new LazyStringArrayList(this.leadingDetachedComments_);
                  this.bitField0_ |= 16;
               }

            }

            public ProtocolStringList getLeadingDetachedCommentsList() {
               return this.leadingDetachedComments_.getUnmodifiableView();
            }

            @Override
            public int getLeadingDetachedCommentsCount() {
               return this.leadingDetachedComments_.size();
            }

            @Override
            public String getLeadingDetachedComments(int index) {
               return (String)this.leadingDetachedComments_.get(index);
            }

            @Override
            public ByteString getLeadingDetachedCommentsBytes(int index) {
               return this.leadingDetachedComments_.getByteString(index);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setLeadingDetachedComments(int index, String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.ensureLeadingDetachedCommentsIsMutable();
                  this.leadingDetachedComments_.set(index, value);
                  this.onChanged();
                  return this;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addLeadingDetachedComments(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.ensureLeadingDetachedCommentsIsMutable();
                  this.leadingDetachedComments_.add(value);
                  this.onChanged();
                  return this;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addAllLeadingDetachedComments(Iterable<String> values) {
               this.ensureLeadingDetachedCommentsIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.leadingDetachedComments_);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearLeadingDetachedComments() {
               this.leadingDetachedComments_ = LazyStringArrayList.EMPTY;
               this.bitField0_ &= -17;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addLeadingDetachedCommentsBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.ensureLeadingDetachedCommentsIsMutable();
                  this.leadingDetachedComments_.add(value);
                  this.onChanged();
                  return this;
               }
            }

            public final DescriptorProtos.SourceCodeInfo.Location.Builder setUnknownFields(UnknownFieldSet unknownFields) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.setUnknownFields(unknownFields);
            }

            public final DescriptorProtos.SourceCodeInfo.Location.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.mergeUnknownFields(unknownFields);
            }
         }
      }

      public interface LocationOrBuilder extends MessageOrBuilder {
         List<Integer> getPathList();

         int getPathCount();

         int getPath(int var1);

         List<Integer> getSpanList();

         int getSpanCount();

         int getSpan(int var1);

         boolean hasLeadingComments();

         String getLeadingComments();

         ByteString getLeadingCommentsBytes();

         boolean hasTrailingComments();

         String getTrailingComments();

         ByteString getTrailingCommentsBytes();

         List<String> getLeadingDetachedCommentsList();

         int getLeadingDetachedCommentsCount();

         String getLeadingDetachedComments(int var1);

         ByteString getLeadingDetachedCommentsBytes(int var1);
      }
   }

   public interface SourceCodeInfoOrBuilder extends MessageOrBuilder {
      List<DescriptorProtos.SourceCodeInfo.Location> getLocationList();

      DescriptorProtos.SourceCodeInfo.Location getLocation(int var1);

      int getLocationCount();

      List<? extends DescriptorProtos.SourceCodeInfo.LocationOrBuilder> getLocationOrBuilderList();

      DescriptorProtos.SourceCodeInfo.LocationOrBuilder getLocationOrBuilder(int var1);
   }

   public static final class UninterpretedOption extends GeneratedMessageV3 implements DescriptorProtos.UninterpretedOptionOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 2;
      private List<DescriptorProtos.UninterpretedOption.NamePart> name_;
      public static final int IDENTIFIER_VALUE_FIELD_NUMBER = 3;
      private volatile Object identifierValue_;
      public static final int POSITIVE_INT_VALUE_FIELD_NUMBER = 4;
      private long positiveIntValue_;
      public static final int NEGATIVE_INT_VALUE_FIELD_NUMBER = 5;
      private long negativeIntValue_;
      public static final int DOUBLE_VALUE_FIELD_NUMBER = 6;
      private double doubleValue_;
      public static final int STRING_VALUE_FIELD_NUMBER = 7;
      private ByteString stringValue_;
      public static final int AGGREGATE_VALUE_FIELD_NUMBER = 8;
      private volatile Object aggregateValue_;
      private byte memoizedIsInitialized = -1;
      private static final DescriptorProtos.UninterpretedOption DEFAULT_INSTANCE = new DescriptorProtos.UninterpretedOption();
      @Deprecated
      public static final Parser<DescriptorProtos.UninterpretedOption> PARSER = new AbstractParser<DescriptorProtos.UninterpretedOption>() {
         public DescriptorProtos.UninterpretedOption parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DescriptorProtos.UninterpretedOption(input, extensionRegistry);
         }
      };

      private UninterpretedOption(GeneratedMessageV3.Builder<?> builder) {
         super(builder);
      }

      private UninterpretedOption() {
         this.name_ = Collections.emptyList();
         this.identifierValue_ = "";
         this.stringValue_ = ByteString.EMPTY;
         this.aggregateValue_ = "";
      }

      @Override
      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DescriptorProtos.UninterpretedOption();
      }

      @Override
      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private UninterpretedOption(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch(tag) {
                     case 0:
                        done = true;
                        break;
                     case 18:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.name_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.name_.add(input.readMessage(DescriptorProtos.UninterpretedOption.NamePart.PARSER, extensionRegistry));
                        break;
                     case 26: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.identifierValue_ = bs;
                        break;
                     }
                     case 32:
                        this.bitField0_ |= 2;
                        this.positiveIntValue_ = input.readUInt64();
                        break;
                     case 40:
                        this.bitField0_ |= 4;
                        this.negativeIntValue_ = input.readInt64();
                        break;
                     case 49:
                        this.bitField0_ |= 8;
                        this.doubleValue_ = input.readDouble();
                        break;
                     case 58:
                        this.bitField0_ |= 16;
                        this.stringValue_ = input.readBytes();
                        break;
                     case 66: {
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 32;
                        this.aggregateValue_ = bs;
                        break;
                     }
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException var13) {
               throw var13.setUnfinishedMessage(this);
            } catch (UninitializedMessageException var14) {
               throw var14.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (IOException var15) {
               throw new InvalidProtocolBufferException(var15).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.name_ = Collections.unmodifiableList(this.name_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_descriptor;
      }

      @Override
      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable
            .ensureFieldAccessorsInitialized(DescriptorProtos.UninterpretedOption.class, DescriptorProtos.UninterpretedOption.Builder.class);
      }

      @Override
      public List<DescriptorProtos.UninterpretedOption.NamePart> getNameList() {
         return this.name_;
      }

      @Override
      public List<? extends DescriptorProtos.UninterpretedOption.NamePartOrBuilder> getNameOrBuilderList() {
         return this.name_;
      }

      @Override
      public int getNameCount() {
         return this.name_.size();
      }

      @Override
      public DescriptorProtos.UninterpretedOption.NamePart getName(int index) {
         return (DescriptorProtos.UninterpretedOption.NamePart)this.name_.get(index);
      }

      @Override
      public DescriptorProtos.UninterpretedOption.NamePartOrBuilder getNameOrBuilder(int index) {
         return (DescriptorProtos.UninterpretedOption.NamePartOrBuilder)this.name_.get(index);
      }

      @Override
      public boolean hasIdentifierValue() {
         return (this.bitField0_ & 1) != 0;
      }

      @Override
      public String getIdentifierValue() {
         Object ref = this.identifierValue_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.identifierValue_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getIdentifierValueBytes() {
         Object ref = this.identifierValue_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.identifierValue_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public boolean hasPositiveIntValue() {
         return (this.bitField0_ & 2) != 0;
      }

      @Override
      public long getPositiveIntValue() {
         return this.positiveIntValue_;
      }

      @Override
      public boolean hasNegativeIntValue() {
         return (this.bitField0_ & 4) != 0;
      }

      @Override
      public long getNegativeIntValue() {
         return this.negativeIntValue_;
      }

      @Override
      public boolean hasDoubleValue() {
         return (this.bitField0_ & 8) != 0;
      }

      @Override
      public double getDoubleValue() {
         return this.doubleValue_;
      }

      @Override
      public boolean hasStringValue() {
         return (this.bitField0_ & 16) != 0;
      }

      @Override
      public ByteString getStringValue() {
         return this.stringValue_;
      }

      @Override
      public boolean hasAggregateValue() {
         return (this.bitField0_ & 32) != 0;
      }

      @Override
      public String getAggregateValue() {
         Object ref = this.aggregateValue_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.aggregateValue_ = s;
            }

            return s;
         }
      }

      @Override
      public ByteString getAggregateValueBytes() {
         Object ref = this.aggregateValue_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.aggregateValue_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      @Override
      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            for(int i = 0; i < this.getNameCount(); ++i) {
               if (!this.getName(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      @Override
      public void writeTo(CodedOutputStream output) throws IOException {
         for(int i = 0; i < this.name_.size(); ++i) {
            output.writeMessage(2, (MessageLite)this.name_.get(i));
         }

         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 3, this.identifierValue_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeUInt64(4, this.positiveIntValue_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeInt64(5, this.negativeIntValue_);
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeDouble(6, this.doubleValue_);
         }

         if ((this.bitField0_ & 16) != 0) {
            output.writeBytes(7, this.stringValue_);
         }

         if ((this.bitField0_ & 32) != 0) {
            GeneratedMessageV3.writeString(output, 8, this.aggregateValue_);
         }

         this.unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.name_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.name_.get(i));
            }

            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(3, this.identifierValue_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeUInt64Size(4, this.positiveIntValue_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeInt64Size(5, this.negativeIntValue_);
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeDoubleSize(6, this.doubleValue_);
            }

            if ((this.bitField0_ & 16) != 0) {
               size += CodedOutputStream.computeBytesSize(7, this.stringValue_);
            }

            if ((this.bitField0_ & 32) != 0) {
               size += GeneratedMessageV3.computeStringSize(8, this.aggregateValue_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      @Override
      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DescriptorProtos.UninterpretedOption)) {
            return super.equals(obj);
         } else {
            DescriptorProtos.UninterpretedOption other = (DescriptorProtos.UninterpretedOption)obj;
            if (!this.getNameList().equals(other.getNameList())) {
               return false;
            } else if (this.hasIdentifierValue() != other.hasIdentifierValue()) {
               return false;
            } else if (this.hasIdentifierValue() && !this.getIdentifierValue().equals(other.getIdentifierValue())) {
               return false;
            } else if (this.hasPositiveIntValue() != other.hasPositiveIntValue()) {
               return false;
            } else if (this.hasPositiveIntValue() && this.getPositiveIntValue() != other.getPositiveIntValue()) {
               return false;
            } else if (this.hasNegativeIntValue() != other.hasNegativeIntValue()) {
               return false;
            } else if (this.hasNegativeIntValue() && this.getNegativeIntValue() != other.getNegativeIntValue()) {
               return false;
            } else if (this.hasDoubleValue() != other.hasDoubleValue()) {
               return false;
            } else if (this.hasDoubleValue() && Double.doubleToLongBits(this.getDoubleValue()) != Double.doubleToLongBits(other.getDoubleValue())) {
               return false;
            } else if (this.hasStringValue() != other.hasStringValue()) {
               return false;
            } else if (this.hasStringValue() && !this.getStringValue().equals(other.getStringValue())) {
               return false;
            } else if (this.hasAggregateValue() != other.hasAggregateValue()) {
               return false;
            } else if (this.hasAggregateValue() && !this.getAggregateValue().equals(other.getAggregateValue())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      @Override
      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getNameCount() > 0) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getNameList().hashCode();
            }

            if (this.hasIdentifierValue()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getIdentifierValue().hashCode();
            }

            if (this.hasPositiveIntValue()) {
               hash = 37 * hash + 4;
               hash = 53 * hash + Internal.hashLong(this.getPositiveIntValue());
            }

            if (this.hasNegativeIntValue()) {
               hash = 37 * hash + 5;
               hash = 53 * hash + Internal.hashLong(this.getNegativeIntValue());
            }

            if (this.hasDoubleValue()) {
               hash = 37 * hash + 6;
               hash = 53 * hash + Internal.hashLong(Double.doubleToLongBits(this.getDoubleValue()));
            }

            if (this.hasStringValue()) {
               hash = 37 * hash + 7;
               hash = 53 * hash + this.getStringValue().hashCode();
            }

            if (this.hasAggregateValue()) {
               hash = 37 * hash + 8;
               hash = 53 * hash + this.getAggregateValue().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return PARSER.parseFrom(data, extensionRegistry);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.UninterpretedOption parseDelimitedFrom(InputStream input) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DescriptorProtos.UninterpretedOption parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(CodedInputStream input) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public DescriptorProtos.UninterpretedOption.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.UninterpretedOption.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.UninterpretedOption.Builder newBuilder(DescriptorProtos.UninterpretedOption prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public DescriptorProtos.UninterpretedOption.Builder toBuilder() {
         return this == DEFAULT_INSTANCE
            ? new DescriptorProtos.UninterpretedOption.Builder()
            : new DescriptorProtos.UninterpretedOption.Builder().mergeFrom(this);
      }

      protected DescriptorProtos.UninterpretedOption.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         return new DescriptorProtos.UninterpretedOption.Builder(parent);
      }

      public static DescriptorProtos.UninterpretedOption getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser<DescriptorProtos.UninterpretedOption> parser() {
         return PARSER;
      }

      @Override
      public Parser<DescriptorProtos.UninterpretedOption> getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.UninterpretedOption getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder
         extends GeneratedMessageV3.Builder<DescriptorProtos.UninterpretedOption.Builder>
         implements DescriptorProtos.UninterpretedOptionOrBuilder {
         private int bitField0_;
         private List<DescriptorProtos.UninterpretedOption.NamePart> name_ = Collections.emptyList();
         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption.NamePart, DescriptorProtos.UninterpretedOption.NamePart.Builder, DescriptorProtos.UninterpretedOption.NamePartOrBuilder> nameBuilder_;
         private Object identifierValue_ = "";
         private long positiveIntValue_;
         private long negativeIntValue_;
         private double doubleValue_;
         private ByteString stringValue_ = ByteString.EMPTY;
         private Object aggregateValue_ = "";

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable
               .ensureFieldAccessorsInitialized(DescriptorProtos.UninterpretedOption.class, DescriptorProtos.UninterpretedOption.Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getNameFieldBuilder();
            }

         }

         public DescriptorProtos.UninterpretedOption.Builder clear() {
            super.clear();
            if (this.nameBuilder_ == null) {
               this.name_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.nameBuilder_.clear();
            }

            this.identifierValue_ = "";
            this.bitField0_ &= -3;
            this.positiveIntValue_ = 0L;
            this.bitField0_ &= -5;
            this.negativeIntValue_ = 0L;
            this.bitField0_ &= -9;
            this.doubleValue_ = 0.0;
            this.bitField0_ &= -17;
            this.stringValue_ = ByteString.EMPTY;
            this.bitField0_ &= -33;
            this.aggregateValue_ = "";
            this.bitField0_ &= -65;
            return this;
         }

         @Override
         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_descriptor;
         }

         public DescriptorProtos.UninterpretedOption getDefaultInstanceForType() {
            return DescriptorProtos.UninterpretedOption.getDefaultInstance();
         }

         public DescriptorProtos.UninterpretedOption build() {
            DescriptorProtos.UninterpretedOption result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DescriptorProtos.UninterpretedOption buildPartial() {
            DescriptorProtos.UninterpretedOption result = new DescriptorProtos.UninterpretedOption(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if (this.nameBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.name_ = Collections.unmodifiableList(this.name_);
                  this.bitField0_ &= -2;
               }

               result.name_ = this.name_;
            } else {
               result.name_ = this.nameBuilder_.build();
            }

            if ((from_bitField0_ & 2) != 0) {
               to_bitField0_ |= 1;
            }

            result.identifierValue_ = this.identifierValue_;
            if ((from_bitField0_ & 4) != 0) {
               result.positiveIntValue_ = this.positiveIntValue_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 8) != 0) {
               result.negativeIntValue_ = this.negativeIntValue_;
               to_bitField0_ |= 4;
            }

            if ((from_bitField0_ & 16) != 0) {
               result.doubleValue_ = this.doubleValue_;
               to_bitField0_ |= 8;
            }

            if ((from_bitField0_ & 32) != 0) {
               to_bitField0_ |= 16;
            }

            result.stringValue_ = this.stringValue_;
            if ((from_bitField0_ & 64) != 0) {
               to_bitField0_ |= 32;
            }

            result.aggregateValue_ = this.aggregateValue_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public DescriptorProtos.UninterpretedOption.Builder clone() {
            return (DescriptorProtos.UninterpretedOption.Builder)super.clone();
         }

         public DescriptorProtos.UninterpretedOption.Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.setField(field, value);
         }

         public DescriptorProtos.UninterpretedOption.Builder clearField(Descriptors.FieldDescriptor field) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.clearField(field);
         }

         public DescriptorProtos.UninterpretedOption.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.clearOneof(oneof);
         }

         public DescriptorProtos.UninterpretedOption.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.setRepeatedField(field, index, value);
         }

         public DescriptorProtos.UninterpretedOption.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.addRepeatedField(field, value);
         }

         public DescriptorProtos.UninterpretedOption.Builder mergeFrom(Message other) {
            if (other instanceof DescriptorProtos.UninterpretedOption) {
               return this.mergeFrom((DescriptorProtos.UninterpretedOption)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public DescriptorProtos.UninterpretedOption.Builder mergeFrom(DescriptorProtos.UninterpretedOption other) {
            if (other == DescriptorProtos.UninterpretedOption.getDefaultInstance()) {
               return this;
            } else {
               if (this.nameBuilder_ == null) {
                  if (!other.name_.isEmpty()) {
                     if (this.name_.isEmpty()) {
                        this.name_ = other.name_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureNameIsMutable();
                        this.name_.addAll(other.name_);
                     }

                     this.onChanged();
                  }
               } else if (!other.name_.isEmpty()) {
                  if (this.nameBuilder_.isEmpty()) {
                     this.nameBuilder_.dispose();
                     this.nameBuilder_ = null;
                     this.name_ = other.name_;
                     this.bitField0_ &= -2;
                     this.nameBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getNameFieldBuilder() : null;
                  } else {
                     this.nameBuilder_.addAllMessages(other.name_);
                  }
               }

               if (other.hasIdentifierValue()) {
                  this.bitField0_ |= 2;
                  this.identifierValue_ = other.identifierValue_;
                  this.onChanged();
               }

               if (other.hasPositiveIntValue()) {
                  this.setPositiveIntValue(other.getPositiveIntValue());
               }

               if (other.hasNegativeIntValue()) {
                  this.setNegativeIntValue(other.getNegativeIntValue());
               }

               if (other.hasDoubleValue()) {
                  this.setDoubleValue(other.getDoubleValue());
               }

               if (other.hasStringValue()) {
                  this.setStringValue(other.getStringValue());
               }

               if (other.hasAggregateValue()) {
                  this.bitField0_ |= 64;
                  this.aggregateValue_ = other.aggregateValue_;
                  this.onChanged();
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         @Override
         public final boolean isInitialized() {
            for(int i = 0; i < this.getNameCount(); ++i) {
               if (!this.getName(i).isInitialized()) {
                  return false;
               }
            }

            return true;
         }

         public DescriptorProtos.UninterpretedOption.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DescriptorProtos.UninterpretedOption parsedMessage = null;

            try {
               parsedMessage = DescriptorProtos.UninterpretedOption.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException var8) {
               parsedMessage = (DescriptorProtos.UninterpretedOption)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureNameIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.name_ = new ArrayList(this.name_);
               this.bitField0_ |= 1;
            }

         }

         @Override
         public List<DescriptorProtos.UninterpretedOption.NamePart> getNameList() {
            return this.nameBuilder_ == null ? Collections.unmodifiableList(this.name_) : this.nameBuilder_.getMessageList();
         }

         @Override
         public int getNameCount() {
            return this.nameBuilder_ == null ? this.name_.size() : this.nameBuilder_.getCount();
         }

         @Override
         public DescriptorProtos.UninterpretedOption.NamePart getName(int index) {
            return this.nameBuilder_ == null ? (DescriptorProtos.UninterpretedOption.NamePart)this.name_.get(index) : this.nameBuilder_.getMessage(index);
         }

         public DescriptorProtos.UninterpretedOption.Builder setName(int index, DescriptorProtos.UninterpretedOption.NamePart value) {
            if (this.nameBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureNameIsMutable();
               this.name_.set(index, value);
               this.onChanged();
            } else {
               this.nameBuilder_.setMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder setName(int index, DescriptorProtos.UninterpretedOption.NamePart.Builder builderForValue) {
            if (this.nameBuilder_ == null) {
               this.ensureNameIsMutable();
               this.name_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.nameBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder addName(DescriptorProtos.UninterpretedOption.NamePart value) {
            if (this.nameBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureNameIsMutable();
               this.name_.add(value);
               this.onChanged();
            } else {
               this.nameBuilder_.addMessage(value);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder addName(int index, DescriptorProtos.UninterpretedOption.NamePart value) {
            if (this.nameBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureNameIsMutable();
               this.name_.add(index, value);
               this.onChanged();
            } else {
               this.nameBuilder_.addMessage(index, value);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder addName(DescriptorProtos.UninterpretedOption.NamePart.Builder builderForValue) {
            if (this.nameBuilder_ == null) {
               this.ensureNameIsMutable();
               this.name_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.nameBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder addName(int index, DescriptorProtos.UninterpretedOption.NamePart.Builder builderForValue) {
            if (this.nameBuilder_ == null) {
               this.ensureNameIsMutable();
               this.name_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.nameBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder addAllName(Iterable<? extends DescriptorProtos.UninterpretedOption.NamePart> values) {
            if (this.nameBuilder_ == null) {
               this.ensureNameIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.name_);
               this.onChanged();
            } else {
               this.nameBuilder_.addAllMessages(values);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder clearName() {
            if (this.nameBuilder_ == null) {
               this.name_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.nameBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder removeName(int index) {
            if (this.nameBuilder_ == null) {
               this.ensureNameIsMutable();
               this.name_.remove(index);
               this.onChanged();
            } else {
               this.nameBuilder_.remove(index);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.NamePart.Builder getNameBuilder(int index) {
            return this.getNameFieldBuilder().getBuilder(index);
         }

         @Override
         public DescriptorProtos.UninterpretedOption.NamePartOrBuilder getNameOrBuilder(int index) {
            return this.nameBuilder_ == null
               ? (DescriptorProtos.UninterpretedOption.NamePartOrBuilder)this.name_.get(index)
               : this.nameBuilder_.getMessageOrBuilder(index);
         }

         @Override
         public List<? extends DescriptorProtos.UninterpretedOption.NamePartOrBuilder> getNameOrBuilderList() {
            return this.nameBuilder_ != null ? this.nameBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.name_);
         }

         public DescriptorProtos.UninterpretedOption.NamePart.Builder addNameBuilder() {
            return this.getNameFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.NamePart.Builder addNameBuilder(int index) {
            return this.getNameFieldBuilder().addBuilder(index, DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance());
         }

         public List<DescriptorProtos.UninterpretedOption.NamePart.Builder> getNameBuilderList() {
            return this.getNameFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption.NamePart, DescriptorProtos.UninterpretedOption.NamePart.Builder, DescriptorProtos.UninterpretedOption.NamePartOrBuilder> getNameFieldBuilder() {
            if (this.nameBuilder_ == null) {
               this.nameBuilder_ = new RepeatedFieldBuilderV3<>(this.name_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.name_ = null;
            }

            return this.nameBuilder_;
         }

         @Override
         public boolean hasIdentifierValue() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public String getIdentifierValue() {
            Object ref = this.identifierValue_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.identifierValue_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getIdentifierValueBytes() {
            Object ref = this.identifierValue_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.identifierValue_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.UninterpretedOption.Builder setIdentifierValue(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.identifierValue_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.UninterpretedOption.Builder clearIdentifierValue() {
            this.bitField0_ &= -3;
            this.identifierValue_ = DescriptorProtos.UninterpretedOption.getDefaultInstance().getIdentifierValue();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder setIdentifierValueBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.identifierValue_ = value;
               this.onChanged();
               return this;
            }
         }

         @Override
         public boolean hasPositiveIntValue() {
            return (this.bitField0_ & 4) != 0;
         }

         @Override
         public long getPositiveIntValue() {
            return this.positiveIntValue_;
         }

         public DescriptorProtos.UninterpretedOption.Builder setPositiveIntValue(long value) {
            this.bitField0_ |= 4;
            this.positiveIntValue_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder clearPositiveIntValue() {
            this.bitField0_ &= -5;
            this.positiveIntValue_ = 0L;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasNegativeIntValue() {
            return (this.bitField0_ & 8) != 0;
         }

         @Override
         public long getNegativeIntValue() {
            return this.negativeIntValue_;
         }

         public DescriptorProtos.UninterpretedOption.Builder setNegativeIntValue(long value) {
            this.bitField0_ |= 8;
            this.negativeIntValue_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder clearNegativeIntValue() {
            this.bitField0_ &= -9;
            this.negativeIntValue_ = 0L;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasDoubleValue() {
            return (this.bitField0_ & 16) != 0;
         }

         @Override
         public double getDoubleValue() {
            return this.doubleValue_;
         }

         public DescriptorProtos.UninterpretedOption.Builder setDoubleValue(double value) {
            this.bitField0_ |= 16;
            this.doubleValue_ = value;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder clearDoubleValue() {
            this.bitField0_ &= -17;
            this.doubleValue_ = 0.0;
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasStringValue() {
            return (this.bitField0_ & 32) != 0;
         }

         @Override
         public ByteString getStringValue() {
            return this.stringValue_;
         }

         public DescriptorProtos.UninterpretedOption.Builder setStringValue(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 32;
               this.stringValue_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.UninterpretedOption.Builder clearStringValue() {
            this.bitField0_ &= -33;
            this.stringValue_ = DescriptorProtos.UninterpretedOption.getDefaultInstance().getStringValue();
            this.onChanged();
            return this;
         }

         @Override
         public boolean hasAggregateValue() {
            return (this.bitField0_ & 64) != 0;
         }

         @Override
         public String getAggregateValue() {
            Object ref = this.aggregateValue_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.aggregateValue_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         @Override
         public ByteString getAggregateValueBytes() {
            Object ref = this.aggregateValue_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.aggregateValue_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public DescriptorProtos.UninterpretedOption.Builder setAggregateValue(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 64;
               this.aggregateValue_ = value;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.UninterpretedOption.Builder clearAggregateValue() {
            this.bitField0_ &= -65;
            this.aggregateValue_ = DescriptorProtos.UninterpretedOption.getDefaultInstance().getAggregateValue();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder setAggregateValueBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 64;
               this.aggregateValue_ = value;
               this.onChanged();
               return this;
            }
         }

         public final DescriptorProtos.UninterpretedOption.Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.setUnknownFields(unknownFields);
         }

         public final DescriptorProtos.UninterpretedOption.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.mergeUnknownFields(unknownFields);
         }
      }

      public static final class NamePart extends GeneratedMessageV3 implements DescriptorProtos.UninterpretedOption.NamePartOrBuilder {
         private static final long serialVersionUID = 0L;
         private int bitField0_;
         public static final int NAME_PART_FIELD_NUMBER = 1;
         private volatile Object namePart_;
         public static final int IS_EXTENSION_FIELD_NUMBER = 2;
         private boolean isExtension_;
         private byte memoizedIsInitialized = -1;
         private static final DescriptorProtos.UninterpretedOption.NamePart DEFAULT_INSTANCE = new DescriptorProtos.UninterpretedOption.NamePart();
         @Deprecated
         public static final Parser<DescriptorProtos.UninterpretedOption.NamePart> PARSER = new AbstractParser<DescriptorProtos.UninterpretedOption.NamePart>() {
            public DescriptorProtos.UninterpretedOption.NamePart parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new DescriptorProtos.UninterpretedOption.NamePart(input, extensionRegistry);
            }
         };

         private NamePart(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
         }

         private NamePart() {
            this.namePart_ = "";
         }

         @Override
         protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
            return new DescriptorProtos.UninterpretedOption.NamePart();
         }

         @Override
         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private NamePart(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
               throw new NullPointerException();
            } else {
               int mutable_bitField0_ = 0;
               UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

               try {
                  boolean done = false;

                  while(!done) {
                     int tag = input.readTag();
                     switch(tag) {
                        case 0:
                           done = true;
                           break;
                        case 10:
                           ByteString bs = input.readBytes();
                           this.bitField0_ |= 1;
                           this.namePart_ = bs;
                           break;
                        case 16:
                           this.bitField0_ |= 2;
                           this.isExtension_ = input.readBool();
                           break;
                        default:
                           if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                              done = true;
                           }
                     }
                  }
               } catch (InvalidProtocolBufferException var13) {
                  throw var13.setUnfinishedMessage(this);
               } catch (UninitializedMessageException var14) {
                  throw var14.asInvalidProtocolBufferException().setUnfinishedMessage(this);
               } catch (IOException var15) {
                  throw new InvalidProtocolBufferException(var15).setUnfinishedMessage(this);
               } finally {
                  this.unknownFields = unknownFields.build();
                  this.makeExtensionsImmutable();
               }

            }
         }

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor;
         }

         @Override
         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable
               .ensureFieldAccessorsInitialized(
                  DescriptorProtos.UninterpretedOption.NamePart.class, DescriptorProtos.UninterpretedOption.NamePart.Builder.class
               );
         }

         @Override
         public boolean hasNamePart() {
            return (this.bitField0_ & 1) != 0;
         }

         @Override
         public String getNamePart() {
            Object ref = this.namePart_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.namePart_ = s;
               }

               return s;
            }
         }

         @Override
         public ByteString getNamePartBytes() {
            Object ref = this.namePart_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.namePart_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         @Override
         public boolean hasIsExtension() {
            return (this.bitField0_ & 2) != 0;
         }

         @Override
         public boolean getIsExtension() {
            return this.isExtension_;
         }

         @Override
         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1) {
               return true;
            } else if (isInitialized == 0) {
               return false;
            } else if (!this.hasNamePart()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (!this.hasIsExtension()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         @Override
         public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) != 0) {
               GeneratedMessageV3.writeString(output, 1, this.namePart_);
            }

            if ((this.bitField0_ & 2) != 0) {
               output.writeBool(2, this.isExtension_);
            }

            this.unknownFields.writeTo(output);
         }

         @Override
         public int getSerializedSize() {
            int size = this.memoizedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) != 0) {
                  size += GeneratedMessageV3.computeStringSize(1, this.namePart_);
               }

               if ((this.bitField0_ & 2) != 0) {
                  size += CodedOutputStream.computeBoolSize(2, this.isExtension_);
               }

               size += this.unknownFields.getSerializedSize();
               this.memoizedSize = size;
               return size;
            }
         }

         @Override
         public boolean equals(Object obj) {
            if (obj == this) {
               return true;
            } else if (!(obj instanceof DescriptorProtos.UninterpretedOption.NamePart)) {
               return super.equals(obj);
            } else {
               DescriptorProtos.UninterpretedOption.NamePart other = (DescriptorProtos.UninterpretedOption.NamePart)obj;
               if (this.hasNamePart() != other.hasNamePart()) {
                  return false;
               } else if (this.hasNamePart() && !this.getNamePart().equals(other.getNamePart())) {
                  return false;
               } else if (this.hasIsExtension() != other.hasIsExtension()) {
                  return false;
               } else if (this.hasIsExtension() && this.getIsExtension() != other.getIsExtension()) {
                  return false;
               } else {
                  return this.unknownFields.equals(other.unknownFields);
               }
            }
         }

         @Override
         public int hashCode() {
            if (this.memoizedHashCode != 0) {
               return this.memoizedHashCode;
            } else {
               int hash = 41;
               hash = 19 * hash + getDescriptor().hashCode();
               if (this.hasNamePart()) {
                  hash = 37 * hash + 1;
                  hash = 53 * hash + this.getNamePart().hashCode();
               }

               if (this.hasIsExtension()) {
                  hash = 37 * hash + 2;
                  hash = 53 * hash + Internal.hashBoolean(this.getIsExtension());
               }

               hash = 29 * hash + this.unknownFields.hashCode();
               this.memoizedHashCode = hash;
               return hash;
            }
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(InputStream input) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseDelimitedFrom(InputStream input) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(CodedInputStream input) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
         }

         public DescriptorProtos.UninterpretedOption.NamePart.Builder newBuilderForType() {
            return newBuilder();
         }

         public static DescriptorProtos.UninterpretedOption.NamePart.Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
         }

         public static DescriptorProtos.UninterpretedOption.NamePart.Builder newBuilder(DescriptorProtos.UninterpretedOption.NamePart prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
         }

         public DescriptorProtos.UninterpretedOption.NamePart.Builder toBuilder() {
            return this == DEFAULT_INSTANCE
               ? new DescriptorProtos.UninterpretedOption.NamePart.Builder()
               : new DescriptorProtos.UninterpretedOption.NamePart.Builder().mergeFrom(this);
         }

         protected DescriptorProtos.UninterpretedOption.NamePart.Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
            return new DescriptorProtos.UninterpretedOption.NamePart.Builder(parent);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart getDefaultInstance() {
            return DEFAULT_INSTANCE;
         }

         public static Parser<DescriptorProtos.UninterpretedOption.NamePart> parser() {
            return PARSER;
         }

         @Override
         public Parser<DescriptorProtos.UninterpretedOption.NamePart> getParserForType() {
            return PARSER;
         }

         public DescriptorProtos.UninterpretedOption.NamePart getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
         }

         public static final class Builder
            extends GeneratedMessageV3.Builder<DescriptorProtos.UninterpretedOption.NamePart.Builder>
            implements DescriptorProtos.UninterpretedOption.NamePartOrBuilder {
            private int bitField0_;
            private Object namePart_ = "";
            private boolean isExtension_;

            public static final Descriptors.Descriptor getDescriptor() {
               return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor;
            }

            @Override
            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
               return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                     DescriptorProtos.UninterpretedOption.NamePart.class, DescriptorProtos.UninterpretedOption.NamePart.Builder.class
                  );
            }

            private Builder() {
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
               super(parent);
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               }

            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder clear() {
               super.clear();
               this.namePart_ = "";
               this.bitField0_ &= -2;
               this.isExtension_ = false;
               this.bitField0_ &= -3;
               return this;
            }

            @Override
            public Descriptors.Descriptor getDescriptorForType() {
               return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor;
            }

            public DescriptorProtos.UninterpretedOption.NamePart getDefaultInstanceForType() {
               return DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance();
            }

            public DescriptorProtos.UninterpretedOption.NamePart build() {
               DescriptorProtos.UninterpretedOption.NamePart result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public DescriptorProtos.UninterpretedOption.NamePart buildPartial() {
               DescriptorProtos.UninterpretedOption.NamePart result = new DescriptorProtos.UninterpretedOption.NamePart(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) != 0) {
                  to_bitField0_ |= 1;
               }

               result.namePart_ = this.namePart_;
               if ((from_bitField0_ & 2) != 0) {
                  result.isExtension_ = this.isExtension_;
                  to_bitField0_ |= 2;
               }

               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder clone() {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.clone();
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder setField(Descriptors.FieldDescriptor field, Object value) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.setField(field, value);
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder clearField(Descriptors.FieldDescriptor field) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.clearField(field);
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder clearOneof(Descriptors.OneofDescriptor oneof) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.clearOneof(oneof);
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.setRepeatedField(field, index, value);
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.addRepeatedField(field, value);
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder mergeFrom(Message other) {
               if (other instanceof DescriptorProtos.UninterpretedOption.NamePart) {
                  return this.mergeFrom((DescriptorProtos.UninterpretedOption.NamePart)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder mergeFrom(DescriptorProtos.UninterpretedOption.NamePart other) {
               if (other == DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasNamePart()) {
                     this.bitField0_ |= 1;
                     this.namePart_ = other.namePart_;
                     this.onChanged();
                  }

                  if (other.hasIsExtension()) {
                     this.setIsExtension(other.getIsExtension());
                  }

                  this.mergeUnknownFields(other.unknownFields);
                  this.onChanged();
                  return this;
               }
            }

            @Override
            public final boolean isInitialized() {
               if (!this.hasNamePart()) {
                  return false;
               } else {
                  return this.hasIsExtension();
               }
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               DescriptorProtos.UninterpretedOption.NamePart parsedMessage = null;

               try {
                  parsedMessage = DescriptorProtos.UninterpretedOption.NamePart.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException var8) {
                  parsedMessage = (DescriptorProtos.UninterpretedOption.NamePart)var8.getUnfinishedMessage();
                  throw var8.unwrapIOException();
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            @Override
            public boolean hasNamePart() {
               return (this.bitField0_ & 1) != 0;
            }

            @Override
            public String getNamePart() {
               Object ref = this.namePart_;
               if (!(ref instanceof String)) {
                  ByteString bs = (ByteString)ref;
                  String s = bs.toStringUtf8();
                  if (bs.isValidUtf8()) {
                     this.namePart_ = s;
                  }

                  return s;
               } else {
                  return (String)ref;
               }
            }

            @Override
            public ByteString getNamePartBytes() {
               Object ref = this.namePart_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.namePart_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder setNamePart(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.namePart_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder clearNamePart() {
               this.bitField0_ &= -2;
               this.namePart_ = DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance().getNamePart();
               this.onChanged();
               return this;
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder setNamePartBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.namePart_ = value;
                  this.onChanged();
                  return this;
               }
            }

            @Override
            public boolean hasIsExtension() {
               return (this.bitField0_ & 2) != 0;
            }

            @Override
            public boolean getIsExtension() {
               return this.isExtension_;
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder setIsExtension(boolean value) {
               this.bitField0_ |= 2;
               this.isExtension_ = value;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder clearIsExtension() {
               this.bitField0_ &= -3;
               this.isExtension_ = false;
               this.onChanged();
               return this;
            }

            public final DescriptorProtos.UninterpretedOption.NamePart.Builder setUnknownFields(UnknownFieldSet unknownFields) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.setUnknownFields(unknownFields);
            }

            public final DescriptorProtos.UninterpretedOption.NamePart.Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.mergeUnknownFields(unknownFields);
            }
         }
      }

      public interface NamePartOrBuilder extends MessageOrBuilder {
         boolean hasNamePart();

         String getNamePart();

         ByteString getNamePartBytes();

         boolean hasIsExtension();

         boolean getIsExtension();
      }
   }

   public interface UninterpretedOptionOrBuilder extends MessageOrBuilder {
      List<DescriptorProtos.UninterpretedOption.NamePart> getNameList();

      DescriptorProtos.UninterpretedOption.NamePart getName(int var1);

      int getNameCount();

      List<? extends DescriptorProtos.UninterpretedOption.NamePartOrBuilder> getNameOrBuilderList();

      DescriptorProtos.UninterpretedOption.NamePartOrBuilder getNameOrBuilder(int var1);

      boolean hasIdentifierValue();

      String getIdentifierValue();

      ByteString getIdentifierValueBytes();

      boolean hasPositiveIntValue();

      long getPositiveIntValue();

      boolean hasNegativeIntValue();

      long getNegativeIntValue();

      boolean hasDoubleValue();

      double getDoubleValue();

      boolean hasStringValue();

      ByteString getStringValue();

      boolean hasAggregateValue();

      String getAggregateValue();

      ByteString getAggregateValueBytes();
   }
}
